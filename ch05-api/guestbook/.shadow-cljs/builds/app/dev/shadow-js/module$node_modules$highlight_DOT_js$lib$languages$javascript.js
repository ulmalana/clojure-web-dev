["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/highlight_DOT_js/lib/languages/javascript.js"],"~:js","shadow$provide.module$node_modules$highlight_DOT_js$lib$languages$javascript=function(global,require,module,exports){function concat(args){for(var $jscomp$restParams=[],$jscomp$restIndex=0;$jscomp$restIndex<arguments.length;++$jscomp$restIndex)$jscomp$restParams[$jscomp$restIndex-0]=arguments[$jscomp$restIndex];return $jscomp$restParams.map(function(x){x=x?\"string\"===typeof x?x:x.source:null;return x}).join(\"\")}var KEYWORDS=\"as in of if for while finally var new function do return void else break catch instanceof with throw case default try switch continue typeof delete let yield const class debugger async await static import from export extends\".split(\" \"),\nLITERALS=\"true false null undefined NaN Infinity\".split(\" \"),TYPES=\"Intl DataView Number Math Date String RegExp Object Function Boolean Error Symbol Set Map WeakSet WeakMap Proxy Reflect JSON Promise Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array Float32Array Array Uint8Array Uint8ClampedArray ArrayBuffer BigInt64Array BigUint64Array BigInt\".split(\" \"),ERROR_TYPES=\"EvalError InternalError RangeError ReferenceError SyntaxError TypeError URIError\".split(\" \"),BUILT_IN_GLOBALS=\n\"setInterval setTimeout clearInterval clearTimeout require exports eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent encodeURI encodeURIComponent escape unescape\".split(\" \"),BUILT_IN_VARIABLES=\"arguments this super console window document localStorage module global\".split(\" \"),BUILT_INS=[].concat(BUILT_IN_GLOBALS,TYPES,ERROR_TYPES);module.exports=function(hljs){var JSCompiler_object_inline_begin_253=/<[A-Za-z0-9\\\\._:-]+/,JSCompiler_object_inline_end_254=/\\/[A-Za-z0-9\\\\._:-]+>|\\/>/,\nKEYWORDS$1={$pattern:\"[A-Za-z$_][0-9A-Za-z$_]*\",keyword:KEYWORDS,literal:LITERALS,built_in:BUILT_INS,\"variable.language\":BUILT_IN_VARIABLES},NUMBER={className:\"number\",variants:[{begin:\"(\\\\b(0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*)((\\\\.([0-9](_?[0-9])*))|\\\\.)?|(\\\\.([0-9](_?[0-9])*)))[eE][+-]?([0-9](_?[0-9])*)\\\\b\"},{begin:\"\\\\b(0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*)\\\\b((\\\\.([0-9](_?[0-9])*))\\\\b|\\\\.)?|(\\\\.([0-9](_?[0-9])*))\\\\b\"},{begin:\"\\\\b(0|[1-9](_?[0-9])*)n\\\\b\"},{begin:\"\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\\\b\"},\n{begin:\"\\\\b0[bB][0-1](_?[0-1])*n?\\\\b\"},{begin:\"\\\\b0[oO][0-7](_?[0-7])*n?\\\\b\"},{begin:\"\\\\b0[0-7]+n?\\\\b\"}],relevance:0},SUBST={className:\"subst\",begin:\"\\\\$\\\\{\",end:\"\\\\}\",keywords:KEYWORDS$1,contains:[]},HTML_TEMPLATE={begin:\"html`\",end:\"\",starts:{end:\"`\",returnEnd:!1,contains:[hljs.BACKSLASH_ESCAPE,SUBST],subLanguage:\"xml\"}},CSS_TEMPLATE={begin:\"css`\",end:\"\",starts:{end:\"`\",returnEnd:!1,contains:[hljs.BACKSLASH_ESCAPE,SUBST],subLanguage:\"css\"}},TEMPLATE_STRING={className:\"string\",begin:\"`\",end:\"`\",\ncontains:[hljs.BACKSLASH_ESCAPE,SUBST]},COMMENT={className:\"comment\",variants:[hljs.COMMENT(/\\/\\*\\*(?!\\/)/,\"\\\\*/\",{relevance:0,contains:[{begin:\"(?\\x3d@[A-Za-z]+)\",relevance:0,contains:[{className:\"doctag\",begin:\"@[A-Za-z]+\"},{className:\"type\",begin:\"\\\\{\",end:\"\\\\}\",excludeEnd:!0,excludeBegin:!0,relevance:0},{className:\"variable\",begin:\"[A-Za-z$_][0-9A-Za-z$_]*(?\\x3d\\\\s*(-)|$)\",endsParent:!0,relevance:0},{begin:/(?=[^\\n])\\s/,relevance:0}]}]}),hljs.C_BLOCK_COMMENT_MODE,hljs.C_LINE_COMMENT_MODE]},SUBST_INTERNALS=\n[hljs.APOS_STRING_MODE,hljs.QUOTE_STRING_MODE,HTML_TEMPLATE,CSS_TEMPLATE,TEMPLATE_STRING,NUMBER,hljs.REGEXP_MODE];SUBST.contains=SUBST_INTERNALS.concat({begin:/\\{/,end:/\\}/,keywords:KEYWORDS$1,contains:[\"self\"].concat(SUBST_INTERNALS)});SUBST=[].concat(COMMENT,SUBST.contains);SUBST=SUBST.concat([{begin:/\\(/,end:/\\)/,keywords:KEYWORDS$1,contains:[\"self\"].concat(SUBST)}]);SUBST_INTERNALS={className:\"params\",begin:/\\(/,end:/\\)/,excludeBegin:!0,excludeEnd:!0,keywords:KEYWORDS$1,contains:SUBST};var CLASS_OR_EXTENDS=\n{variants:[{match:[/class/,/\\s+/,\"[A-Za-z$_][0-9A-Za-z$_]*\"],scope:{1:\"keyword\",3:\"title.class\"}},{match:[/extends/,/\\s+/,concat(\"[A-Za-z$_][0-9A-Za-z$_]*\",\"(\",concat(/\\./,\"[A-Za-z$_][0-9A-Za-z$_]*\"),\")*\")],scope:{1:\"keyword\",3:\"title.class.inherited\"}}]},CLASS_REFERENCE={relevance:0,match:/\\b[A-Z][a-z]+([A-Z][a-z]+)*/,className:\"title.class\",keywords:{_:[].concat($jscomp.arrayFromIterable(TYPES),$jscomp.arrayFromIterable(ERROR_TYPES))}},FUNCTION_DEFINITION={variants:[{match:[/function/,/\\s+/,\"[A-Za-z$_][0-9A-Za-z$_]*\",\n/(?=\\s*\\()/]},{match:[/function/,/\\s*(?=\\()/]}],className:{1:\"keyword\",3:\"title.function\"},label:\"func.def\",contains:[SUBST_INTERNALS],illegal:/%/},FUNCTION_CALL={match:concat(/\\b/,concat(\"(?!\",[].concat($jscomp.arrayFromIterable(BUILT_IN_GLOBALS),[\"super\"]).join(\"|\"),\")\"),\"[A-Za-z$_][0-9A-Za-z$_]*\",concat(\"(?\\x3d\",/\\(/,\")\")),className:\"title.function\",relevance:0},PROPERTY_ACCESS={begin:concat(/\\./,concat(\"(?\\x3d\",concat(\"[A-Za-z$_][0-9A-Za-z$_]*\",/(?![0-9A-Za-z$_(])/),\")\")),end:\"[A-Za-z$_][0-9A-Za-z$_]*\",\nexcludeBegin:!0,keywords:\"prototype\",className:\"property\",relevance:0},GETTER_OR_SETTER={match:[/get|set/,/\\s+/,\"[A-Za-z$_][0-9A-Za-z$_]*\",/(?=\\()/],className:{1:\"keyword\",3:\"title.function\"},contains:[{begin:/\\(\\)/},SUBST_INTERNALS]},FUNC_LEAD_IN_RE=\"(\\\\([^()]*(\\\\([^()]*(\\\\([^()]*\\\\)[^()]*)*\\\\)[^()]*)*\\\\)|\"+hljs.UNDERSCORE_IDENT_RE+\")\\\\s*\\x3d\\x3e\",FUNCTION_VARIABLE={match:[/const|var|let/,/\\s+/,\"[A-Za-z$_][0-9A-Za-z$_]*\",/\\s*/,/=\\s*/,concat(\"(?\\x3d\",FUNC_LEAD_IN_RE,\")\")],className:{1:\"keyword\",3:\"title.function\"},\ncontains:[SUBST_INTERNALS]};return{name:\"Javascript\",aliases:[\"js\",\"jsx\",\"mjs\",\"cjs\"],keywords:KEYWORDS$1,exports:{PARAMS_CONTAINS:SUBST},illegal:/#(?![$_A-z])/,contains:[hljs.SHEBANG({label:\"shebang\",binary:\"node\",relevance:5}),{label:\"use_strict\",className:\"meta\",relevance:10,begin:/^\\s*['\"]use (strict|asm)['\"]/},hljs.APOS_STRING_MODE,hljs.QUOTE_STRING_MODE,HTML_TEMPLATE,CSS_TEMPLATE,TEMPLATE_STRING,COMMENT,NUMBER,CLASS_REFERENCE,{className:\"attr\",begin:\"[A-Za-z$_][0-9A-Za-z$_]*\"+concat(\"(?\\x3d\",\n\":\",\")\"),relevance:0},FUNCTION_VARIABLE,{begin:\"(\"+hljs.RE_STARTERS_RE+\"|\\\\b(case|return|throw)\\\\b)\\\\s*\",keywords:\"return throw case\",relevance:0,contains:[COMMENT,hljs.REGEXP_MODE,{className:\"function\",begin:FUNC_LEAD_IN_RE,returnBegin:!0,end:\"\\\\s*\\x3d\\x3e\",contains:[{className:\"params\",variants:[{begin:hljs.UNDERSCORE_IDENT_RE,relevance:0},{className:null,begin:/\\(\\s*\\)/,skip:!0},{begin:/\\(/,end:/\\)/,excludeBegin:!0,excludeEnd:!0,keywords:KEYWORDS$1,contains:SUBST}]}]},{begin:/,/,relevance:0},{match:/\\s+/,\nrelevance:0},{variants:[{begin:\"\\x3c\\x3e\",end:\"\\x3c/\\x3e\"},{begin:JSCompiler_object_inline_begin_253,\"on:begin\":function(match,response){var afterMatchIndex=match[0].length+match.index,nextChar=match.input[afterMatchIndex];\"\\x3c\"===nextChar?response.ignoreMatch():\"\\x3e\"===nextChar&&(nextChar=\"\\x3c/\"+match[0].slice(1),-1!==match.input.indexOf(nextChar,afterMatchIndex)||response.ignoreMatch())},end:JSCompiler_object_inline_end_254}],subLanguage:\"xml\",contains:[{begin:JSCompiler_object_inline_begin_253,\nend:JSCompiler_object_inline_end_254,skip:!0,contains:[\"self\"]}]}]},FUNCTION_DEFINITION,{beginKeywords:\"while if switch catch for\"},{begin:\"\\\\b(?!function)\"+hljs.UNDERSCORE_IDENT_RE+\"\\\\([^()]*(\\\\([^()]*(\\\\([^()]*\\\\)[^()]*)*\\\\)[^()]*)*\\\\)\\\\s*\\\\{\",returnBegin:!0,label:\"func.def\",contains:[SUBST_INTERNALS,hljs.inherit(hljs.TITLE_MODE,{begin:\"[A-Za-z$_][0-9A-Za-z$_]*\",className:\"title.function\"})]},{match:/\\.\\.\\./,relevance:0},PROPERTY_ACCESS,{match:\"\\\\$[A-Za-z$_][0-9A-Za-z$_]*\",relevance:0},{match:[/\\bconstructor(?=\\s*\\()/],\nclassName:{1:\"title.function\"},contains:[SUBST_INTERNALS]},FUNCTION_CALL,{relevance:0,match:/\\b[A-Z][A-Z_0-9]+\\b/,className:\"variable.constant\"},CLASS_OR_EXTENDS,GETTER_OR_SETTER,{match:/\\$[(.]/}]}}}","~:source","shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$javascript\"] = function(global,require,module,exports) {\nconst IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\nconst KEYWORDS = [\n  \"as\", // for exports\n  \"in\",\n  \"of\",\n  \"if\",\n  \"for\",\n  \"while\",\n  \"finally\",\n  \"var\",\n  \"new\",\n  \"function\",\n  \"do\",\n  \"return\",\n  \"void\",\n  \"else\",\n  \"break\",\n  \"catch\",\n  \"instanceof\",\n  \"with\",\n  \"throw\",\n  \"case\",\n  \"default\",\n  \"try\",\n  \"switch\",\n  \"continue\",\n  \"typeof\",\n  \"delete\",\n  \"let\",\n  \"yield\",\n  \"const\",\n  \"class\",\n  // JS handles these with a special rule\n  // \"get\",\n  // \"set\",\n  \"debugger\",\n  \"async\",\n  \"await\",\n  \"static\",\n  \"import\",\n  \"from\",\n  \"export\",\n  \"extends\"\n];\nconst LITERALS = [\n  \"true\",\n  \"false\",\n  \"null\",\n  \"undefined\",\n  \"NaN\",\n  \"Infinity\"\n];\n\nconst TYPES = [\n  \"Intl\",\n  \"DataView\",\n  \"Number\",\n  \"Math\",\n  \"Date\",\n  \"String\",\n  \"RegExp\",\n  \"Object\",\n  \"Function\",\n  \"Boolean\",\n  \"Error\",\n  \"Symbol\",\n  \"Set\",\n  \"Map\",\n  \"WeakSet\",\n  \"WeakMap\",\n  \"Proxy\",\n  \"Reflect\",\n  \"JSON\",\n  \"Promise\",\n  \"Float64Array\",\n  \"Int16Array\",\n  \"Int32Array\",\n  \"Int8Array\",\n  \"Uint16Array\",\n  \"Uint32Array\",\n  \"Float32Array\",\n  \"Array\",\n  \"Uint8Array\",\n  \"Uint8ClampedArray\",\n  \"ArrayBuffer\",\n  \"BigInt64Array\",\n  \"BigUint64Array\",\n  \"BigInt\"\n];\n\nconst ERROR_TYPES = [\n  \"EvalError\",\n  \"InternalError\",\n  \"RangeError\",\n  \"ReferenceError\",\n  \"SyntaxError\",\n  \"TypeError\",\n  \"URIError\"\n];\n\nconst BUILT_IN_GLOBALS = [\n  \"setInterval\",\n  \"setTimeout\",\n  \"clearInterval\",\n  \"clearTimeout\",\n\n  \"require\",\n  \"exports\",\n\n  \"eval\",\n  \"isFinite\",\n  \"isNaN\",\n  \"parseFloat\",\n  \"parseInt\",\n  \"decodeURI\",\n  \"decodeURIComponent\",\n  \"encodeURI\",\n  \"encodeURIComponent\",\n  \"escape\",\n  \"unescape\"\n];\n\nconst BUILT_IN_VARIABLES = [\n  \"arguments\",\n  \"this\",\n  \"super\",\n  \"console\",\n  \"window\",\n  \"document\",\n  \"localStorage\",\n  \"module\",\n  \"global\" // Node.js\n];\n\nconst BUILT_INS = [].concat(\n  BUILT_IN_GLOBALS,\n  TYPES,\n  ERROR_TYPES\n);\n\n/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: JavaScript\nDescription: JavaScript (JS) is a lightweight, interpreted, or just-in-time compiled programming language with first-class functions.\nCategory: common, scripting, web\nWebsite: https://developer.mozilla.org/en-US/docs/Web/JavaScript\n*/\n\n/** @type LanguageFn */\nfunction javascript(hljs) {\n  /**\n   * Takes a string like \"<Booger\" and checks to see\n   * if we can find a matching \"</Booger\" later in the\n   * content.\n   * @param {RegExpMatchArray} match\n   * @param {{after:number}} param1\n   */\n  const hasClosingTag = (match, { after }) => {\n    const tag = \"</\" + match[0].slice(1);\n    const pos = match.input.indexOf(tag, after);\n    return pos !== -1;\n  };\n\n  const IDENT_RE$1 = IDENT_RE;\n  const FRAGMENT = {\n    begin: '<>',\n    end: '</>'\n  };\n  const XML_TAG = {\n    begin: /<[A-Za-z0-9\\\\._:-]+/,\n    end: /\\/[A-Za-z0-9\\\\._:-]+>|\\/>/,\n    /**\n     * @param {RegExpMatchArray} match\n     * @param {CallbackResponse} response\n     */\n    isTrulyOpeningTag: (match, response) => {\n      const afterMatchIndex = match[0].length + match.index;\n      const nextChar = match.input[afterMatchIndex];\n      // nested type?\n      // HTML should not include another raw `<` inside a tag\n      // But a type might: `<Array<Array<number>>`, etc.\n      if (nextChar === \"<\") {\n        response.ignoreMatch();\n        return;\n      }\n      // <something>\n      // This is now either a tag or a type.\n      if (nextChar === \">\") {\n        // if we cannot find a matching closing tag, then we\n        // will ignore it\n        if (!hasClosingTag(match, { after: afterMatchIndex })) {\n          response.ignoreMatch();\n        }\n      }\n    }\n  };\n  const KEYWORDS$1 = {\n    $pattern: IDENT_RE,\n    keyword: KEYWORDS,\n    literal: LITERALS,\n    built_in: BUILT_INS,\n    \"variable.language\": BUILT_IN_VARIABLES\n  };\n\n  // https://tc39.es/ecma262/#sec-literals-numeric-literals\n  const decimalDigits = '[0-9](_?[0-9])*';\n  const frac = `\\\\.(${decimalDigits})`;\n  // DecimalIntegerLiteral, including Annex B NonOctalDecimalIntegerLiteral\n  // https://tc39.es/ecma262/#sec-additional-syntax-numeric-literals\n  const decimalInteger = `0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*`;\n  const NUMBER = {\n    className: 'number',\n    variants: [\n      // DecimalLiteral\n      { begin: `(\\\\b(${decimalInteger})((${frac})|\\\\.)?|(${frac}))` +\n        `[eE][+-]?(${decimalDigits})\\\\b` },\n      { begin: `\\\\b(${decimalInteger})\\\\b((${frac})\\\\b|\\\\.)?|(${frac})\\\\b` },\n\n      // DecimalBigIntegerLiteral\n      { begin: `\\\\b(0|[1-9](_?[0-9])*)n\\\\b` },\n\n      // NonDecimalIntegerLiteral\n      { begin: \"\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\\\b\" },\n      { begin: \"\\\\b0[bB][0-1](_?[0-1])*n?\\\\b\" },\n      { begin: \"\\\\b0[oO][0-7](_?[0-7])*n?\\\\b\" },\n\n      // LegacyOctalIntegerLiteral (does not include underscore separators)\n      // https://tc39.es/ecma262/#sec-additional-syntax-numeric-literals\n      { begin: \"\\\\b0[0-7]+n?\\\\b\" },\n    ],\n    relevance: 0\n  };\n\n  const SUBST = {\n    className: 'subst',\n    begin: '\\\\$\\\\{',\n    end: '\\\\}',\n    keywords: KEYWORDS$1,\n    contains: [] // defined later\n  };\n  const HTML_TEMPLATE = {\n    begin: 'html`',\n    end: '',\n    starts: {\n      end: '`',\n      returnEnd: false,\n      contains: [\n        hljs.BACKSLASH_ESCAPE,\n        SUBST\n      ],\n      subLanguage: 'xml'\n    }\n  };\n  const CSS_TEMPLATE = {\n    begin: 'css`',\n    end: '',\n    starts: {\n      end: '`',\n      returnEnd: false,\n      contains: [\n        hljs.BACKSLASH_ESCAPE,\n        SUBST\n      ],\n      subLanguage: 'css'\n    }\n  };\n  const TEMPLATE_STRING = {\n    className: 'string',\n    begin: '`',\n    end: '`',\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      SUBST\n    ]\n  };\n  const JSDOC_COMMENT = hljs.COMMENT(\n    /\\/\\*\\*(?!\\/)/,\n    '\\\\*/',\n    {\n      relevance: 0,\n      contains: [\n        {\n          begin: '(?=@[A-Za-z]+)',\n          relevance: 0,\n          contains: [\n            {\n              className: 'doctag',\n              begin: '@[A-Za-z]+'\n            },\n            {\n              className: 'type',\n              begin: '\\\\{',\n              end: '\\\\}',\n              excludeEnd: true,\n              excludeBegin: true,\n              relevance: 0\n            },\n            {\n              className: 'variable',\n              begin: IDENT_RE$1 + '(?=\\\\s*(-)|$)',\n              endsParent: true,\n              relevance: 0\n            },\n            // eat spaces (not newlines) so we can find\n            // types or variables\n            {\n              begin: /(?=[^\\n])\\s/,\n              relevance: 0\n            }\n          ]\n        }\n      ]\n    }\n  );\n  const COMMENT = {\n    className: \"comment\",\n    variants: [\n      JSDOC_COMMENT,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.C_LINE_COMMENT_MODE\n    ]\n  };\n  const SUBST_INTERNALS = [\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE,\n    HTML_TEMPLATE,\n    CSS_TEMPLATE,\n    TEMPLATE_STRING,\n    NUMBER,\n    hljs.REGEXP_MODE\n  ];\n  SUBST.contains = SUBST_INTERNALS\n    .concat({\n      // we need to pair up {} inside our subst to prevent\n      // it from ending too early by matching another }\n      begin: /\\{/,\n      end: /\\}/,\n      keywords: KEYWORDS$1,\n      contains: [\n        \"self\"\n      ].concat(SUBST_INTERNALS)\n    });\n  const SUBST_AND_COMMENTS = [].concat(COMMENT, SUBST.contains);\n  const PARAMS_CONTAINS = SUBST_AND_COMMENTS.concat([\n    // eat recursive parens in sub expressions\n    {\n      begin: /\\(/,\n      end: /\\)/,\n      keywords: KEYWORDS$1,\n      contains: [\"self\"].concat(SUBST_AND_COMMENTS)\n    }\n  ]);\n  const PARAMS = {\n    className: 'params',\n    begin: /\\(/,\n    end: /\\)/,\n    excludeBegin: true,\n    excludeEnd: true,\n    keywords: KEYWORDS$1,\n    contains: PARAMS_CONTAINS\n  };\n\n  // ES6 classes\n  const CLASS_OR_EXTENDS = {\n    variants: [\n      {\n        match: [\n          /class/,\n          /\\s+/,\n          IDENT_RE$1\n        ],\n        scope: {\n          1: \"keyword\",\n          3: \"title.class\"\n        }\n      },\n      {\n        match: [\n          /extends/,\n          /\\s+/,\n          concat(IDENT_RE$1, \"(\", concat(/\\./, IDENT_RE$1), \")*\")\n        ],\n        scope: {\n          1: \"keyword\",\n          3: \"title.class.inherited\"\n        }\n      }\n    ]\n  };\n\n  const CLASS_REFERENCE = {\n    relevance: 0,\n    match: /\\b[A-Z][a-z]+([A-Z][a-z]+)*/,\n    className: \"title.class\",\n    keywords: {\n      _: [\n        // se we still get relevance credit for JS library classes\n        ...TYPES,\n        ...ERROR_TYPES\n      ]\n    }\n  };\n\n  const USE_STRICT = {\n    label: \"use_strict\",\n    className: 'meta',\n    relevance: 10,\n    begin: /^\\s*['\"]use (strict|asm)['\"]/\n  };\n\n  const FUNCTION_DEFINITION = {\n    variants: [\n      {\n        match: [\n          /function/,\n          /\\s+/,\n          IDENT_RE$1,\n          /(?=\\s*\\()/\n        ]\n      },\n      // anonymous function\n      {\n        match: [\n          /function/,\n          /\\s*(?=\\()/\n        ]\n      }\n    ],\n    className: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    label: \"func.def\",\n    contains: [ PARAMS ],\n    illegal: /%/\n  };\n\n  const UPPER_CASE_CONSTANT = {\n    relevance: 0,\n    match: /\\b[A-Z][A-Z_0-9]+\\b/,\n    className: \"variable.constant\"\n  };\n\n  function noneOf(list) {\n    return concat(\"(?!\", list.join(\"|\"), \")\");\n  }\n\n  const FUNCTION_CALL = {\n    match: concat(\n      /\\b/,\n      noneOf([\n        ...BUILT_IN_GLOBALS,\n        \"super\"\n      ]),\n      IDENT_RE$1, lookahead(/\\(/)),\n    className: \"title.function\",\n    relevance: 0\n  };\n\n  const PROPERTY_ACCESS = {\n    begin: concat(/\\./, lookahead(\n      concat(IDENT_RE$1, /(?![0-9A-Za-z$_(])/)\n    )),\n    end: IDENT_RE$1,\n    excludeBegin: true,\n    keywords: \"prototype\",\n    className: \"property\",\n    relevance: 0\n  };\n\n  const GETTER_OR_SETTER = {\n    match: [\n      /get|set/,\n      /\\s+/,\n      IDENT_RE$1,\n      /(?=\\()/\n    ],\n    className: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    contains: [\n      { // eat to avoid empty params\n        begin: /\\(\\)/\n      },\n      PARAMS\n    ]\n  };\n\n  const FUNC_LEAD_IN_RE = '(\\\\(' +\n    '[^()]*(\\\\(' +\n    '[^()]*(\\\\(' +\n    '[^()]*' +\n    '\\\\)[^()]*)*' +\n    '\\\\)[^()]*)*' +\n    '\\\\)|' + hljs.UNDERSCORE_IDENT_RE + ')\\\\s*=>';\n\n  const FUNCTION_VARIABLE = {\n    match: [\n      /const|var|let/, /\\s+/,\n      IDENT_RE$1, /\\s*/,\n      /=\\s*/,\n      lookahead(FUNC_LEAD_IN_RE)\n    ],\n    className: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    contains: [\n      PARAMS\n    ]\n  };\n\n  return {\n    name: 'Javascript',\n    aliases: ['js', 'jsx', 'mjs', 'cjs'],\n    keywords: KEYWORDS$1,\n    // this will be extended by TypeScript\n    exports: { PARAMS_CONTAINS },\n    illegal: /#(?![$_A-z])/,\n    contains: [\n      hljs.SHEBANG({\n        label: \"shebang\",\n        binary: \"node\",\n        relevance: 5\n      }),\n      USE_STRICT,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      HTML_TEMPLATE,\n      CSS_TEMPLATE,\n      TEMPLATE_STRING,\n      COMMENT,\n      NUMBER,\n      CLASS_REFERENCE,\n      {\n        className: 'attr',\n        begin: IDENT_RE$1 + lookahead(':'),\n        relevance: 0\n      },\n      FUNCTION_VARIABLE,\n      { // \"value\" container\n        begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\n        keywords: 'return throw case',\n        relevance: 0,\n        contains: [\n          COMMENT,\n          hljs.REGEXP_MODE,\n          {\n            className: 'function',\n            // we have to count the parens to make sure we actually have the\n            // correct bounding ( ) before the =>.  There could be any number of\n            // sub-expressions inside also surrounded by parens.\n            begin: FUNC_LEAD_IN_RE,\n            returnBegin: true,\n            end: '\\\\s*=>',\n            contains: [\n              {\n                className: 'params',\n                variants: [\n                  {\n                    begin: hljs.UNDERSCORE_IDENT_RE,\n                    relevance: 0\n                  },\n                  {\n                    className: null,\n                    begin: /\\(\\s*\\)/,\n                    skip: true\n                  },\n                  {\n                    begin: /\\(/,\n                    end: /\\)/,\n                    excludeBegin: true,\n                    excludeEnd: true,\n                    keywords: KEYWORDS$1,\n                    contains: PARAMS_CONTAINS\n                  }\n                ]\n              }\n            ]\n          },\n          { // could be a comma delimited list of params to a function call\n            begin: /,/,\n            relevance: 0\n          },\n          {\n            match: /\\s+/,\n            relevance: 0\n          },\n          { // JSX\n            variants: [\n              { begin: FRAGMENT.begin, end: FRAGMENT.end },\n              {\n                begin: XML_TAG.begin,\n                // we carefully check the opening tag to see if it truly\n                // is a tag and not a false positive\n                'on:begin': XML_TAG.isTrulyOpeningTag,\n                end: XML_TAG.end\n              }\n            ],\n            subLanguage: 'xml',\n            contains: [\n              {\n                begin: XML_TAG.begin,\n                end: XML_TAG.end,\n                skip: true,\n                contains: ['self']\n              }\n            ]\n          }\n        ],\n      },\n      FUNCTION_DEFINITION,\n      {\n        // prevent this from getting swallowed up by function\n        // since they appear \"function like\"\n        beginKeywords: \"while if switch catch for\"\n      },\n      {\n        // we have to count the parens to make sure we actually have the correct\n        // bounding ( ).  There could be any number of sub-expressions inside\n        // also surrounded by parens.\n        begin: '\\\\b(?!function)' + hljs.UNDERSCORE_IDENT_RE +\n          '\\\\(' + // first parens\n          '[^()]*(\\\\(' +\n            '[^()]*(\\\\(' +\n              '[^()]*' +\n            '\\\\)[^()]*)*' +\n          '\\\\)[^()]*)*' +\n          '\\\\)\\\\s*\\\\{', // end parens\n        returnBegin:true,\n        label: \"func.def\",\n        contains: [\n          PARAMS,\n          hljs.inherit(hljs.TITLE_MODE, { begin: IDENT_RE$1, className: \"title.function\" })\n        ]\n      },\n      // catch ... so it won't trigger the property rule below\n      {\n        match: /\\.\\.\\./,\n        relevance: 0\n      },\n      PROPERTY_ACCESS,\n      // hack: prevents detection of keywords in some circumstances\n      // .keyword()\n      // $keyword = x\n      {\n        match: '\\\\$' + IDENT_RE$1,\n        relevance: 0\n      },\n      {\n        match: [ /\\bconstructor(?=\\s*\\()/ ],\n        className: { 1: \"title.function\" },\n        contains: [ PARAMS ]\n      },\n      FUNCTION_CALL,\n      UPPER_CASE_CONSTANT,\n      CLASS_OR_EXTENDS,\n      GETTER_OR_SETTER,\n      {\n        match: /\\$[(.]/ // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`\n      }\n    ]\n  };\n}\n\nmodule.exports = javascript;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["skip","variants","excludeBegin","begin","aliases","returnEnd","subLanguage","className","label","contains","$pattern","binary","relevance","returnBegin","name","PARAMS_CONTAINS","endsParent","built_in","keyword","scope","_","keywords","beginKeywords","match","starts","excludeEnd","illegal","literal","end"]],"~:compiled-at",1668750081539,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$highlight_DOT_js$lib$languages$javascript.js\",\n\"lineCount\":15,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/highlight_DOT_js/lib/languages/javascript.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$highlight_DOT_js$lib$languages$javascript\\\"] = function(global,require,module,exports) {\\nconst IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\\nconst KEYWORDS = [\\n  \\\"as\\\", // for exports\\n  \\\"in\\\",\\n  \\\"of\\\",\\n  \\\"if\\\",\\n  \\\"for\\\",\\n  \\\"while\\\",\\n  \\\"finally\\\",\\n  \\\"var\\\",\\n  \\\"new\\\",\\n  \\\"function\\\",\\n  \\\"do\\\",\\n  \\\"return\\\",\\n  \\\"void\\\",\\n  \\\"else\\\",\\n  \\\"break\\\",\\n  \\\"catch\\\",\\n  \\\"instanceof\\\",\\n  \\\"with\\\",\\n  \\\"throw\\\",\\n  \\\"case\\\",\\n  \\\"default\\\",\\n  \\\"try\\\",\\n  \\\"switch\\\",\\n  \\\"continue\\\",\\n  \\\"typeof\\\",\\n  \\\"delete\\\",\\n  \\\"let\\\",\\n  \\\"yield\\\",\\n  \\\"const\\\",\\n  \\\"class\\\",\\n  // JS handles these with a special rule\\n  // \\\"get\\\",\\n  // \\\"set\\\",\\n  \\\"debugger\\\",\\n  \\\"async\\\",\\n  \\\"await\\\",\\n  \\\"static\\\",\\n  \\\"import\\\",\\n  \\\"from\\\",\\n  \\\"export\\\",\\n  \\\"extends\\\"\\n];\\nconst LITERALS = [\\n  \\\"true\\\",\\n  \\\"false\\\",\\n  \\\"null\\\",\\n  \\\"undefined\\\",\\n  \\\"NaN\\\",\\n  \\\"Infinity\\\"\\n];\\n\\nconst TYPES = [\\n  \\\"Intl\\\",\\n  \\\"DataView\\\",\\n  \\\"Number\\\",\\n  \\\"Math\\\",\\n  \\\"Date\\\",\\n  \\\"String\\\",\\n  \\\"RegExp\\\",\\n  \\\"Object\\\",\\n  \\\"Function\\\",\\n  \\\"Boolean\\\",\\n  \\\"Error\\\",\\n  \\\"Symbol\\\",\\n  \\\"Set\\\",\\n  \\\"Map\\\",\\n  \\\"WeakSet\\\",\\n  \\\"WeakMap\\\",\\n  \\\"Proxy\\\",\\n  \\\"Reflect\\\",\\n  \\\"JSON\\\",\\n  \\\"Promise\\\",\\n  \\\"Float64Array\\\",\\n  \\\"Int16Array\\\",\\n  \\\"Int32Array\\\",\\n  \\\"Int8Array\\\",\\n  \\\"Uint16Array\\\",\\n  \\\"Uint32Array\\\",\\n  \\\"Float32Array\\\",\\n  \\\"Array\\\",\\n  \\\"Uint8Array\\\",\\n  \\\"Uint8ClampedArray\\\",\\n  \\\"ArrayBuffer\\\",\\n  \\\"BigInt64Array\\\",\\n  \\\"BigUint64Array\\\",\\n  \\\"BigInt\\\"\\n];\\n\\nconst ERROR_TYPES = [\\n  \\\"EvalError\\\",\\n  \\\"InternalError\\\",\\n  \\\"RangeError\\\",\\n  \\\"ReferenceError\\\",\\n  \\\"SyntaxError\\\",\\n  \\\"TypeError\\\",\\n  \\\"URIError\\\"\\n];\\n\\nconst BUILT_IN_GLOBALS = [\\n  \\\"setInterval\\\",\\n  \\\"setTimeout\\\",\\n  \\\"clearInterval\\\",\\n  \\\"clearTimeout\\\",\\n\\n  \\\"require\\\",\\n  \\\"exports\\\",\\n\\n  \\\"eval\\\",\\n  \\\"isFinite\\\",\\n  \\\"isNaN\\\",\\n  \\\"parseFloat\\\",\\n  \\\"parseInt\\\",\\n  \\\"decodeURI\\\",\\n  \\\"decodeURIComponent\\\",\\n  \\\"encodeURI\\\",\\n  \\\"encodeURIComponent\\\",\\n  \\\"escape\\\",\\n  \\\"unescape\\\"\\n];\\n\\nconst BUILT_IN_VARIABLES = [\\n  \\\"arguments\\\",\\n  \\\"this\\\",\\n  \\\"super\\\",\\n  \\\"console\\\",\\n  \\\"window\\\",\\n  \\\"document\\\",\\n  \\\"localStorage\\\",\\n  \\\"module\\\",\\n  \\\"global\\\" // Node.js\\n];\\n\\nconst BUILT_INS = [].concat(\\n  BUILT_IN_GLOBALS,\\n  TYPES,\\n  ERROR_TYPES\\n);\\n\\n/**\\n * @param {string} value\\n * @returns {RegExp}\\n * */\\n\\n/**\\n * @param {RegExp | string } re\\n * @returns {string}\\n */\\nfunction source(re) {\\n  if (!re) return null;\\n  if (typeof re === \\\"string\\\") return re;\\n\\n  return re.source;\\n}\\n\\n/**\\n * @param {RegExp | string } re\\n * @returns {string}\\n */\\nfunction lookahead(re) {\\n  return concat('(?=', re, ')');\\n}\\n\\n/**\\n * @param {...(RegExp | string) } args\\n * @returns {string}\\n */\\nfunction concat(...args) {\\n  const joined = args.map((x) => source(x)).join(\\\"\\\");\\n  return joined;\\n}\\n\\n/*\\nLanguage: JavaScript\\nDescription: JavaScript (JS) is a lightweight, interpreted, or just-in-time compiled programming language with first-class functions.\\nCategory: common, scripting, web\\nWebsite: https://developer.mozilla.org/en-US/docs/Web/JavaScript\\n*/\\n\\n/** @type LanguageFn */\\nfunction javascript(hljs) {\\n  /**\\n   * Takes a string like \\\"<Booger\\\" and checks to see\\n   * if we can find a matching \\\"</Booger\\\" later in the\\n   * content.\\n   * @param {RegExpMatchArray} match\\n   * @param {{after:number}} param1\\n   */\\n  const hasClosingTag = (match, { after }) => {\\n    const tag = \\\"</\\\" + match[0].slice(1);\\n    const pos = match.input.indexOf(tag, after);\\n    return pos !== -1;\\n  };\\n\\n  const IDENT_RE$1 = IDENT_RE;\\n  const FRAGMENT = {\\n    begin: '<>',\\n    end: '</>'\\n  };\\n  const XML_TAG = {\\n    begin: /<[A-Za-z0-9\\\\\\\\._:-]+/,\\n    end: /\\\\/[A-Za-z0-9\\\\\\\\._:-]+>|\\\\/>/,\\n    /**\\n     * @param {RegExpMatchArray} match\\n     * @param {CallbackResponse} response\\n     */\\n    isTrulyOpeningTag: (match, response) => {\\n      const afterMatchIndex = match[0].length + match.index;\\n      const nextChar = match.input[afterMatchIndex];\\n      // nested type?\\n      // HTML should not include another raw `<` inside a tag\\n      // But a type might: `<Array<Array<number>>`, etc.\\n      if (nextChar === \\\"<\\\") {\\n        response.ignoreMatch();\\n        return;\\n      }\\n      // <something>\\n      // This is now either a tag or a type.\\n      if (nextChar === \\\">\\\") {\\n        // if we cannot find a matching closing tag, then we\\n        // will ignore it\\n        if (!hasClosingTag(match, { after: afterMatchIndex })) {\\n          response.ignoreMatch();\\n        }\\n      }\\n    }\\n  };\\n  const KEYWORDS$1 = {\\n    $pattern: IDENT_RE,\\n    keyword: KEYWORDS,\\n    literal: LITERALS,\\n    built_in: BUILT_INS,\\n    \\\"variable.language\\\": BUILT_IN_VARIABLES\\n  };\\n\\n  // https://tc39.es/ecma262/#sec-literals-numeric-literals\\n  const decimalDigits = '[0-9](_?[0-9])*';\\n  const frac = `\\\\\\\\.(${decimalDigits})`;\\n  // DecimalIntegerLiteral, including Annex B NonOctalDecimalIntegerLiteral\\n  // https://tc39.es/ecma262/#sec-additional-syntax-numeric-literals\\n  const decimalInteger = `0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*`;\\n  const NUMBER = {\\n    className: 'number',\\n    variants: [\\n      // DecimalLiteral\\n      { begin: `(\\\\\\\\b(${decimalInteger})((${frac})|\\\\\\\\.)?|(${frac}))` +\\n        `[eE][+-]?(${decimalDigits})\\\\\\\\b` },\\n      { begin: `\\\\\\\\b(${decimalInteger})\\\\\\\\b((${frac})\\\\\\\\b|\\\\\\\\.)?|(${frac})\\\\\\\\b` },\\n\\n      // DecimalBigIntegerLiteral\\n      { begin: `\\\\\\\\b(0|[1-9](_?[0-9])*)n\\\\\\\\b` },\\n\\n      // NonDecimalIntegerLiteral\\n      { begin: \\\"\\\\\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\\\\\\\b\\\" },\\n      { begin: \\\"\\\\\\\\b0[bB][0-1](_?[0-1])*n?\\\\\\\\b\\\" },\\n      { begin: \\\"\\\\\\\\b0[oO][0-7](_?[0-7])*n?\\\\\\\\b\\\" },\\n\\n      // LegacyOctalIntegerLiteral (does not include underscore separators)\\n      // https://tc39.es/ecma262/#sec-additional-syntax-numeric-literals\\n      { begin: \\\"\\\\\\\\b0[0-7]+n?\\\\\\\\b\\\" },\\n    ],\\n    relevance: 0\\n  };\\n\\n  const SUBST = {\\n    className: 'subst',\\n    begin: '\\\\\\\\$\\\\\\\\{',\\n    end: '\\\\\\\\}',\\n    keywords: KEYWORDS$1,\\n    contains: [] // defined later\\n  };\\n  const HTML_TEMPLATE = {\\n    begin: 'html`',\\n    end: '',\\n    starts: {\\n      end: '`',\\n      returnEnd: false,\\n      contains: [\\n        hljs.BACKSLASH_ESCAPE,\\n        SUBST\\n      ],\\n      subLanguage: 'xml'\\n    }\\n  };\\n  const CSS_TEMPLATE = {\\n    begin: 'css`',\\n    end: '',\\n    starts: {\\n      end: '`',\\n      returnEnd: false,\\n      contains: [\\n        hljs.BACKSLASH_ESCAPE,\\n        SUBST\\n      ],\\n      subLanguage: 'css'\\n    }\\n  };\\n  const TEMPLATE_STRING = {\\n    className: 'string',\\n    begin: '`',\\n    end: '`',\\n    contains: [\\n      hljs.BACKSLASH_ESCAPE,\\n      SUBST\\n    ]\\n  };\\n  const JSDOC_COMMENT = hljs.COMMENT(\\n    /\\\\/\\\\*\\\\*(?!\\\\/)/,\\n    '\\\\\\\\*/',\\n    {\\n      relevance: 0,\\n      contains: [\\n        {\\n          begin: '(?=@[A-Za-z]+)',\\n          relevance: 0,\\n          contains: [\\n            {\\n              className: 'doctag',\\n              begin: '@[A-Za-z]+'\\n            },\\n            {\\n              className: 'type',\\n              begin: '\\\\\\\\{',\\n              end: '\\\\\\\\}',\\n              excludeEnd: true,\\n              excludeBegin: true,\\n              relevance: 0\\n            },\\n            {\\n              className: 'variable',\\n              begin: IDENT_RE$1 + '(?=\\\\\\\\s*(-)|$)',\\n              endsParent: true,\\n              relevance: 0\\n            },\\n            // eat spaces (not newlines) so we can find\\n            // types or variables\\n            {\\n              begin: /(?=[^\\\\n])\\\\s/,\\n              relevance: 0\\n            }\\n          ]\\n        }\\n      ]\\n    }\\n  );\\n  const COMMENT = {\\n    className: \\\"comment\\\",\\n    variants: [\\n      JSDOC_COMMENT,\\n      hljs.C_BLOCK_COMMENT_MODE,\\n      hljs.C_LINE_COMMENT_MODE\\n    ]\\n  };\\n  const SUBST_INTERNALS = [\\n    hljs.APOS_STRING_MODE,\\n    hljs.QUOTE_STRING_MODE,\\n    HTML_TEMPLATE,\\n    CSS_TEMPLATE,\\n    TEMPLATE_STRING,\\n    NUMBER,\\n    hljs.REGEXP_MODE\\n  ];\\n  SUBST.contains = SUBST_INTERNALS\\n    .concat({\\n      // we need to pair up {} inside our subst to prevent\\n      // it from ending too early by matching another }\\n      begin: /\\\\{/,\\n      end: /\\\\}/,\\n      keywords: KEYWORDS$1,\\n      contains: [\\n        \\\"self\\\"\\n      ].concat(SUBST_INTERNALS)\\n    });\\n  const SUBST_AND_COMMENTS = [].concat(COMMENT, SUBST.contains);\\n  const PARAMS_CONTAINS = SUBST_AND_COMMENTS.concat([\\n    // eat recursive parens in sub expressions\\n    {\\n      begin: /\\\\(/,\\n      end: /\\\\)/,\\n      keywords: KEYWORDS$1,\\n      contains: [\\\"self\\\"].concat(SUBST_AND_COMMENTS)\\n    }\\n  ]);\\n  const PARAMS = {\\n    className: 'params',\\n    begin: /\\\\(/,\\n    end: /\\\\)/,\\n    excludeBegin: true,\\n    excludeEnd: true,\\n    keywords: KEYWORDS$1,\\n    contains: PARAMS_CONTAINS\\n  };\\n\\n  // ES6 classes\\n  const CLASS_OR_EXTENDS = {\\n    variants: [\\n      {\\n        match: [\\n          /class/,\\n          /\\\\s+/,\\n          IDENT_RE$1\\n        ],\\n        scope: {\\n          1: \\\"keyword\\\",\\n          3: \\\"title.class\\\"\\n        }\\n      },\\n      {\\n        match: [\\n          /extends/,\\n          /\\\\s+/,\\n          concat(IDENT_RE$1, \\\"(\\\", concat(/\\\\./, IDENT_RE$1), \\\")*\\\")\\n        ],\\n        scope: {\\n          1: \\\"keyword\\\",\\n          3: \\\"title.class.inherited\\\"\\n        }\\n      }\\n    ]\\n  };\\n\\n  const CLASS_REFERENCE = {\\n    relevance: 0,\\n    match: /\\\\b[A-Z][a-z]+([A-Z][a-z]+)*/,\\n    className: \\\"title.class\\\",\\n    keywords: {\\n      _: [\\n        // se we still get relevance credit for JS library classes\\n        ...TYPES,\\n        ...ERROR_TYPES\\n      ]\\n    }\\n  };\\n\\n  const USE_STRICT = {\\n    label: \\\"use_strict\\\",\\n    className: 'meta',\\n    relevance: 10,\\n    begin: /^\\\\s*['\\\"]use (strict|asm)['\\\"]/\\n  };\\n\\n  const FUNCTION_DEFINITION = {\\n    variants: [\\n      {\\n        match: [\\n          /function/,\\n          /\\\\s+/,\\n          IDENT_RE$1,\\n          /(?=\\\\s*\\\\()/\\n        ]\\n      },\\n      // anonymous function\\n      {\\n        match: [\\n          /function/,\\n          /\\\\s*(?=\\\\()/\\n        ]\\n      }\\n    ],\\n    className: {\\n      1: \\\"keyword\\\",\\n      3: \\\"title.function\\\"\\n    },\\n    label: \\\"func.def\\\",\\n    contains: [ PARAMS ],\\n    illegal: /%/\\n  };\\n\\n  const UPPER_CASE_CONSTANT = {\\n    relevance: 0,\\n    match: /\\\\b[A-Z][A-Z_0-9]+\\\\b/,\\n    className: \\\"variable.constant\\\"\\n  };\\n\\n  function noneOf(list) {\\n    return concat(\\\"(?!\\\", list.join(\\\"|\\\"), \\\")\\\");\\n  }\\n\\n  const FUNCTION_CALL = {\\n    match: concat(\\n      /\\\\b/,\\n      noneOf([\\n        ...BUILT_IN_GLOBALS,\\n        \\\"super\\\"\\n      ]),\\n      IDENT_RE$1, lookahead(/\\\\(/)),\\n    className: \\\"title.function\\\",\\n    relevance: 0\\n  };\\n\\n  const PROPERTY_ACCESS = {\\n    begin: concat(/\\\\./, lookahead(\\n      concat(IDENT_RE$1, /(?![0-9A-Za-z$_(])/)\\n    )),\\n    end: IDENT_RE$1,\\n    excludeBegin: true,\\n    keywords: \\\"prototype\\\",\\n    className: \\\"property\\\",\\n    relevance: 0\\n  };\\n\\n  const GETTER_OR_SETTER = {\\n    match: [\\n      /get|set/,\\n      /\\\\s+/,\\n      IDENT_RE$1,\\n      /(?=\\\\()/\\n    ],\\n    className: {\\n      1: \\\"keyword\\\",\\n      3: \\\"title.function\\\"\\n    },\\n    contains: [\\n      { // eat to avoid empty params\\n        begin: /\\\\(\\\\)/\\n      },\\n      PARAMS\\n    ]\\n  };\\n\\n  const FUNC_LEAD_IN_RE = '(\\\\\\\\(' +\\n    '[^()]*(\\\\\\\\(' +\\n    '[^()]*(\\\\\\\\(' +\\n    '[^()]*' +\\n    '\\\\\\\\)[^()]*)*' +\\n    '\\\\\\\\)[^()]*)*' +\\n    '\\\\\\\\)|' + hljs.UNDERSCORE_IDENT_RE + ')\\\\\\\\s*=>';\\n\\n  const FUNCTION_VARIABLE = {\\n    match: [\\n      /const|var|let/, /\\\\s+/,\\n      IDENT_RE$1, /\\\\s*/,\\n      /=\\\\s*/,\\n      lookahead(FUNC_LEAD_IN_RE)\\n    ],\\n    className: {\\n      1: \\\"keyword\\\",\\n      3: \\\"title.function\\\"\\n    },\\n    contains: [\\n      PARAMS\\n    ]\\n  };\\n\\n  return {\\n    name: 'Javascript',\\n    aliases: ['js', 'jsx', 'mjs', 'cjs'],\\n    keywords: KEYWORDS$1,\\n    // this will be extended by TypeScript\\n    exports: { PARAMS_CONTAINS },\\n    illegal: /#(?![$_A-z])/,\\n    contains: [\\n      hljs.SHEBANG({\\n        label: \\\"shebang\\\",\\n        binary: \\\"node\\\",\\n        relevance: 5\\n      }),\\n      USE_STRICT,\\n      hljs.APOS_STRING_MODE,\\n      hljs.QUOTE_STRING_MODE,\\n      HTML_TEMPLATE,\\n      CSS_TEMPLATE,\\n      TEMPLATE_STRING,\\n      COMMENT,\\n      NUMBER,\\n      CLASS_REFERENCE,\\n      {\\n        className: 'attr',\\n        begin: IDENT_RE$1 + lookahead(':'),\\n        relevance: 0\\n      },\\n      FUNCTION_VARIABLE,\\n      { // \\\"value\\\" container\\n        begin: '(' + hljs.RE_STARTERS_RE + '|\\\\\\\\b(case|return|throw)\\\\\\\\b)\\\\\\\\s*',\\n        keywords: 'return throw case',\\n        relevance: 0,\\n        contains: [\\n          COMMENT,\\n          hljs.REGEXP_MODE,\\n          {\\n            className: 'function',\\n            // we have to count the parens to make sure we actually have the\\n            // correct bounding ( ) before the =>.  There could be any number of\\n            // sub-expressions inside also surrounded by parens.\\n            begin: FUNC_LEAD_IN_RE,\\n            returnBegin: true,\\n            end: '\\\\\\\\s*=>',\\n            contains: [\\n              {\\n                className: 'params',\\n                variants: [\\n                  {\\n                    begin: hljs.UNDERSCORE_IDENT_RE,\\n                    relevance: 0\\n                  },\\n                  {\\n                    className: null,\\n                    begin: /\\\\(\\\\s*\\\\)/,\\n                    skip: true\\n                  },\\n                  {\\n                    begin: /\\\\(/,\\n                    end: /\\\\)/,\\n                    excludeBegin: true,\\n                    excludeEnd: true,\\n                    keywords: KEYWORDS$1,\\n                    contains: PARAMS_CONTAINS\\n                  }\\n                ]\\n              }\\n            ]\\n          },\\n          { // could be a comma delimited list of params to a function call\\n            begin: /,/,\\n            relevance: 0\\n          },\\n          {\\n            match: /\\\\s+/,\\n            relevance: 0\\n          },\\n          { // JSX\\n            variants: [\\n              { begin: FRAGMENT.begin, end: FRAGMENT.end },\\n              {\\n                begin: XML_TAG.begin,\\n                // we carefully check the opening tag to see if it truly\\n                // is a tag and not a false positive\\n                'on:begin': XML_TAG.isTrulyOpeningTag,\\n                end: XML_TAG.end\\n              }\\n            ],\\n            subLanguage: 'xml',\\n            contains: [\\n              {\\n                begin: XML_TAG.begin,\\n                end: XML_TAG.end,\\n                skip: true,\\n                contains: ['self']\\n              }\\n            ]\\n          }\\n        ],\\n      },\\n      FUNCTION_DEFINITION,\\n      {\\n        // prevent this from getting swallowed up by function\\n        // since they appear \\\"function like\\\"\\n        beginKeywords: \\\"while if switch catch for\\\"\\n      },\\n      {\\n        // we have to count the parens to make sure we actually have the correct\\n        // bounding ( ).  There could be any number of sub-expressions inside\\n        // also surrounded by parens.\\n        begin: '\\\\\\\\b(?!function)' + hljs.UNDERSCORE_IDENT_RE +\\n          '\\\\\\\\(' + // first parens\\n          '[^()]*(\\\\\\\\(' +\\n            '[^()]*(\\\\\\\\(' +\\n              '[^()]*' +\\n            '\\\\\\\\)[^()]*)*' +\\n          '\\\\\\\\)[^()]*)*' +\\n          '\\\\\\\\)\\\\\\\\s*\\\\\\\\{', // end parens\\n        returnBegin:true,\\n        label: \\\"func.def\\\",\\n        contains: [\\n          PARAMS,\\n          hljs.inherit(hljs.TITLE_MODE, { begin: IDENT_RE$1, className: \\\"title.function\\\" })\\n        ]\\n      },\\n      // catch ... so it won't trigger the property rule below\\n      {\\n        match: /\\\\.\\\\.\\\\./,\\n        relevance: 0\\n      },\\n      PROPERTY_ACCESS,\\n      // hack: prevents detection of keywords in some circumstances\\n      // .keyword()\\n      // $keyword = x\\n      {\\n        match: '\\\\\\\\$' + IDENT_RE$1,\\n        relevance: 0\\n      },\\n      {\\n        match: [ /\\\\bconstructor(?=\\\\s*\\\\()/ ],\\n        className: { 1: \\\"title.function\\\" },\\n        contains: [ PARAMS ]\\n      },\\n      FUNCTION_CALL,\\n      UPPER_CASE_CONSTANT,\\n      CLASS_OR_EXTENDS,\\n      GETTER_OR_SETTER,\\n      {\\n        match: /\\\\$[(.]/ // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`\\n      }\\n    ]\\n  };\\n}\\n\\nmodule.exports = javascript;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"concat\",\"args\",\"map\",\"x\",\"source\",\"joined\",\"join\",\"KEYWORDS\",\"LITERALS\",\"TYPES\",\"ERROR_TYPES\",\"BUILT_IN_GLOBALS\",\"BUILT_IN_VARIABLES\",\"BUILT_INS\",\"javascript\",\"hljs\",\"KEYWORDS$1\",\"$pattern\",\"IDENT_RE\",\"keyword\",\"literal\",\"built_in\",\"NUMBER\",\"className\",\"variants\",\"begin\",\"relevance\",\"SUBST\",\"end\",\"keywords\",\"contains\",\"HTML_TEMPLATE\",\"starts\",\"returnEnd\",\"BACKSLASH_ESCAPE\",\"subLanguage\",\"CSS_TEMPLATE\",\"TEMPLATE_STRING\",\"COMMENT\",\"JSDOC_COMMENT\",\"excludeEnd\",\"excludeBegin\",\"endsParent\",\"C_BLOCK_COMMENT_MODE\",\"C_LINE_COMMENT_MODE\",\"SUBST_INTERNALS\",\"APOS_STRING_MODE\",\"QUOTE_STRING_MODE\",\"REGEXP_MODE\",\"SUBST_AND_COMMENTS\",\"PARAMS_CONTAINS\",\"PARAMS\",\"CLASS_OR_EXTENDS\",\"match\",\"scope\",\"CLASS_REFERENCE\",\"_\",\"FUNCTION_DEFINITION\",\"label\",\"illegal\",\"FUNCTION_CALL\",\"list\",\"re\",\"PROPERTY_ACCESS\",\"GETTER_OR_SETTER\",\"FUNC_LEAD_IN_RE\",\"UNDERSCORE_IDENT_RE\",\"FUNCTION_VARIABLE\",\"name\",\"aliases\",\"SHEBANG\",\"binary\",\"USE_STRICT\",\"RE_STARTERS_RE\",\"returnBegin\",\"skip\",\"isTrulyOpeningTag\",\"response\",\"afterMatchIndex\",\"length\",\"index\",\"nextChar\",\"input\",\"ignoreMatch\",\"tag\",\"slice\",\"pos\",\"indexOf\",\"beginKeywords\",\"inherit\",\"TITLE_MODE\",\"UPPER_CASE_CONSTANT\"]\n}\n"]