["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/core-js-pure/internals/string-trim.js"],"~:js","shadow$provide.module$node_modules$core_js_pure$internals$string_trim=function(global,require,module,exports){global=require(\"module$node_modules$core_js_pure$internals$function_uncurry_this\");var requireObjectCoercible=require(\"module$node_modules$core_js_pure$internals$require_object_coercible\"),toString=require(\"module$node_modules$core_js_pure$internals$to_string\");require=require(\"module$node_modules$core_js_pure$internals$whitespaces\");var replace=global(\"\".replace);require=\"[\"+require+\"]\";\nvar ltrim=RegExp(\"^\"+require+require+\"*\"),rtrim=RegExp(require+require+\"*$\");require=function(TYPE){return function($this){$this=toString(requireObjectCoercible($this));TYPE&1&&($this=replace($this,ltrim,\"\"));TYPE&2&&($this=replace($this,rtrim,\"\"));return $this}};module.exports={start:require(1),end:require(2),trim:require(3)}}","~:source","shadow$provide[\"module$node_modules$core_js_pure$internals$string_trim\"] = function(global,require,module,exports) {\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toString = require('../internals/to-string');\nvar whitespaces = require('../internals/whitespaces');\n\nvar replace = uncurryThis(''.replace);\nvar whitespace = '[' + whitespaces + ']';\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\nvar rtrim = RegExp(whitespace + whitespace + '*$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = toString(requireObjectCoercible($this));\n    if (TYPE & 1) string = replace(string, ltrim, '');\n    if (TYPE & 2) string = replace(string, rtrim, '');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.es/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$core_js_pure$internals$function_uncurry_this","~$module$node_modules$core_js_pure$internals$whitespaces","~$module$node_modules$core_js_pure$internals$require_object_coercible","~$shadow.js","~$module$node_modules$core_js_pure$internals$to_string"]],"~:properties",["^5",["trim","start","end"]],"~:compiled-at",1668744300444,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$core_js_pure$internals$string_trim.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAe,sDAAf,CAA2E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAC/GC,MAAAA,CAAcH,OAAA,CAAQ,kEAAR,CAClB,KAAII,uBAAyBJ,OAAA,CAAQ,qEAAR,CAA7B,CACIK,SAAWL,OAAA,CAAQ,sDAAR,CACXM,QAAAA,CAAcN,OAAA,CAAQ,wDAAR,CAElB,KAAIO,QAAUJ,MAAA,CAAYI,EAAZ,CAAeA,OAAf,CACVC,QAAAA,CAAa,GAAbA,CAAmBF,OAAnBE,CAAiC,GACrC;IAAIC,MAAQC,MAAA,CAAO,GAAP,CAAaF,OAAb,CAA0BA,OAA1B,CAAuC,GAAvC,CAAZ,CACIG,MAAQD,MAAA,CAAOF,OAAP,CAAoBA,OAApB,CAAiC,IAAjC,CAGRI,QAAAA,CAAeA,QAAS,CAACC,IAAD,CAAO,CACjC,MAAO,SAAS,CAACC,KAAD,CAAQ,CAClBC,KAAAA,CAASV,QAAA,CAASD,sBAAA,CAAuBU,KAAvB,CAAT,CACTD,KAAJ,CAAW,CAAX,GAAcE,KAAd,CAAuBR,OAAA,CAAQQ,KAAR,CAAgBN,KAAhB,CAAuB,EAAvB,CAAvB,CACII,KAAJ,CAAW,CAAX,GAAcE,KAAd,CAAuBR,OAAA,CAAQQ,KAAR,CAAgBJ,KAAhB,CAAuB,EAAvB,CAAvB,CACA,OAAOI,MAJe,CADS,CASnCd,OAAA,CAAOC,OAAP,CAAiB,CAGfc,MAAOJ,OAAA,CAAa,CAAb,CAHQ,CAMfK,IAAKL,OAAA,CAAa,CAAb,CANU,CASfM,KAAMN,OAAA,CAAa,CAAb,CATS,CArBkG;\",\n\"sources\":[\"node_modules/core-js-pure/internals/string-trim.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$core_js_pure$internals$string_trim\\\"] = function(global,require,module,exports) {\\nvar uncurryThis = require('../internals/function-uncurry-this');\\nvar requireObjectCoercible = require('../internals/require-object-coercible');\\nvar toString = require('../internals/to-string');\\nvar whitespaces = require('../internals/whitespaces');\\n\\nvar replace = uncurryThis(''.replace);\\nvar whitespace = '[' + whitespaces + ']';\\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\\nvar rtrim = RegExp(whitespace + whitespace + '*$');\\n\\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\\nvar createMethod = function (TYPE) {\\n  return function ($this) {\\n    var string = toString(requireObjectCoercible($this));\\n    if (TYPE & 1) string = replace(string, ltrim, '');\\n    if (TYPE & 2) string = replace(string, rtrim, '');\\n    return string;\\n  };\\n};\\n\\nmodule.exports = {\\n  // `String.prototype.{ trimLeft, trimStart }` methods\\n  // https://tc39.es/ecma262/#sec-string.prototype.trimstart\\n  start: createMethod(1),\\n  // `String.prototype.{ trimRight, trimEnd }` methods\\n  // https://tc39.es/ecma262/#sec-string.prototype.trimend\\n  end: createMethod(2),\\n  // `String.prototype.trim` method\\n  // https://tc39.es/ecma262/#sec-string.prototype.trim\\n  trim: createMethod(3)\\n};\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"uncurryThis\",\"requireObjectCoercible\",\"toString\",\"whitespaces\",\"replace\",\"whitespace\",\"ltrim\",\"RegExp\",\"rtrim\",\"createMethod\",\"TYPE\",\"$this\",\"string\",\"start\",\"end\",\"trim\"]\n}\n"]