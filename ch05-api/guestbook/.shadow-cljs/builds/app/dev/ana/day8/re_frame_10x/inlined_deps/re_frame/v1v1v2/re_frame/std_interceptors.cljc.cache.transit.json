["^ ","~:output",["^ ","~:js","goog.provide('day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.std_interceptors');\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.std_interceptors.debug = day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),new cljs.core.Keyword(null,\"before\",\"before\",-1633692388),(function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$std_interceptors$debug_before(context){\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"log\",\"log\",-1595516004),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Handling re-frame event:\",day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.Keyword(null,\"event\",\"event\",301435442))], 0));\n\nreturn context;\n}),new cljs.core.Keyword(null,\"after\",\"after\",594996914),(function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$std_interceptors$debug_after(context){\nvar event = day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.Keyword(null,\"event\",\"event\",301435442));\nvar orig_db = day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.Keyword(null,\"db\",\"db\",993250759));\nvar new_db = day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$3(context,new cljs.core.Keyword(null,\"db\",\"db\",993250759),new cljs.core.Keyword(\"day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.std-interceptors\",\"not-found\",\"day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.std-interceptors/not-found\",-713204725));\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new_db,new cljs.core.Keyword(\"day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.std-interceptors\",\"not-found\",\"day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.std-interceptors/not-found\",-713204725))){\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"log\",\"log\",-1595516004),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"No app-db changes in:\",event], 0));\n} else {\nvar vec__65064_65121 = clojure.data.diff(orig_db,new_db);\nvar only_before_65122 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__65064_65121,(0),null);\nvar only_after_65123 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__65064_65121,(1),null);\nvar db_changed_QMARK__65124 = (((!((only_before_65122 == null)))) || ((!((only_after_65123 == null)))));\nif(db_changed_QMARK__65124){\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"group\",\"group\",582596132),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"db clojure.data/diff for:\",event], 0));\n\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"log\",\"log\",-1595516004),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"only before:\",only_before_65122], 0));\n\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"log\",\"log\",-1595516004),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"only after :\",only_after_65123], 0));\n\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.loggers.console(new cljs.core.Keyword(null,\"groupEnd\",\"groupEnd\",-337721382));\n} else {\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"log\",\"log\",-1595516004),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"No app-db changes resulted from:\",event], 0));\n}\n}\n\nreturn context;\n})], 0));\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.std_interceptors.unwrap = day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),new cljs.core.Keyword(null,\"unwrap\",\"unwrap\",-1399175462),new cljs.core.Keyword(null,\"before\",\"before\",-1633692388),(function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$std_interceptors$unwrap_before(context){\nvar vec__65067 = day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.Keyword(null,\"event\",\"event\",301435442));\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__65067,(0),null);\nvar payload = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__65067,(1),null);\nvar event = vec__65067;\nif((!(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((2),cljs.core.count(event))) && (cljs.core.map_QMARK_(payload)))))){\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: \\\"unwrap\\\" interceptor requires event to be a 2-vector of [event-id payload-map]. Got \",event], 0));\n\nreturn context;\n} else {\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.assoc_coeffect(context,new cljs.core.Keyword(null,\"event\",\"event\",301435442),payload);\n}\n}),new cljs.core.Keyword(null,\"after\",\"after\",594996914),(function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$std_interceptors$unwrap_after(context){\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.assoc_coeffect(context,new cljs.core.Keyword(null,\"event\",\"event\",301435442),day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.Keyword(null,\"original-event\",\"original-event\",2121330403)));\n})], 0));\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.std_interceptors.trim_v = day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),new cljs.core.Keyword(null,\"trim-v\",\"trim-v\",-1274938640),new cljs.core.Keyword(null,\"before\",\"before\",-1633692388),(function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$std_interceptors$trim_v_before(context){\nif((!(cljs.core.vector_QMARK_(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.Keyword(null,\"event\",\"event\",301435442)))))){\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: \\\"trim-v\\\" interceptor expected event to be a vector. Got a \",cljs.core.type(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.Keyword(null,\"event\",\"event\",301435442)))], 0));\n\nreturn context;\n} else {\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.update_coeffect.cljs$core$IFn$_invoke$arity$variadic(context,new cljs.core.Keyword(null,\"event\",\"event\",301435442),cljs.core.subvec,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(1)], 0));\n}\n}),new cljs.core.Keyword(null,\"after\",\"after\",594996914),(function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$std_interceptors$trim_v_after(context){\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.assoc_coeffect(context,new cljs.core.Keyword(null,\"event\",\"event\",301435442),day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.Keyword(null,\"original-event\",\"original-event\",2121330403)));\n})], 0));\n/**\n * Returns an interceptor which wraps the kind of event handler given to `reg-event-db`.\n * \n *   These handlers take two arguments;  `db` and `event`, and they return `db`.\n * \n *    (fn [db event]\n *       ....)\n * \n *   So, the interceptor wraps the given handler:\n *   1. extracts two `:coeffects` keys: db and event\n *   2. calls handler-fn\n *   3. stores the db result back into context's `:effects`\n */\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.std_interceptors.db_handler__GT_interceptor = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$std_interceptors$db_handler__GT_interceptor(handler_fn){\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),new cljs.core.Keyword(null,\"db-handler\",\"db-handler\",579530098),new cljs.core.Keyword(null,\"before\",\"before\",-1633692388),(function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$std_interceptors$db_handler__GT_interceptor_$_db_handler_before(context){\nvar new_context = ((day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace.is_trace_enabled_QMARK_())?(function (){var _STAR_current_trace_STAR__orig_val__65071 = day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace._STAR_current_trace_STAR_;\nvar _STAR_current_trace_STAR__temp_val__65072 = day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace.start_trace(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668),new cljs.core.Keyword(\"event\",\"handler\",\"event/handler\",-295903150),new cljs.core.Keyword(null,\"operation\",\"operation\",-1267664310),day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.Keyword(null,\"original-event\",\"original-event\",2121330403))], null));\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__temp_val__65072);\n\ntry{try{var map__65073 = day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$1(context);\nvar map__65073__$1 = (((((!((map__65073 == null))))?(((((map__65073.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__65073.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__65073):map__65073);\nvar db = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__65073__$1,new cljs.core.Keyword(null,\"db\",\"db\",993250759));\nvar event = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__65073__$1,new cljs.core.Keyword(null,\"event\",\"event\",301435442));\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.assoc_effect(context,new cljs.core.Keyword(null,\"db\",\"db\",993250759),(handler_fn.cljs$core$IFn$_invoke$arity$2 ? handler_fn.cljs$core$IFn$_invoke$arity$2(db,event) : handler_fn.call(null,db,event)));\n}finally {if(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace.is_trace_enabled_QMARK_()){\nvar end__64814__auto___65130 = day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interop.now();\nvar duration__64815__auto___65131 = (end__64814__auto___65130 - new cljs.core.Keyword(null,\"start\",\"start\",-355208981).cljs$core$IFn$_invoke$arity$1(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace._STAR_current_trace_STAR_));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace.traces,cljs.core.conj,cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"duration\",\"duration\",1444101068),duration__64815__auto___65131,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"end\",\"end\",-268185958),day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interop.now()], 0)));\n\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace.run_tracing_callbacks_BANG_(end__64814__auto___65130);\n} else {\n}\n}}finally {(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__orig_val__65071);\n}})():(function (){var map__65077 = day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$1(context);\nvar map__65077__$1 = (((((!((map__65077 == null))))?(((((map__65077.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__65077.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__65077):map__65077);\nvar db = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__65077__$1,new cljs.core.Keyword(null,\"db\",\"db\",993250759));\nvar event = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__65077__$1,new cljs.core.Keyword(null,\"event\",\"event\",301435442));\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.assoc_effect(context,new cljs.core.Keyword(null,\"db\",\"db\",993250759),(handler_fn.cljs$core$IFn$_invoke$arity$2 ? handler_fn.cljs$core$IFn$_invoke$arity$2(db,event) : handler_fn.call(null,db,event)));\n})());\nif(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__64816__auto___65134 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.merge,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292),day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$1(new_context),new cljs.core.Keyword(null,\"coeffects\",\"coeffects\",497912985),day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$1(context)], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292),day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$1(new_context),new cljs.core.Keyword(null,\"coeffects\",\"coeffects\",497912985),day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$1(context)], null)], null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977))], 0));\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace._STAR_current_trace_STAR_ = new_trace__64816__auto___65134);\n\n} else {\n}\n\nreturn new_context;\n})], 0));\n});\n/**\n * Returns an interceptor which wraps the kind of event handler given to `reg-event-fx`.\n * \n *   These handlers take two arguments;  `coeffects` and `event`, and they return `effects`.\n * \n *    (fn [coeffects event]\n *       {:db ...\n *        :dispatch ...})\n * \n * Wrap handler in an interceptor so it can be added to (the RHS) of a chain:\n *   1. extracts `:coeffects`\n *   2. call handler-fn giving coeffects\n *   3. stores the result back into the `:effects`\n */\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.std_interceptors.fx_handler__GT_interceptor = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$std_interceptors$fx_handler__GT_interceptor(handler_fn){\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),new cljs.core.Keyword(null,\"fx-handler\",\"fx-handler\",-549783097),new cljs.core.Keyword(null,\"before\",\"before\",-1633692388),(function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$std_interceptors$fx_handler__GT_interceptor_$_fx_handler_before(context){\nvar new_context = ((day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace.is_trace_enabled_QMARK_())?(function (){var _STAR_current_trace_STAR__orig_val__65087 = day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace._STAR_current_trace_STAR_;\nvar _STAR_current_trace_STAR__temp_val__65088 = day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace.start_trace(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668),new cljs.core.Keyword(\"event\",\"handler\",\"event/handler\",-295903150),new cljs.core.Keyword(null,\"operation\",\"operation\",-1267664310),day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.Keyword(null,\"original-event\",\"original-event\",2121330403))], null));\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__temp_val__65088);\n\ntry{try{var map__65090 = day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$1(context);\nvar map__65090__$1 = (((((!((map__65090 == null))))?(((((map__65090.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__65090.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__65090):map__65090);\nvar coeffects = map__65090__$1;\nvar event = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__65090__$1,new cljs.core.Keyword(null,\"event\",\"event\",301435442));\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(context,new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292),(handler_fn.cljs$core$IFn$_invoke$arity$2 ? handler_fn.cljs$core$IFn$_invoke$arity$2(coeffects,event) : handler_fn.call(null,coeffects,event)));\n}finally {if(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace.is_trace_enabled_QMARK_()){\nvar end__64814__auto___65141 = day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interop.now();\nvar duration__64815__auto___65142 = (end__64814__auto___65141 - new cljs.core.Keyword(null,\"start\",\"start\",-355208981).cljs$core$IFn$_invoke$arity$1(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace._STAR_current_trace_STAR_));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace.traces,cljs.core.conj,cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"duration\",\"duration\",1444101068),duration__64815__auto___65142,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"end\",\"end\",-268185958),day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interop.now()], 0)));\n\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace.run_tracing_callbacks_BANG_(end__64814__auto___65141);\n} else {\n}\n}}finally {(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__orig_val__65087);\n}})():(function (){var map__65093 = day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$1(context);\nvar map__65093__$1 = (((((!((map__65093 == null))))?(((((map__65093.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__65093.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__65093):map__65093);\nvar coeffects = map__65093__$1;\nvar event = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__65093__$1,new cljs.core.Keyword(null,\"event\",\"event\",301435442));\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(context,new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292),(handler_fn.cljs$core$IFn$_invoke$arity$2 ? handler_fn.cljs$core$IFn$_invoke$arity$2(coeffects,event) : handler_fn.call(null,coeffects,event)));\n})());\nif(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__64816__auto___65146 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.merge,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292),day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$1(new_context),new cljs.core.Keyword(null,\"coeffects\",\"coeffects\",497912985),day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$1(context)], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292),day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$1(new_context),new cljs.core.Keyword(null,\"coeffects\",\"coeffects\",497912985),day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$1(context)], null)], null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977))], 0));\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace._STAR_current_trace_STAR_ = new_trace__64816__auto___65146);\n\n} else {\n}\n\nreturn new_context;\n})], 0));\n});\n/**\n * Returns an interceptor which wraps the kind of event handler given to `reg-event-ctx`.\n *   These advanced handlers take one argument: `context` and they return a modified `context`.\n *   Example:\n * \n *    (fn [context]\n *       (enqueue context [more interceptors]))\n */\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.std_interceptors.ctx_handler__GT_interceptor = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$std_interceptors$ctx_handler__GT_interceptor(handler_fn){\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),new cljs.core.Keyword(null,\"ctx-handler\",\"ctx-handler\",-1777672230),new cljs.core.Keyword(null,\"before\",\"before\",-1633692388),(function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$std_interceptors$ctx_handler__GT_interceptor_$_ctx_handler_before(context){\nvar new_context = ((day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace.is_trace_enabled_QMARK_())?(function (){var _STAR_current_trace_STAR__orig_val__65099 = day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace._STAR_current_trace_STAR_;\nvar _STAR_current_trace_STAR__temp_val__65100 = day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace.start_trace(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668),new cljs.core.Keyword(\"event\",\"handler\",\"event/handler\",-295903150),new cljs.core.Keyword(null,\"operation\",\"operation\",-1267664310),day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.Keyword(null,\"original-event\",\"original-event\",2121330403))], null));\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__temp_val__65100);\n\ntry{try{return (handler_fn.cljs$core$IFn$_invoke$arity$1 ? handler_fn.cljs$core$IFn$_invoke$arity$1(context) : handler_fn.call(null,context));\n}finally {if(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace.is_trace_enabled_QMARK_()){\nvar end__64814__auto___65156 = day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interop.now();\nvar duration__64815__auto___65157 = (end__64814__auto___65156 - new cljs.core.Keyword(null,\"start\",\"start\",-355208981).cljs$core$IFn$_invoke$arity$1(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace._STAR_current_trace_STAR_));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace.traces,cljs.core.conj,cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"duration\",\"duration\",1444101068),duration__64815__auto___65157,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"end\",\"end\",-268185958),day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interop.now()], 0)));\n\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace.run_tracing_callbacks_BANG_(end__64814__auto___65156);\n} else {\n}\n}}finally {(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__orig_val__65099);\n}})():(handler_fn.cljs$core$IFn$_invoke$arity$1 ? handler_fn.cljs$core$IFn$_invoke$arity$1(context) : handler_fn.call(null,context)));\nif(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__64816__auto___65159 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.merge,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292),day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$1(new_context),new cljs.core.Keyword(null,\"coeffects\",\"coeffects\",497912985),day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$1(context)], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292),day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$1(new_context),new cljs.core.Keyword(null,\"coeffects\",\"coeffects\",497912985),day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$1(context)], null)], null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977))], 0));\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace._STAR_current_trace_STAR_ = new_trace__64816__auto___65159);\n\n} else {\n}\n\nreturn new_context;\n})], 0));\n});\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.std_interceptors.path = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$std_interceptors$path(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___65161 = arguments.length;\nvar i__4737__auto___65162 = (0);\nwhile(true){\nif((i__4737__auto___65162 < len__4736__auto___65161)){\nargs__4742__auto__.push((arguments[i__4737__auto___65162]));\n\nvar G__65163 = (i__4737__auto___65162 + (1));\ni__4737__auto___65162 = G__65163;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((0) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((0)),(0),null)):null);\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.std_interceptors.path.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);\n});\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.std_interceptors.path.cljs$core$IFn$_invoke$arity$variadic = (function (args){\nvar path = cljs.core.flatten(args);\nvar db_store_key = new cljs.core.Keyword(\"re-frame-path\",\"db-store\",\"re-frame-path/db-store\",655758490);\nif(cljs.core.empty_QMARK_(path)){\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: \\\"path\\\" interceptor given no params\"], 0));\n} else {\n}\n\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),new cljs.core.Keyword(null,\"path\",\"path\",-188191168),new cljs.core.Keyword(null,\"before\",\"before\",-1633692388),(function (context){\nvar original_db = day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.Keyword(null,\"db\",\"db\",993250759));\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.assoc_coeffect(cljs.core.update.cljs$core$IFn$_invoke$arity$4(context,db_store_key,cljs.core.conj,original_db),new cljs.core.Keyword(null,\"db\",\"db\",993250759),cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(original_db,path));\n}),new cljs.core.Keyword(null,\"after\",\"after\",594996914),(function (context){\nvar db_store = db_store_key.cljs$core$IFn$_invoke$arity$1(context);\nvar original_db = cljs.core.peek(db_store);\nvar new_db_store = cljs.core.pop(db_store);\nvar context_SINGLEQUOTE_ = day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.assoc_coeffect(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(context,db_store_key,new_db_store),new cljs.core.Keyword(null,\"db\",\"db\",993250759),original_db);\nvar db = day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$3(context,new cljs.core.Keyword(null,\"db\",\"db\",993250759),new cljs.core.Keyword(\"day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.std-interceptors\",\"not-found\",\"day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.std-interceptors/not-found\",-713204725));\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(db,new cljs.core.Keyword(\"day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.std-interceptors\",\"not-found\",\"day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.std-interceptors/not-found\",-713204725))){\nreturn context_SINGLEQUOTE_;\n} else {\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.assoc_effect(context_SINGLEQUOTE_,new cljs.core.Keyword(null,\"db\",\"db\",993250759),cljs.core.assoc_in(original_db,path,db));\n}\n})], 0));\n}));\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.std_interceptors.path.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.std_interceptors.path.cljs$lang$applyTo = (function (seq65101){\nvar self__4724__auto__ = this;\nreturn self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq65101));\n}));\n\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.std_interceptors.enrich = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$std_interceptors$enrich(f){\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),new cljs.core.Keyword(null,\"enrich\",\"enrich\",-2108921925),new cljs.core.Keyword(null,\"after\",\"after\",594996914),(function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$std_interceptors$enrich_$_enrich_after(context){\nvar event = day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.Keyword(null,\"event\",\"event\",301435442));\nvar db = ((cljs.core.contains_QMARK_(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$1(context),new cljs.core.Keyword(null,\"db\",\"db\",993250759)))?day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.Keyword(null,\"db\",\"db\",993250759)):day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.Keyword(null,\"db\",\"db\",993250759)));\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.assoc_effect(context,new cljs.core.Keyword(null,\"db\",\"db\",993250759),(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(db,event) : f.call(null,db,event)));\n})], 0));\n});\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.std_interceptors.after = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$std_interceptors$after(f){\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),new cljs.core.Keyword(null,\"after\",\"after\",594996914),new cljs.core.Keyword(null,\"after\",\"after\",594996914),(function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$std_interceptors$after_$_after_after(context){\nvar db = ((cljs.core.contains_QMARK_(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$1(context),new cljs.core.Keyword(null,\"db\",\"db\",993250759)))?day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.Keyword(null,\"db\",\"db\",993250759)):day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.Keyword(null,\"db\",\"db\",993250759)));\nvar event = day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.Keyword(null,\"event\",\"event\",301435442));\n(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(db,event) : f.call(null,db,event));\n\nreturn context;\n})], 0));\n});\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.std_interceptors.on_changes = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$std_interceptors$on_changes(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___65176 = arguments.length;\nvar i__4737__auto___65177 = (0);\nwhile(true){\nif((i__4737__auto___65177 < len__4736__auto___65176)){\nargs__4742__auto__.push((arguments[i__4737__auto___65177]));\n\nvar G__65179 = (i__4737__auto___65177 + (1));\ni__4737__auto___65177 = G__65179;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((2) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((2)),(0),null)):null);\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.std_interceptors.on_changes.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4743__auto__);\n});\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.std_interceptors.on_changes.cljs$core$IFn$_invoke$arity$variadic = (function (f,out_path,in_paths){\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),new cljs.core.Keyword(null,\"on-changes\",\"on-changes\",1345912602),new cljs.core.Keyword(null,\"after\",\"after\",594996914),(function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$std_interceptors$on_change_after(context){\nvar new_db = day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.Keyword(null,\"db\",\"db\",993250759));\nvar old_db = day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.Keyword(null,\"db\",\"db\",993250759));\nvar new_ins = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__65104_SHARP_){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(new_db,p1__65104_SHARP_);\n}),in_paths);\nvar old_ins = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__65105_SHARP_){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(old_db,p1__65105_SHARP_);\n}),in_paths);\nvar changed_ins_QMARK_ = ((cljs.core.contains_QMARK_(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$1(context),new cljs.core.Keyword(null,\"db\",\"db\",993250759)))?cljs.core.some(cljs.core.false_QMARK_,cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core.identical_QMARK_,new_ins,old_ins)):false);\nif(cljs.core.truth_(changed_ins_QMARK_)){\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.assoc_effect(context,new cljs.core.Keyword(null,\"db\",\"db\",993250759),cljs.core.assoc_in(new_db,out_path,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,new_ins)));\n} else {\nreturn context;\n}\n})], 0));\n}));\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.std_interceptors.on_changes.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.std_interceptors.on_changes.cljs$lang$applyTo = (function (seq65106){\nvar G__65107 = cljs.core.first(seq65106);\nvar seq65106__$1 = cljs.core.next(seq65106);\nvar G__65108 = cljs.core.first(seq65106__$1);\nvar seq65106__$2 = cljs.core.next(seq65106__$1);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__65107,G__65108,seq65106__$2);\n}));\n\n/**\n * An interceptor which adds registered global interceptors to the context's queue.\n * \n * NOTE: :queue is a Clojure.lang.PersistentQueue and not a vector.\n */\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.std_interceptors.inject_global_interceptors = day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),new cljs.core.Keyword(null,\"inject-global-interceptors\",\"inject-global-interceptors\",-2144129737),new cljs.core.Keyword(null,\"before\",\"before\",-1633692388),(function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$std_interceptors$inject_global_interceptors_before(context){\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$3(context,new cljs.core.Keyword(null,\"queue\",\"queue\",1455835879),(function (p1__65116_SHARP_){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.settings.get_global_interceptors(),p1__65116_SHARP_);\n}));\n})], 0));\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","contains re-frame supplied, standard interceptors","~:file","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/std_interceptors.cljc","~:line",1,"~:column",33,"~:end-line",1,"~:end-column",105,"~:mranderson/inlined",true],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index","~$highlight.js","~$module$node_modules$highlight_DOT_js$lib$index","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.std-interceptors","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$cofx","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.cofx","~$data","~$clojure.data","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.db","^W","~$cljs.core","^X","~$interceptor","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.settings","^[","~$goog","^10","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.loggers","^11","^T","^T","~$trace","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.trace","~$settings","^[","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.utils","^15","^13","^13","^Z","^Z","~$utils","^15","^V","^V"],"~:seen",["^L",["~:require"]],"~:uses",["^ ","~$->interceptor","^Z","~$get-effect","^Z","~$get-coeffect","^Z","~$assoc-coeffect","^Z","~$assoc-effect","^Z","~$update-coeffect","^Z","~$console","^11","~$app-db","^W"],"~:require-macros",["^ ","^13","^13","^12","^13","^X","^X"],"~:form",["~#list",["~$ns","^N","contains re-frame supplied, standard interceptors",["^1D",["^18",["^Z","~:refer",["^1:","^1;","^1<","^1=","^1>","^1?"]],["^11","^1F",["^1@"]],["^[","~:as","^14"],["^W","^1F",["^1A"]],["^V","^1G","^U"],["^T","^1G","^S"],["^15","^1G","^16"],["^13","^1G","^12","~:include-macros",true],["^Z","^1G","^Y"]]]]],"~:flags",["^ ","^18",["^L",[]]],"~:js-deps",["^ "],"~:deps",["^10","^X","^Z","^11","^[","^W","^V","^T","^15","^13"]],"^P","^N","~:resource-id",["~:shadow.build.classpath/resource","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/std_interceptors.cljc"],"~:compiled-at",1668750084938,"~:resource-name","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/std_interceptors.cljc","~:warnings",[],"~:source","(ns ^{:mranderson/inlined true} day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.std-interceptors\n  \"contains re-frame supplied, standard interceptors\"\n  (:require\n    [day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor :refer [->interceptor get-effect get-coeffect assoc-coeffect assoc-effect update-coeffect]]\n    [day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.loggers :refer [console]]\n    [day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.settings :as settings]\n    [day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.db :refer [app-db]]\n    [clojure.data :as data]\n    [day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.cofx :as cofx]\n    [day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.utils :as utils]\n    [day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.trace :as trace :include-macros true]\n    [day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor :as interceptor]))\n\n\n(def debug\n  (->interceptor\n    :id     :debug\n    :before (fn debug-before\n              [context]\n              (console :log \"Handling re-frame event:\" (get-coeffect context :event))\n              context)\n    :after  (fn debug-after\n              [context]\n              (let [event   (get-coeffect context :event)\n                    orig-db (get-coeffect context :db)\n                    new-db  (get-effect   context :db ::not-found)]\n                (if (= new-db ::not-found)\n                  (console :log \"No app-db changes in:\" event)\n                  (let [[only-before only-after] (data/diff orig-db new-db)\n                        db-changed?    (or (some? only-before) (some? only-after))]\n                    (if db-changed?\n                      (do (console :group \"db clojure.data/diff for:\" event)\n                          (console :log \"only before:\" only-before)\n                          (console :log \"only after :\" only-after)\n                          (console :groupEnd))\n                      (console :log \"No app-db changes resulted from:\" event))))\n                context))))\n\n\n(def unwrap\n  (->interceptor\n    :id      :unwrap\n    :before  (fn unwrap-before\n               [context]\n               (let [[_ payload :as event] (get-coeffect context :event)]\n                 (if-not (and (= 2 (count event))\n                              (map? payload))\n                   (do\n                     (console :warn \"re-frame: \\\"unwrap\\\" interceptor requires event to be a 2-vector of [event-id payload-map]. Got \" event)\n                     context)\n                   (assoc-coeffect context :event payload))))\n    :after   (fn unwrap-after\n               [context]\n               (assoc-coeffect context :event (get-coeffect context :original-event)))))\n\n\n(def trim-v\n  (->interceptor\n    :id      :trim-v\n    :before  (fn trim-v-before\n               [context]\n               (if-not (vector? (get-coeffect context :event))\n                 (do\n                   (console :warn \"re-frame: \\\"trim-v\\\" interceptor expected event to be a vector. Got a \" (type (get-coeffect context :event)))\n                   context)\n                 (update-coeffect context :event subvec 1)))\n    :after   (fn trim-v-after\n               [context]\n               (assoc-coeffect context :event (get-coeffect context :original-event)))))\n\n\n;; -- Interceptor Factories - PART 1 ---------------------------------------------------------------\n;;\n;; These 3 factories wrap the 3 kinds of event handlers.\n;;\n\n(defn db-handler->interceptor\n  \"Returns an interceptor which wraps the kind of event handler given to `reg-event-db`.\n\n  These handlers take two arguments;  `db` and `event`, and they return `db`.\n\n      (fn [db event]\n         ....)\n\n  So, the interceptor wraps the given handler:\n     1. extracts two `:coeffects` keys: db and event\n     2. calls handler-fn\n     3. stores the db result back into context's `:effects`\"\n  [handler-fn]\n  (->interceptor\n    :id     :db-handler\n    :before (fn db-handler-before\n              [context]\n              (let [new-context\n                    (trace/with-trace\n                      {:op-type   :event/handler\n                       :operation (get-coeffect context :original-event)}\n                      (let [{:keys [db event]} (get-coeffect context)]\n                        (->> (handler-fn db event)\n                             (assoc-effect context :db))))]\n                ;; We merge these tags outside of the :event/handler trace because we want them to be assigned to the parent\n                ;; wrapping trace.\n                (trace/merge-trace!\n                  {:tags {:effects   (get-effect new-context)\n                          :coeffects (get-coeffect context)}})\n                new-context))))\n\n\n(defn fx-handler->interceptor\n  \"Returns an interceptor which wraps the kind of event handler given to `reg-event-fx`.\n\n  These handlers take two arguments;  `coeffects` and `event`, and they return `effects`.\n\n      (fn [coeffects event]\n         {:db ...\n          :dispatch ...})\n\n   Wrap handler in an interceptor so it can be added to (the RHS) of a chain:\n     1. extracts `:coeffects`\n     2. call handler-fn giving coeffects\n     3. stores the result back into the `:effects`\"\n  [handler-fn]\n(->interceptor\n  :id     :fx-handler\n  :before (fn fx-handler-before\n            [context]\n            (let [new-context\n                  (trace/with-trace\n                    {:op-type   :event/handler\n                     :operation (get-coeffect context :original-event)}\n                    (let [{:keys [event] :as coeffects} (get-coeffect context)]\n                      (->> (handler-fn coeffects event)\n                           (assoc context :effects))))]\n              (trace/merge-trace!\n                {:tags {:effects   (get-effect new-context)\n                        :coeffects (get-coeffect context)}})\n              new-context))))\n\n\n(defn ctx-handler->interceptor\n  \"Returns an interceptor which wraps the kind of event handler given to `reg-event-ctx`.\n  These advanced handlers take one argument: `context` and they return a modified `context`.\n  Example:\n\n      (fn [context]\n         (enqueue context [more interceptors]))\"\n  [handler-fn]\n  (->interceptor\n    :id     :ctx-handler\n    :before (fn ctx-handler-before\n              [context]\n              (let [new-context\n                    (trace/with-trace\n                      {:op-type   :event/handler\n                       :operation (get-coeffect context :original-event)}\n                      (handler-fn context))]\n                (trace/merge-trace!\n                  {:tags {:effects   (get-effect new-context)\n                          :coeffects (get-coeffect context)}})\n                new-context))))\n\n\n;; -- Interceptors Factories -  PART 2 ------------------------------------------------------------\n\n\n(defn path\n  [& args]\n  (let [path (flatten args)\n        db-store-key :re-frame-path/db-store]    ;; this is where, within `context`, we store the original dbs\n    (when (empty? path)\n      (console :error \"re-frame: \\\"path\\\" interceptor given no params\"))\n    (->interceptor\n      :id      :path\n      :before  (fn\n                 [context]\n                 (let [original-db (get-coeffect context :db)]\n                   (-> context\n                       (update db-store-key conj original-db)\n                       (assoc-coeffect :db (get-in original-db path)))))\n      :after   (fn [context]\n                 (let [db-store     (db-store-key context)\n                       original-db  (peek db-store)\n                       new-db-store (pop db-store)\n                       context'     (-> (assoc context db-store-key new-db-store)\n                                        (assoc-coeffect :db original-db))     ;; put the original db back so that things like debug work later on\n                       db           (get-effect context :db ::not-found)]\n                   (if (= db ::not-found)\n                     context'\n                     (->> (assoc-in original-db path db)\n                          (assoc-effect context' :db))))))))\n\n\n\n\n(defn enrich\n  [f]\n  (->interceptor\n    :id :enrich\n    :after (fn enrich-after\n             [context]\n             (let [event (get-coeffect context :event)\n                   db    (if (contains? (get-effect context) :db)\n                           (get-effect context :db) ;; If no db effect is returned, we provide the original coeffect.\n                           (get-coeffect context :db))]\n               (->> (f db event)\n                    (assoc-effect context :db))))))\n\n\n\n(defn after\n  [f]\n  (->interceptor\n    :id :after\n    :after (fn after-after\n             [context]\n             (let [db    (if (contains? (get-effect context) :db)\n                           (get-effect context :db)\n                           (get-coeffect context :db))\n                   event (get-coeffect context :event)]\n               (f db event) ;; call f for side effects\n               context)))) ;; context is unchanged\n\n(defn  on-changes\n  [f out-path & in-paths]\n  (->interceptor\n    :id    :on-changes\n    :after (fn on-change-after\n             [context]\n             (let [new-db   (get-effect context :db)\n                   old-db   (get-coeffect context :db)\n\n                   ;; work out if any \"inputs\" have changed\n                   new-ins      (map #(get-in new-db %) in-paths)\n                   old-ins      (map #(get-in old-db %) in-paths)\n                   ;; make sure the db is actually set in the effect\n                   changed-ins? (and (contains? (get-effect context) :db)\n                                     (some false? (map identical? new-ins old-ins)))]\n\n               ;; if one of the inputs has changed, then run 'f'\n               (if changed-ins?\n                 (->> (apply f new-ins)\n                      (assoc-in new-db out-path)\n                      (assoc-effect context :db))\n                 context)))))\n\n\n(def inject-global-interceptors\n  \"An interceptor which adds registered global interceptors to the context's queue.\n\n   NOTE: :queue is a Clojure.lang.PersistentQueue and not a vector.\"\n  (->interceptor\n    :id     :inject-global-interceptors\n    :before (fn inject-global-interceptors-before\n              [context]\n              (update context :queue #(into (settings/get-global-interceptors) %)))))\n","~:reader-features",["^L",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings",";AAcA,AAAKA,AACH,AAAA,AAAA,AAAA,AAACC,AAES,AACGC;AADH,AAEE,AAAA,AAAA,AAACC,AAAwC,AAAA,AAACC,AAAaF;;AACvDA;AALZ,AAMU,AACGA;AADH,AAEE,AAAMG,AAAQ,AAAA,AAACD,AAAaF;AACtBI,AAAQ,AAAA,AAACF,AAAaF;AACtBK,AAAQ,AAAA,AAAA,AAACC,AAAaN;AAF5B,AAGE,AAAI,AAAA,AAACO,AAAEF;AACL,AAAA,AAAA,AAACJ,AAAqCE;;AACtC,AAAAK,AAA+B,AAACI,AAAUR,AAAQC;AAAlD,AAAAI,AAAAD,AAAA,AAAA,AAAOE;AAAP,AAAAD,AAAAD,AAAA,AAAA,AAAmBG;AACbE,AAAe,AAAI,AAAA,AAAA,AAAOH,AAAa,AAAA,AAAA,AAAOC;AADpD,AAEE,AAAIE;AACF,AAAI,AAAA,AAAA,AAACZ,AAA2CE;;AAC5C,AAAA,AAAA,AAACF,AAA4BS;;AAC7B,AAAA,AAAA,AAACT,AAA4BU;;AAC7B,AAAA,AAACG;;AACL,AAAA,AAAA,AAACb,AAAgDE;;;;AACvDH;;AAGhB,AAAKe,AACH,AAAA,AAAA,AAAA,AAAChB,AAEU,AACGC;AADH,AAEE,AAAAgB,AAA4B,AAAA,AAACd,AAAaF;AAA1C,AAAAS,AAAAO,AAAA,AAAA,AAAOC;AAAP,AAAAR,AAAAO,AAAA,AAAA,AAASE;AAATF,AAAqBb;AAArB,AACE,AAAA,AAAQ,AAAK,AAAA,AAACI,AAAI,AAACY,AAAMhB,AACZ,AAACiB,AAAKF;AACjB,AACE,AAAA,AAAA,AAACjB,AAAiHE;;AAClHH;;AACF,AAAA,AAACqB,AAAerB,AAAekB;;AAVhD,AAWW,AACGlB;AADH,AAEE,AAAA,AAACqB,AAAerB,AAAe,AAAA,AAACE,AAAaF;;AAG5D,AAAKsB,AACH,AAAA,AAAA,AAAA,AAACvB,AAEU,AACGC;AADH,AAEE,AAAA,AAAQ,AAACuB,AAAQ,AAAA,AAACrB,AAAaF;AAC7B,AACE,AAAA,AAAA,AAACC,AAAuF,AAACuB,AAAK,AAAA,AAACtB,AAAaF;;AAC5GA;;AACF,AAAA,AAAA,AAACyB,AAAgBzB,AAAe0B;;AAR/C,AASW,AACG1B;AADH,AAEE,AAAA,AAACqB,AAAerB,AAAe,AAAA,AAACE,AAAaF;;AAQ5D;;;;;;;;;;;;;AAAA,AAAM2B,AAYHC;AAZH,AAaE,AAAA,AAAA,AAAA,AAAC7B,AAES,AACGC;AADH,AAEE,AAAM6B,AACA,AAAA,AAAAC,AAAA,AAAAC,AAAAC;AAAAC,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAEc,AAAA,AAAChC,AAAaF;AAF5B,AAAA,AAAAgC,AAAAC;;AAAA,AAAA,AAAA,AAAA,AAGE,AAAAU,AAAyB,AAACzC,AAAaF;AAAvC2C,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AAAcM;AAAd,AAAAF,AAAAJ,AAAA,AAAiBxC;AAAjB,AACO,AAACyB,AAAAA,AAAAA,AAAWqB,AAAAA,AAAG9C,AAAAA,AACf,AAAA,AAAC+C,AAAalD;AALvB,AAAA,AAAA,AAAA8B;AAAA,AAAA,AAAAK,AAAA,AAAAC;AAAAC,AAAA,AAAAF,AAAA,AAAA,AAAAH;AAAA,AAAA,AAAAM,AAAAC,AAAAC,AAAA,AAAAC,AAAAT,AAAA,AAAAK,AAAA,AAAA,AAAAD;;AAAA,AAAAM,AAAAP;;AAAA;AAAA,AAAA,AAAAH,AAAAD;AAAA,AAGE,AAAAiB,AAAyB,AAAC9C,AAAaF;AAAvCgD,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAJ,AAAA,AAAAI,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAAC,AAAAE,AAAAA;AAAA,AAAAD,AAAAC,AAAA,AAAcC;AAAd,AAAAF,AAAAC,AAAA,AAAiB7C;AAAjB,AACO,AAACyB,AAAAA,AAAAA,AAAWqB,AAAAA,AAAG9C,AAAAA,AACf,AAAA,AAAC+C,AAAalD;;AAN7B,AASE,AAAA,AAAA8B;AAAA,AAAA,AAAAqB,AAAA,AAAAC,AAAA,AAAAC,AAAArB,AAAA,AAAAsB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACqB,AAAA,AAACjD,AAAAA,AAAWuB,AAAAA,AACZ,AAAA,AAAC3B,AAAAA,AAAaF,AAAAA;AAFnC,AAAA,AAAAgC,AAAAmB;;AAAA;AAAA;;AAGAtB;;;AAGhB;;;;;;;;;;;;;;AAAA,AAAM2B,AAaH5B;AAbH,AAcA,AAAA,AAAA,AAAA,AAAC7B,AAES,AACGC;AADH,AAEE,AAAM6B,AACA,AAAA,AAAAC,AAAA,AAAA2B,AAAAzB;AAAA0B,AAAA,AAAAxB,AAAA,AAAA,AAAA,AAAA,AAEc,AAAA,AAAChC,AAAaF;AAF5B,AAAA,AAAAgC,AAAA0B;;AAAA,AAAA,AAAA,AAAA,AAGE,AAAAC,AAAoC,AAACzD,AAAaF;AAAlD2D,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAf,AAAA,AAAAe,AAAA,AAAA,AAAA,AAAA,AAAAd,AAAAC,AAAAa,AAAAA;AAAAA,AAAyBE;AAAzB,AAAAd,AAAAY,AAAA,AAAcxD;AAAd,AACO,AAACyB,AAAAA,AAAAA,AAAWiC,AAAAA,AAAU1D,AAAAA,AACtB,AAAA,AAACsC,AAAMzC;AALhB,AAAA,AAAA,AAAA8B;AAAA,AAAA,AAAAK,AAAA,AAAAC;AAAAC,AAAA,AAAAF,AAAA,AAAA,AAAAH;AAAA,AAAA,AAAAM,AAAAC,AAAAC,AAAA,AAAAC,AAAAT,AAAA,AAAAK,AAAA,AAAA,AAAAD;;AAAA,AAAAM,AAAAP;;AAAA;AAAA,AAAA,AAAAH,AAAAyB;AAAA,AAGE,AAAAG,AAAoC,AAAC1D,AAAaF;AAAlD4D,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAhB,AAAA,AAAAgB,AAAA,AAAA,AAAA,AAAA,AAAAf,AAAAC,AAAAc,AAAAA;AAAAA,AAAyBC;AAAzB,AAAAd,AAAAa,AAAA,AAAczD;AAAd,AACO,AAACyB,AAAAA,AAAAA,AAAWiC,AAAAA,AAAU1D,AAAAA,AACtB,AAAA,AAACsC,AAAMzC;;AANtB,AAOE,AAAA,AAAA8B;AAAA,AAAA,AAAAqB,AAAA,AAAAC,AAAA,AAAAC,AAAArB,AAAA,AAAAsB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACqB,AAAA,AAACjD,AAAAA,AAAWuB,AAAAA,AACZ,AAAA,AAAC3B,AAAAA,AAAaF,AAAAA;AAFnC,AAAA,AAAAgC,AAAAmB;;AAAA;AAAA;;AAGAtB;;;AAGd;;;;;;;;AAAA,AAAMiC,AAOHlC;AAPH,AAQE,AAAA,AAAA,AAAA,AAAC7B,AAES,AACGC;AADH,AAEE,AAAM6B,AACA,AAAA,AAAAC,AAAA,AAAAiC,AAAA/B;AAAAgC,AAAA,AAAA9B,AAAA,AAAA,AAAA,AAAA,AAEc,AAAA,AAAChC,AAAaF;AAF5B,AAAA,AAAAgC,AAAAgC;;AAAA,AAAA,AAAA,AAAA,AAGE,AAACpC,AAAAA,AAAAA,AAAW5B,AAAAA;AAHd,AAAA,AAAA,AAAA8B;AAAA,AAAA,AAAAK,AAAA,AAAAC;AAAAC,AAAA,AAAAF,AAAA,AAAA,AAAAH;AAAA,AAAA,AAAAM,AAAAC,AAAAC,AAAA,AAAAC,AAAAT,AAAA,AAAAK,AAAA,AAAA,AAAAD;;AAAA,AAAAM,AAAAP;;AAAA;AAAA,AAAA,AAAAH,AAAA+B;AAAA,AAGE,AAACnC,AAAAA,AAAAA,AAAW5B,AAAAA;AAJpB,AAKE,AAAA,AAAA8B;AAAA,AAAA,AAAAqB,AAAA,AAAAC,AAAA,AAAAC,AAAArB,AAAA,AAAAsB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACqB,AAAA,AAACjD,AAAAA,AAAWuB,AAAAA,AACZ,AAAA,AAAC3B,AAAAA,AAAaF,AAAAA;AAFnC,AAAA,AAAAgC,AAAAmB;;AAAA;AAAA;;AAGAtB;;;AAMhB,AAAA,AAAA,AAAAoC,AAAMM;AAAN,AAAA,AAAAL,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAK,AAAAF;;;AAAA,AAAA,AAAA,AAAA,AAAME,AACDI;AADL,AAEE,AAAMC,AAAK,AAACC,AAAQF;AAApB,AACMG;AADN,AAEE,AAAM,AAACC,AAAOH;AAAd,AACE,AAAA,AAAA,AAAC3E;;AADH;;AAEA,AAAA,AAAA,AAAA,AAACF,AAEU,AACGC;AADH,AAEE,AAAMgF,AAAY,AAAA,AAAC9E,AAAaF;AAAhC,AACMA,AACA,AAACqD,AAAOyB,AAAatC,AAAKwC,AAC1B,AAAA,AAAC3D,AAAmB,AAAC4D,AAAOD,AAAYJ;AAP3D,AAQW,AAAK5E;AAAL,AACE,AAAMkF,AAAa,AAACJ,AAAa9E;AAC3BgF,AAAa,AAACG,AAAKD;AACnBE,AAAa,AAACC,AAAIH;AAClBI,AAAiB,AAAC7C,AAAMzC,AAAQ8E,AAAaM,AAC5B,AAAA,AAAC/D,AAAmB2D;AACrC/B,AAAa,AAAA,AAAA,AAAC3C,AAAWN;AAL/B,AAME,AAAI,AAAA,AAACO,AAAE0C;AACLqC;;AACK,AAACC,AAASP,AAAYJ,AAAK3B,AAC3B,AAAA,AAACC,AAAaoC;;;;;AAxBxC,AAAA,AAAA,AAAMf;;AAAN;AAAA,AAAA,AAAA,AAAAC,AAAMD;AAAN,AAAA,AAAAE,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAAC,AAAAF;;;AAAA,AA6BA,AAAA,AAAMgB,AACHC;AADH,AAEE,AAAA,AAAA,AAAA,AAAC1F,AAEQ,AACGC;AADH,AAEE,AAAMG,AAAM,AAAA,AAACD,AAAaF;AACpBiD,AAAM,AAAI,AAAA,AAACyC,AAAU,AAACpF,AAAWN,AACzB,AAAA,AAACM,AAAWN,AACZ,AAAA,AAACE,AAAaF;AAH5B,AAIO,AAACyF,AAAAA,AAAAA,AAAExC,AAAAA,AAAG9C,AAAAA,AACN,AAAA,AAAC+C,AAAalD;;;AAIlC,AAAA,AAAM2F,AACHF;AADH,AAEE,AAAA,AAAA,AAAA,AAAC1F,AAEQ,AACGC;AADH,AAEE,AAAMiD,AAAM,AAAI,AAAA,AAACyC,AAAU,AAACpF,AAAWN,AACzB,AAAA,AAACM,AAAWN,AACZ,AAAA,AAACE,AAAaF;AACtBG,AAAM,AAAA,AAACD,AAAaF;AAH1B,AAIE,AAACyF,AAAAA,AAAAA,AAAExC,AAAAA,AAAG9C,AAAAA;;AACNH;;;AAEf,AAAA,AAAA,AAAAiE,AAAO2B;AAAP,AAAA,AAAA1B,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAA0B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAvB;;;AAAA,AAAA,AAAA,AAAA,AAAOuB,AACJH,AAAEU,AAAWC;AADhB,AAEE,AAAA,AAAA,AAAA,AAACrG,AAEQ,AACGC;AADH,AAEE,AAAMK,AAAS,AAAA,AAACC,AAAWN;AACrBqG,AAAS,AAAA,AAACnG,AAAaF;AAGvBsG,AAAa,AAAA,AAAAC,AAACC;AAAD,AAAM,AAAAD,AAACtB,AAAO5E;AAAU+F;AACrCK,AAAa,AAAA,AAAAC,AAACF;AAAD,AAAM,AAAAE,AAACzB,AAAOoB;AAAUD;AAErCO,AAAa,AAAA,AAAK,AAAA,AAACjB,AAAU,AAACpF,AAAWN,AACvB,AAAC4G,AAAKC,AAAO,AAACL,AAAIM,AAAWR,AAAQG;AAR7D,AAWE,AAAIE;AACG,AAAC9D,AAAM4C,AAAEa,AACT,AAACf,AAASlF,AAAO8F,AACjB,AAAA,AAACjD,AAAalD;;AACnBA;;;;;AArBjB,AAAA,AAAA,AAAO4F;;AAAP;AAAA,AAAA,AAAA,AAAAC,AAAOD;AAAP,AAAA,AAAAE,AAAA,AAAAC,AAAAF;AAAAA,AAAA,AAAAG,AAAAH;AAAAI,AAAA,AAAAF,AAAAF;AAAAA,AAAA,AAAAG,AAAAH;AAAA,AAAA,AAAAK,AAAA;AAAA,AAAA,AAAAA,AAAAJ,AAAAG,AAAAJ;;;AAAA,AAwBA;;;;;AAAKkB,AAIH,AAAA,AAAA,AAAA,AAAChH,AAES,AACGC;AADH,AAEE,AAAA,AAAA,AAAAgH,AAAC3D,AAAOrD;AAAR,AAAwB,AAAAgH,AAACC,AAAK,AAACC","names",["day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.std-interceptors/debug","day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.__GT_interceptor","context","day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.loggers.console","day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect","event","orig-db","new-db","day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_effect","cljs.core._EQ_","vec__65064","cljs.core.nth","only-before","only-after","clojure.data/diff","db-changed?","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.loggers/console","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.std-interceptors/unwrap","vec__65067","_","payload","cljs.core/count","cljs.core/map?","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/assoc-coeffect","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.std-interceptors/trim-v","cljs.core/vector?","cljs.core/type","day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.update_coeffect","cljs.core/subvec","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.std-interceptors/db-handler->interceptor","handler-fn","new-context","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.trace/is-trace-enabled?","*current-trace*-orig-val__65071","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.trace/*current-trace*","*current-trace*-temp-val__65072","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.trace/start-trace","end__64814__auto__","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interop/now","duration__64815__auto__","cljs.core.swap_BANG_","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.trace/traces","cljs.core/conj","cljs.core.assoc","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.trace/run-tracing-callbacks!","map__65073","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","map__65077","db","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/assoc-effect","new-trace__64816__auto__","cljs.core.merge","cljs.core.update","cljs.core/merge","cljs.core.dissoc","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.std-interceptors/fx-handler->interceptor","*current-trace*-orig-val__65087","*current-trace*-temp-val__65088","map__65090","map__65093","coeffects","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.std-interceptors/ctx-handler->interceptor","*current-trace*-orig-val__65099","*current-trace*-temp-val__65100","var_args","args__4742__auto__","len__4736__auto__","i__4737__auto__","argseq__4743__auto__","cljs.core/IndexedSeq","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.std-interceptors/path","seq65101","self__4724__auto__","cljs.core/seq","args","path","cljs.core/flatten","db-store-key","cljs.core/empty?","original-db","cljs.core.get_in","db-store","cljs.core/peek","new-db-store","cljs.core/pop","context'","cljs.core/assoc-in","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.std-interceptors/enrich","f","cljs.core/contains?","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.std-interceptors/after","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.std-interceptors/on-changes","seq65106","G__65107","cljs.core/first","cljs.core/next","G__65108","self__4723__auto__","out-path","in-paths","old-db","new-ins","p1__65104#","cljs.core.map","old-ins","p1__65105#","changed-ins?","cljs.core/some","cljs.core/false?","cljs.core/identical?","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.std-interceptors/inject-global-interceptors","p1__65116#","cljs.core.into","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.settings/get-global-interceptors"]],"~:used-vars",["^L",["~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.std-interceptors/fx-handler->interceptor","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.std-interceptors/after","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.settings/get-global-interceptors","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/get-coeffect","~$cljs.core/vector?","~$cljs.core/=","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.trace/is-trace-enabled?","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/assoc-effect","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.std-interceptors/inject-global-interceptors","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.std-interceptors/ctx-handler->interceptor","~$cljs.core/count","~$cljs.core/seq","~$cljs.core/apply","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.std-interceptors/on-changes","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.std-interceptors/unwrap","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.trace/*current-trace*","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.std-interceptors/debug","~$cljs.core/empty?","~$cljs.core/into","~$cljs.core/map?","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/update-coeffect","~$cljs.core/conj","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.std-interceptors/path","~$cljs.core/update","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/assoc-coeffect","~$cljs.core/get-in","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.loggers/console","~$cljs.core/subvec","~$cljs.core/not","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.std-interceptors/db-handler->interceptor","~$cljs.core/assoc-in","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/->interceptor","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.std-interceptors/enrich","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.std-interceptors/trim-v","~$cljs.core/type"]]],"~:cache-keys",["~#cmap",[["^1M","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^L",[]],"~:deps-syms",["^10","~$goog.dom.HtmlElement"]]],["^1M","goog/labs/useragent/platform.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","~$goog.labs.userAgent.util","~$goog.string"]]],["^1M","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","~$goog.array","~$goog.asserts"]]],["^1M","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10"]]],["^1M","goog/events/eventtype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","~$goog.events.BrowserFeature","~$goog.userAgent"]]],["^1M","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^2Y","^2W","~$goog.object","~$goog.string.internal"]]],["^1M","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^2Z","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^32"]]],["^1M","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^2Z"]]],["^1M","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/registrar.cljc"],["b62e3632bcb12831abdceed273b41eefc80e66c4","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^X","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interop","^11","^["]]],["^1M","goog/useragent/useragent.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^2W","~$goog.reflect","^2X"]]],["^1M","day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/ratom.cljs"],["b62e3632bcb12831abdceed273b41eefc80e66c4","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^X","~$day8.re-frame-10x.inlined-deps.reagent.v1v0v0.reagent.impl.util","~$day8.re-frame-10x.inlined-deps.reagent.v1v0v0.reagent.debug","~$day8.re-frame-10x.inlined-deps.reagent.v1v0v0.reagent.impl.batching","~$clojure.set","^31"]]],["^1M","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10"]]],["^1M","goog/events/events.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^2Z","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","^2[","~$goog.events.Listenable","~$goog.events.ListenerMap"]]],["^1M","goog/events/browserfeature.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^30"]]],["^1M","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10"]]],["^1M","day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/impl/protocols.cljs"],["b62e3632bcb12831abdceed273b41eefc80e66c4","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^X"]]],["^1M","goog/disposable/disposable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","~$goog.disposable.IDisposable"]]],["^1M","day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/impl/input.cljs"],["b62e3632bcb12831abdceed273b41eefc80e66c4","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^X","~$day8.re-frame-10x.inlined-deps.reagent.v1v0v0.reagent.impl.component","^3@","~$day8.re-frame-10x.inlined-deps.reagent.v1v0v0.reagent.impl.protocols"]]],["^1M","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10"]]],["^1M","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/settings.cljc"],["b62e3632bcb12831abdceed273b41eefc80e66c4","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^X","^39","^11"]]],["~:shadow.build.npm/resource","node_modules/react/index.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","ec51811aee0e84dcb5ca27e77681d692f87bd8e2","a69a7f3d4a4636bf9035bc53c05b2d99a7b8af7f","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["~$shadow.js","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1M","shadow/js.js"],["fa1e82c50ca54c81300cceeb10716bdd3f414429","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10"]]],["^1M","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10"]]],["^1M","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^2Z"]]],["^1M","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/cofx.cljc"],["b62e3632bcb12831abdceed273b41eefc80e66c4","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^X","^W","^Z","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.registrar","^11"]]],"~:SHADOW-TIMESTAMP",[1668744077000,1668744077000,1668745156000],["^3I","node_modules/react/cjs/react.development.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","ec51811aee0e84dcb5ca27e77681d692f87bd8e2","2d5bc5b3fb2e19279e31e634b0695b1fd96a54f3","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^3J","~$module$node_modules$object_assign$index"]]],["^1M","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^2Z","^3="]]],["^1M","goog/events/listener.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","~$goog.events.ListenableKey"]]],["^1M","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/db.cljc"],["b62e3632bcb12831abdceed273b41eefc80e66c4","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^X","^39"]]],["^1M","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^2Z","~$goog.html.trustedtypes","^35","^36","^37","^38"]]],["^1M","goog/events/listenermap.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^2Y","~$goog.events.Listener","^31"]]],["^1M","goog/events/eventid.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10"]]],["^1M","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10"]]],["^1M","day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/impl/template.cljs"],["b62e3632bcb12831abdceed273b41eefc80e66c4","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^X","^A","~$clojure.string","^3>","^3G","^3@","~$day8.re-frame-10x.inlined-deps.reagent.v1v0v0.reagent.impl.input","^3H","~$day8.re-frame-10x.inlined-deps.reagent.v1v0v0.reagent.ratom","^3?","^31"]]],["^1M","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10"]]],["^1M","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^2Y","^2Z","~$goog.html.SafeUrl","^37","^38","^32"]]],["^1M","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^2Z","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^3V","^34","~$goog.html.uncheckedconversions","^37","^32"]]],["^1M","clojure/walk.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^X"]]],["^1M","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1M","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^2Y","^2Z","~$goog.dom.TagName","~$goog.dom.tags","^3Z","^3[","~$goog.html.SafeStyleSheet","^3V","^34","^3Q","^35","^36","^3:","^31","^37","^38","^32"]]],["^1M","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^31"]]],["^1M","goog/math/size.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10"]]],["^1M","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc"],["b62e3632bcb12831abdceed273b41eefc80e66c4","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^X","^11","^39","^13","^3A"]]],["^1M","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/std_interceptors.cljc"],["b62e3632bcb12831abdceed273b41eefc80e66c4","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^X","^Z","^11","^[","^W","^V","^T","^15","^13"]]],["^1M","goog/labs/useragent/engine.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^2Y","^2W","^2X"]]],["^1M","goog/dom/dom.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^2Y","^2Z","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^43","~$goog.dom.safe","^3Y","^40","~$goog.math.Coordinate","~$goog.math.Size","^31","^2X","~$goog.string.Unicode","^30"]]],["^1M","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","~$goog.debug.Error","^47"]]],["^1M","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/loggers.cljc"],["b62e3632bcb12831abdceed273b41eefc80e66c4","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^X","^3A"]]],["^1M","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interop.cljs"],["b62e3632bcb12831abdceed273b41eefc80e66c4","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^X","~$goog.async.nextTick","~$goog.events","~$day8.re-frame-10x.inlined-deps.reagent.v1v0v0.reagent.core","^3U"]]],["^1M","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^2Y","^2Z","^2X","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1M","day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/core.cljs"],["b62e3632bcb12831abdceed273b41eefc80e66c4","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^X","^A","~$day8.re-frame-10x.inlined-deps.reagent.v1v0v0.reagent.impl.template","^3G","^3>","^3@","^3H","^3U","^3?"]]],["^1M","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10"]]],["^3I","node_modules/object-assign/index.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","ec51811aee0e84dcb5ca27e77681d692f87bd8e2","519ffd5a4c91b67302cc9947b794966d629860cd","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^3J"]]],["^1M","goog/disposable/idisposable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10"]]],["^1M","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10"]]],["^1M","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",[]]],["^1M","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^2Y","^31"]]],["^1M","clojure/string.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^X","^2X","~$goog.string.StringBuffer"]]],["^3I","node_modules/react/cjs/react.production.min.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","ec51811aee0e84dcb5ca27e77681d692f87bd8e2","6093d43b27c84de58b9ce55e3a930469339c9e54","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^3J","^3O"]]],["^1M","goog/debug/entrypointregistry.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^2Z"]]],["^1M","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^48","^40","^37","^32"]]],["^1M","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/utils.cljc"],["b62e3632bcb12831abdceed273b41eefc80e66c4","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^X","^11"]]],["^1M","clojure/data.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^X","^3A"]]],["^1M","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10"]]],["^1M","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^32"]]],["^1M","goog/debug/debug.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^2Y","~$goog.debug.errorcontext","^30"]]],["^1M","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10"]]],["^1M","goog/math/coordinate.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","~$goog.math"]]],["^1M","goog/debug/errorcontext.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10"]]],["^1M","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^2Y","^2Z","^3X","^4H"]]],["^1M","goog/async/nexttick.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^3B","~$goog.dom","^43","^48","^3X","^3Y","^34","^3:","^3;","^37"]]],["^1M","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^2Z","^3Y","^3Z","^3[","^45","^3V","^34","^37","^32"]]],["^1M","goog/events/event.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","~$goog.Disposable","~$goog.events.EventId"]]],["^1M","day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/debug.cljs"],["b62e3632bcb12831abdceed273b41eefc80e66c4","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^X"]]],["^1M","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10"]]],["^1M","cljs/core.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","~$goog.math.Long","~$goog.math.Integer","^2X","^31","^2Y","~$goog.Uri","^4F"]]],["^1M","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^2Z","^3Q","^37","^38"]]],["^1M","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/trace.cljc"],["b62e3632bcb12831abdceed273b41eefc80e66c4","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^X","^39","^11","^3X"]]],["^1M","day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/impl/component.cljs"],["b62e3632bcb12831abdceed273b41eefc80e66c4","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^X","^31","^A","^3>","^3@","^3H","^3U","^3?"]]],["^1M","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^2Y","^2Z","^3[","^31","^37","^38","^32"]]],["^1M","goog/events/browserevent.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","~$goog.debug","^2[","~$goog.events.Event","~$goog.events.EventType","^3=","^30"]]],["^1M","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^3="]]],["^1M","goog/dom/browserfeature.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^30"]]],["^1M","day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/impl/batching.cljs"],["b62e3632bcb12831abdceed273b41eefc80e66c4","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^X","^3?","^3>"]]],["^1M","clojure/set.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^X"]]],["^1M","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^2Y","^2Z","^2X"]]],["^1M","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^2Z","^38"]]],["^1M","day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/impl/util.cljs"],["b62e3632bcb12831abdceed273b41eefc80e66c4","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^X","^3S","~$clojure.walk","^31","^3?"]]],["^1M","goog/events/listenable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^L",[]],"^2U",["^10","^4K"]]]]],"~:clj-info",["^ ","jar:file:/home/riz/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/tagged_literals.cljc",1668745156000,"jar:file:/home/riz/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/source_map/base64.clj",1668745156000,"jar:file:/home/riz/.m2/repository/day8/re-frame/re-frame-10x/1.2.0/re-frame-10x-1.2.0.jar!/day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interop.clj",1668750006000,"jar:file:/home/riz/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1652431301000,"jar:file:/home/riz/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1659945934000,"jar:file:/home/riz/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1652431301000,"jar:file:/home/riz/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1652431301000,"jar:file:/home/riz/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/compiler.cljc",1668745156000,"jar:file:/home/riz/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/util.cljc",1668745156000,"jar:file:/home/riz/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1652431301000,"jar:file:/home/riz/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1652431301000,"jar:file:/home/riz/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1659945934000,"jar:file:/home/riz/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1659945934000,"jar:file:/home/riz/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/env.cljc",1668745156000,"jar:file:/home/riz/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1659945905000,"jar:file:/home/riz/.m2/repository/day8/re-frame/re-frame-10x/1.2.0/re-frame-10x-1.2.0.jar!/day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/debug.clj",1668750006000,"jar:file:/home/riz/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/externs.clj",1668745156000,"jar:file:/home/riz/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/source_map/base64_vlq.clj",1668745156000,"jar:file:/home/riz/.m2/repository/day8/re-frame/re-frame-10x/1.2.0/re-frame-10x-1.2.0.jar!/day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/trace.cljc",1668750006000,"jar:file:/home/riz/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/js_deps.cljc",1668745156000,"jar:file:/home/riz/.m2/repository/day8/re-frame/re-frame-10x/1.2.0/re-frame-10x-1.2.0.jar!/day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/interop.clj",1668750006000,"jar:file:/home/riz/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/analyzer.cljc",1668745156000,"jar:file:/home/riz/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1652431301000,"jar:file:/home/riz/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1659945934000,"jar:file:/home/riz/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1652431301000,"jar:file:/home/riz/.m2/repository/day8/re-frame/re-frame-10x/1.2.0/re-frame-10x-1.2.0.jar!/day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/core.clj",1668750006000,"jar:file:/home/riz/.m2/repository/day8/re-frame/re-frame-10x/1.2.0/re-frame-10x-1.2.0.jar!/day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/ratom.clj",1668750006000,"jar:file:/home/riz/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/source_map.clj",1668745156000,"jar:file:/home/riz/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1659945934000,"jar:file:/home/riz/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/core.cljc",1668745156000,"jar:file:/home/riz/.m2/repository/net/cgrand/macrovich/0.2.1/macrovich-0.2.1.jar!/net/cgrand/macrovich.cljc",1668515819000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","contains re-frame supplied, standard interceptors","^7","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/std_interceptors.cljc","^8",1,"^9",33,"^:",1,"^;",105,"^<",true],"^=",["^ ","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I"],"^J",null,"^K",["^L",[]],"^M","^N","^Q",null,"^R",["^ ","^S","^T","^U","^V","^W","^W","^X","^X","^Y","^Z","^[","^[","^10","^10","^11","^11","^T","^T","^12","^13","^14","^[","^15","^15","^13","^13","^Z","^Z","^16","^15","^V","^V"],"^17",["^L",["^18"]],"^19",["^ ","^1:","^Z","^1;","^Z","^1<","^Z","^1=","^Z","^1>","^Z","^1?","^Z","^1@","^11","^1A","^W"],"~:defs",["^ ","~$unwrap",["^ ","^M","^2;","^7","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/std_interceptors.cljc","^8",40,"^9",1,"^:",40,"^;",12,"^5",["^ ","^7","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/std_interceptors.cljc","^8",40,"^9",6,"^:",40,"^;",12],"~:tag","~$cljs.core/IMap"],"~$on-changes",["^ ","~:protocol-inline",null,"^5",["^ ","^7","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/std_interceptors.cljc","^8",223,"^9",8,"^:",223,"^;",18,"~:arglists",["^1D",["~$quote",["^1D",[["~$f","~$out-path","~$&","~$in-paths"]]]]],"~:top-fn",["^ ","~:variadic?",true,"~:fixed-arity",2,"~:max-fixed-arity",2,"~:method-params",[["^1D",["~$f","^5P","^5Q"]]],"^5N",["^1D",[["~$f","^5P","~$&","^5Q"]]],"~:arglists-meta",["^1D",[null]]]],"^M","^2:","^7","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/std_interceptors.cljc","^;",18,"^5R",["^ ","^5S",true,"^5T",2,"^5U",2,"^5V",[["^1D",["~$f","^5P","^5Q"]]],"^5N",["^1D",[["~$f","^5P","~$&","^5Q"]]],"^5W",["^1D",[null]]],"^5V",[["^1D",["~$f","^5P","^5Q"]]],"~:protocol-impl",null,"^5T",2,"^5W",["^1D",[null]],"^9",1,"^5S",true,"~:methods",[["^ ","^5T",2,"^5S",true,"^5J","^5K"]],"^8",223,"~:ret-tag","~$any","^:",223,"^5U",2,"~:fn-var",true,"^5N",["^1D",[["~$f","^5P","~$&","^5Q"]]]],"~$enrich",["^ ","^5M",null,"^5",["^ ","^7","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/std_interceptors.cljc","^8",195,"^9",7,"^:",195,"^;",13,"^5N",["^1D",["^5O",["^1D",[["~$f"]]]]]],"^M","^2M","^7","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/std_interceptors.cljc","^;",13,"^5V",["^1D",[["~$f"]]],"^5X",null,"^5W",["^1D",[null,null]],"^9",1,"^5S",false,"^8",195,"^5Z","^5K","^:",195,"^5U",1,"^60",true,"^5N",["^1D",["^5O",["^1D",[["~$f"]]]]]],"~$path",["^ ","^5M",null,"^5",["^ ","^7","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/std_interceptors.cljc","^8",166,"^9",7,"^:",166,"^;",11,"^5N",["^1D",["^5O",["^1D",[["~$&","~$args"]]]]],"^5R",["^ ","^5S",true,"^5T",0,"^5U",0,"^5V",[["^1D",["^63"]]],"^5N",["^1D",[["~$&","^63"]]],"^5W",["^1D",[null]]]],"^M","^2C","^7","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/std_interceptors.cljc","^;",11,"^5R",["^ ","^5S",true,"^5T",0,"^5U",0,"^5V",[["^1D",["^63"]]],"^5N",["^1D",[["~$&","^63"]]],"^5W",["^1D",[null]]],"^5V",[["^1D",["^63"]]],"^5X",null,"^5T",0,"^5W",["^1D",[null]],"^9",1,"^5S",true,"^5Y",[["^ ","^5T",0,"^5S",true,"^5J","^5K"]],"^8",166,"^5Z","^5[","^:",166,"^5U",0,"^60",true,"^5N",["^1D",[["~$&","^63"]]]],"~$ctx-handler->interceptor",["^ ","^5M",null,"^5",["^ ","^7","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/std_interceptors.cljc","^8",140,"^9",7,"^:",140,"^;",31,"^5N",["^1D",["^5O",["^1D",[["~$handler-fn"]]]]],"^6","Returns an interceptor which wraps the kind of event handler given to `reg-event-ctx`.\n  These advanced handlers take one argument: `context` and they return a modified `context`.\n  Example:\n\n      (fn [context]\n         (enqueue context [more interceptors]))"],"^M","^26","^7","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/std_interceptors.cljc","^;",31,"^5V",["^1D",[["^65"]]],"^5X",null,"^5W",["^1D",[null,null]],"^9",1,"^5S",false,"^8",140,"^5Z","^5K","^:",140,"^5U",1,"^60",true,"^5N",["^1D",["^5O",["^1D",[["^65"]]]]],"^6","Returns an interceptor which wraps the kind of event handler given to `reg-event-ctx`.\n  These advanced handlers take one argument: `context` and they return a modified `context`.\n  Example:\n\n      (fn [context]\n         (enqueue context [more interceptors]))"],"~$debug",["^ ","^M","^2=","^7","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/std_interceptors.cljc","^8",15,"^9",1,"^:",15,"^;",11,"^5",["^ ","^7","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/std_interceptors.cljc","^8",15,"^9",6,"^:",15,"^;",11],"^5J","^5K"],"~$trim-v",["^ ","^M","^2N","^7","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/std_interceptors.cljc","^8",57,"^9",1,"^:",57,"^;",12,"^5",["^ ","^7","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/std_interceptors.cljc","^8",57,"^9",6,"^:",57,"^;",12],"^5J","^5K"],"~$after",["^ ","^5M",null,"^5",["^ ","^7","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/std_interceptors.cljc","^8",210,"^9",7,"^:",210,"^;",12,"^5N",["^1D",["^5O",["^1D",[["~$f"]]]]]],"^M","^1Z","^7","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/std_interceptors.cljc","^;",12,"^5V",["^1D",[["~$f"]]],"^5X",null,"^5W",["^1D",[null,null]],"^9",1,"^5S",false,"^8",210,"^5Z","^5K","^:",210,"^5U",1,"^60",true,"^5N",["^1D",["^5O",["^1D",[["~$f"]]]]]],"~$fx-handler->interceptor",["^ ","^5M",null,"^5",["^ ","^7","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/std_interceptors.cljc","^8",109,"^9",7,"^:",109,"^;",30,"^5N",["^1D",["^5O",["^1D",[["^65"]]]]],"^6","Returns an interceptor which wraps the kind of event handler given to `reg-event-fx`.\n\n  These handlers take two arguments;  `coeffects` and `event`, and they return `effects`.\n\n      (fn [coeffects event]\n         {:db ...\n          :dispatch ...})\n\n   Wrap handler in an interceptor so it can be added to (the RHS) of a chain:\n     1. extracts `:coeffects`\n     2. call handler-fn giving coeffects\n     3. stores the result back into the `:effects`"],"^M","^1Y","^7","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/std_interceptors.cljc","^;",30,"^5V",["^1D",[["^65"]]],"^5X",null,"^5W",["^1D",[null,null]],"^9",1,"^5S",false,"^8",109,"^5Z","^5K","^:",109,"^5U",1,"^60",true,"^5N",["^1D",["^5O",["^1D",[["^65"]]]]],"^6","Returns an interceptor which wraps the kind of event handler given to `reg-event-fx`.\n\n  These handlers take two arguments;  `coeffects` and `event`, and they return `effects`.\n\n      (fn [coeffects event]\n         {:db ...\n          :dispatch ...})\n\n   Wrap handler in an interceptor so it can be added to (the RHS) of a chain:\n     1. extracts `:coeffects`\n     2. call handler-fn giving coeffects\n     3. stores the result back into the `:effects`"],"~$db-handler->interceptor",["^ ","^5M",null,"^5",["^ ","^7","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/std_interceptors.cljc","^8",77,"^9",7,"^:",77,"^;",30,"^5N",["^1D",["^5O",["^1D",[["^65"]]]]],"^6","Returns an interceptor which wraps the kind of event handler given to `reg-event-db`.\n\n  These handlers take two arguments;  `db` and `event`, and they return `db`.\n\n      (fn [db event]\n         ....)\n\n  So, the interceptor wraps the given handler:\n     1. extracts two `:coeffects` keys: db and event\n     2. calls handler-fn\n     3. stores the db result back into context's `:effects`"],"^M","^2J","^7","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/std_interceptors.cljc","^;",30,"^5V",["^1D",[["^65"]]],"^5X",null,"^5W",["^1D",[null,null]],"^9",1,"^5S",false,"^8",77,"^5Z","^5K","^:",77,"^5U",1,"^60",true,"^5N",["^1D",["^5O",["^1D",[["^65"]]]]],"^6","Returns an interceptor which wraps the kind of event handler given to `reg-event-db`.\n\n  These handlers take two arguments;  `db` and `event`, and they return `db`.\n\n      (fn [db event]\n         ....)\n\n  So, the interceptor wraps the given handler:\n     1. extracts two `:coeffects` keys: db and event\n     2. calls handler-fn\n     3. stores the db result back into context's `:effects`"],"~$inject-global-interceptors",["^ ","^5",["^ ","^7","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/std_interceptors.cljc","^8",247,"^9",6,"^:",247,"^;",32],"^M","^25","^7","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/std_interceptors.cljc","^;",32,"^9",1,"^8",247,"^:",247,"^5J","^5K","^6","An interceptor which adds registered global interceptors to the context's queue.\n\n   NOTE: :queue is a Clojure.lang.PersistentQueue and not a vector."]],"^1B",["^ ","^13","^13","^12","^13","^X","^X"],"~:cljs.analyzer/constants",["^ ","^17",["^L",["~:path","~:tags","~:original-event","~:group","~:db","~:fx-handler","~:queue","~:warn","~:operation","~:day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.std-interceptors/not-found","~:start","~:duration","~:debug","~:trim-v","~:event/handler","~:db-handler","~:event","~:after","~:id","~:effects","~:inject-global-interceptors","~:error","~:coeffects","~:re-frame-path/db-store","~:end","~:unwrap","~:on-changes","~:groupEnd","~:ctx-handler","~:enrich","~:before","~:op-type","~:log"]],"~:order",["^6O","^6I","^6[","^71","^6M","^6N","^6A","^6F","^6@","^6X","^6V","^6D","^6?","^6J","^6L","^70","^6E","^6K","^6G","^6H","^6U","^6>","^6P","^6S","^6B","^6Y","^6T","^6R","^6=","^6Z","^6W","^6Q","^6C"]],"^1I",["^ ","^18",["^L",[]]],"^1J",["^ "],"^1K",["^10","^X","^Z","^11","^[","^W","^V","^T","^15","^13"]],"^P","^N","~:ns-specs",["^ "],"~:ns-spec-vars",["^L",[]],"~:compiler-options",["^2Q",[["^75","~:static-fns"],true,["^75","~:shadow-tweaks"],null,["^75","~:source-map-inline"],null,["^75","~:elide-asserts"],false,["^75","~:optimize-constants"],null,["^75","^1P"],null,["^75","~:external-config"],null,["^75","~:tooling-config"],null,["^75","~:emit-constants"],null,["^75","~:load-tests"],null,["^75","~:form-size-threshold"],null,["^75","~:data-readers"],null,["^75","~:infer-externs"],"~:auto",["^75","^1R"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^75","~:fn-invoke-direct"],null,["^75","~:source-map"],"/dev/null"]]]