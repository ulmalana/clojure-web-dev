["^ ","~:output",["^ ","~:js","goog.provide('rewrite_clj.zip.removez');\n/**\n * Remove all whitespace following a given node.\n */\nrewrite_clj.zip.removez.remove_trailing_space = (function rewrite_clj$zip$removez$remove_trailing_space(zloc,p_QMARK_){\nreturn rewrite_clj.zip.utils.remove_right_while(zloc,p_QMARK_);\n});\n/**\n * Remove all whitespace preceding a given node.\n */\nrewrite_clj.zip.removez.remove_preceding_space = (function rewrite_clj$zip$removez$remove_preceding_space(zloc,p_QMARK_){\nreturn rewrite_clj.zip.utils.remove_left_while(zloc,p_QMARK_);\n});\n/**\n * Remove value at the given zipper location. Returns the first non-whitespace\n * node that would have preceded it in a depth-first walk. Will remove whitespace\n * appropriately.\n * \n *   - `[1  2  3]   => [1  3]`\n *   - `[1 2]       => [1]`\n *   - `[1 2]       => [2]`\n *   - `[1]         => []`\n *   - `[  1  ]     => []`\n *   - `[1 [2 3] 4] => [1 [2 3]]`\n *   - `[1 [2 3] 4] => [[2 3] 4]`\n * \n * If a node is located rightmost, both preceding and trailing spaces are removed,\n * otherwise only trailing spaces are touched. This means that a following element\n * (no matter whether on the same line or not) will end up in the same position\n * (line/column) as the removed one, _unless_ a comment lies between the original\n * node and the neighbour.\n */\nrewrite_clj.zip.removez.remove = (function rewrite_clj$zip$removez$remove(zloc){\nif(cljs.core.truth_(zloc)){\n} else {\nthrow (new Error(\"Assert failed: zloc\"));\n}\n\nvar _PERCENT_ = rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$2(clojure.zip.prev,clojure.zip.remove(rewrite_clj.zip.removez.remove_trailing_space(((((rewrite_clj.zip.move.rightmost_QMARK_(zloc)) || (rewrite_clj.zip.move.leftmost_QMARK_(zloc))))?rewrite_clj.zip.removez.remove_preceding_space(zloc,rewrite_clj.zip.whitespace.whitespace_QMARK_):zloc),rewrite_clj.zip.whitespace.whitespace_QMARK_)));\nif(cljs.core.truth_(_PERCENT_)){\n} else {\nthrow (new Error(\"Assert failed: %\"));\n}\n\nreturn _PERCENT_;\n});\n/**\n * Same as remove but preserves newlines\n */\nrewrite_clj.zip.removez.remove_preserve_newline = (function rewrite_clj$zip$removez$remove_preserve_newline(zloc){\nif(cljs.core.truth_(zloc)){\n} else {\nthrow (new Error(\"Assert failed: zloc\"));\n}\n\nvar _PERCENT_ = rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$2(clojure.zip.prev,clojure.zip.remove(rewrite_clj.zip.removez.remove_trailing_space(((((rewrite_clj.zip.move.rightmost_QMARK_(zloc)) || (rewrite_clj.zip.move.leftmost_QMARK_(zloc))))?rewrite_clj.zip.removez.remove_preceding_space(zloc,(function (p1__69707_SHARP_){\nvar and__4115__auto__ = rewrite_clj.zip.whitespace.whitespace_QMARK_(p1__69707_SHARP_);\nif(cljs.core.truth_(and__4115__auto__)){\nreturn cljs.core.not(rewrite_clj.zip.whitespace.linebreak_QMARK_(p1__69707_SHARP_));\n} else {\nreturn and__4115__auto__;\n}\n})):zloc),(function (p1__69708_SHARP_){\nvar and__4115__auto__ = rewrite_clj.zip.whitespace.whitespace_QMARK_(p1__69708_SHARP_);\nif(cljs.core.truth_(and__4115__auto__)){\nreturn cljs.core.not(rewrite_clj.zip.whitespace.linebreak_QMARK_(p1__69708_SHARP_));\n} else {\nreturn and__4115__auto__;\n}\n}))));\nif(cljs.core.truth_(_PERCENT_)){\n} else {\nthrow (new Error(\"Assert failed: %\"));\n}\n\nreturn _PERCENT_;\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","rewrite_clj/zip/removez.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",28],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index","~$highlight.js","~$module$node_modules$highlight_DOT_js$lib$index","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",["~$remove"]],"~:name","~$rewrite-clj.zip.removez","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$clojure.zip","^R","~$u","~$rewrite-clj.zip.utils","~$cljs.core","^T","~$ws","~$rewrite-clj.zip.whitespace","~$goog","^W","~$m","~$rewrite-clj.zip.move","^V","^V","^X","^X","~$z","^R","^S","^S"],"~:seen",["^J",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^T","^T"],"~:form",["~#list",["~$ns","^M",["^12",["~:refer-clojure","~:exclude",["^K"]]],["^12",["^Z",["^X","~:as","~$m"],["^S","^16","~$u"],["^V","^16","^U"],["^R","^16","~$z"]]]]],"~:flags",["^ ","^Z",["^J",[]]],"~:js-deps",["^ "],"~:deps",["^W","^T","^X","^S","^V","^R"]],"^O","^M","~:resource-id",["~:shadow.build.classpath/resource","rewrite_clj/zip/removez.cljs"],"~:compiled-at",1668750089283,"~:resource-name","rewrite_clj/zip/removez.cljs","~:warnings",[],"~:source","(ns rewrite-clj.zip.removez\n  (:refer-clojure :exclude [remove])\n  (:require [rewrite-clj.zip.move :as m]\n            [rewrite-clj.zip.utils :as u]\n            [rewrite-clj.zip.whitespace :as ws]\n            [clojure.zip :as z]))\n\n\n(defn- remove-trailing-space\n  \"Remove all whitespace following a given node.\"\n  [zloc p?]\n  (u/remove-right-while zloc p?))\n\n(defn- remove-preceding-space\n  \"Remove all whitespace preceding a given node.\"\n  [zloc p?]\n  (u/remove-left-while zloc p?))\n\n(defn remove\n  \"Remove value at the given zipper location. Returns the first non-whitespace\n   node that would have preceded it in a depth-first walk. Will remove whitespace\n   appropriately.\n\n  - `[1  2  3]   => [1  3]`\n  - `[1 2]       => [1]`\n  - `[1 2]       => [2]`\n  - `[1]         => []`\n  - `[  1  ]     => []`\n  - `[1 [2 3] 4] => [1 [2 3]]`\n  - `[1 [2 3] 4] => [[2 3] 4]`\n\n   If a node is located rightmost, both preceding and trailing spaces are removed,\n   otherwise only trailing spaces are touched. This means that a following element\n   (no matter whether on the same line or not) will end up in the same position\n   (line/column) as the removed one, _unless_ a comment lies between the original\n   node and the neighbour.\"\n  [zloc]\n  {:pre [zloc]\n   :post [%]}\n  (->> (-> (if (or (m/rightmost? zloc)\n                   (m/leftmost? zloc))\n             (remove-preceding-space zloc ws/whitespace?)\n             zloc)\n           (remove-trailing-space ws/whitespace?)\n           z/remove)\n       (ws/skip-whitespace z/prev)))\n\n(defn remove-preserve-newline\n  \"Same as remove but preserves newlines\"\n  [zloc]\n  {:pre [zloc]\n   :post [%]}\n  (->> (-> (if (or (m/rightmost? zloc)\n                   (m/leftmost? zloc))\n             (remove-preceding-space zloc #(and (ws/whitespace? %)\n                                                (not (ws/linebreak? %))))\n             zloc)\n           (remove-trailing-space #(and (ws/whitespace? %)\n                                                (not (ws/linebreak? %))))\n           z/remove)\n       (ws/skip-whitespace z/prev)))\n\n","~:reader-features",["^J",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings",";AAQA;;;AAAA,AAAOA,AAEJC,AAAKC;AAFR,AAGE,AAACC,AAAqBF,AAAKC;;AAE7B;;;AAAA,AAAOE,AAEJH,AAAKC;AAFR,AAGE,AAACG,AAAoBJ,AAAKC;;AAE5B;;;;;;;;;;;;;;;;;;;AAAA,AAAMM,AAkBHP;AAlBH,AAAA,AAmBSA;AAnBT;AAAA,AAAA,AAAA,AAAAK,AAAA;;;AAAA,AAAAC,AAqBO,AAAI,AAAI,AAAI,AAACE,AAAaR,AACd,AAACS,AAAYT,AACnB,AAACG,AAAuBH,AAAKU,AAC7BV,AACF,AAACD,AAAsBW,AACvBC,AACJ,AAACC,AAAmBC;AA3B3B,AAAA,AAoBUP;AApBV;AAAA,AAAA,AAAA,AAAAD,AAAA;;;AAAAC;;AA6BA;;;AAAA,AAAMQ,AAEHd;AAFH,AAAA,AAGSA;AAHT;AAAA,AAAA,AAAA,AAAAK,AAAA;;;AAAA,AAAAC,AAKO,AAAI,AAAI,AAAI,AAACE,AAAaR,AACd,AAACS,AAAYT,AACnB,AAAA,AAAAe,AAACZ,AAAuBH,AAG1B,AAACD,AAEDY,AACJ,AAACC,AAAmBC;AANd,AAA8B,AAAAG,AAAK,AAAAD,AAACL;AAAN,AAAA,AAAAM;AACK,AAACC,AAAI,AAAAF,AAACG;;AADXF;;AAE9BhB,AACF,AAAAmB;AAAA,AAAwB,AAAAH,AAAK,AAAAG,AAACT;AAAN,AAAA,AAAAM;AACa,AAACC,AAAI,AAAAE,AAACD;;AADnBF;;;AAVnC,AAAA,AAIUV;AAJV;AAAA,AAAA,AAAA,AAAAD,AAAA;;;AAAAC","names",["rewrite-clj.zip.removez/remove-trailing-space","zloc","p?","rewrite-clj.zip.utils/remove-right-while","rewrite-clj.zip.removez/remove-preceding-space","rewrite-clj.zip.utils/remove-left-while","js/Error","%","rewrite-clj.zip.removez/remove","rewrite-clj.zip.move/rightmost?","rewrite-clj.zip.move/leftmost?","rewrite-clj.zip.whitespace/whitespace?","clojure.zip/remove","rewrite_clj.zip.whitespace.skip_whitespace","clojure.zip/prev","rewrite-clj.zip.removez/remove-preserve-newline","p1__69707#","and__4115__auto__","cljs.core/not","rewrite-clj.zip.whitespace/linebreak?","p1__69708#"]],"~:used-vars",["^J",["~$rewrite-clj.zip.removez/remove-trailing-space","~$rewrite-clj.zip.utils/remove-left-while","~$rewrite-clj.zip.removez/remove-preceding-space","~$rewrite-clj.zip.removez/remove","~$rewrite-clj.zip.utils/remove-right-while","~$js/Error","~$rewrite-clj.zip.removez/remove-preserve-newline"]]],"~:cache-keys",["~#cmap",[["^1;","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^J",[]],"~:deps-syms",["^W","~$goog.dom.HtmlElement"]]],["^1;","rewrite_clj/node/token.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^T","~$rewrite-clj.node.protocols"]]],["^1;","cljs/tools/reader/impl/utils.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^T","~$clojure.string","~$goog.string"]]],["^1;","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","~$goog.array","~$goog.asserts"]]],["^1;","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W"]]],["^1;","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^1X","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^1;","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^1Y","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^20"]]],["^1;","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^1Y"]]],["^1;","rewrite_clj/zip/move.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^T","^V","^R"]]],["^1;","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W"]]],["^1;","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W"]]],["^1;","cljs/tools/reader/impl/inspect.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^T"]]],["^1;","cljs/tools/reader.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^T","~$cljs.tools.reader.reader-types","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader.impl.errors","^1X","^1W","~$goog.string.StringBuffer"]]],["^1;","rewrite_clj/node/forms.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^T","^1U"]]],["^1;","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W"]]],["^1;","rewrite_clj/zip/utils.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^T","^R"]]],["^1;","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W"]]],["^1;","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^1Y"]]],"~:SHADOW-TIMESTAMP",[1668744077000,1668744077000,1668745156000],["^1;","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^1Y","~$goog.reflect"]]],["^1;","rewrite_clj/node/reader_macro.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^T","^1U","~$rewrite-clj.node.whitespace"]]],["^1;","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^1Y","~$goog.html.trustedtypes","^23","^24","^25","^26"]]],["^1;","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W"]]],["^1;","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W"]]],["^1;","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^1X","^1Y","~$goog.html.SafeUrl","^25","^26","^20"]]],["^1;","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^1Y","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^2@","^22","~$goog.html.uncheckedconversions","^25","^20"]]],["^1;","clojure/walk.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^T"]]],["^1;","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1;","rewrite_clj/node/meta.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^T","^1U","^2>"]]],["^1;","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^1X","^1Y","~$goog.dom.TagName","~$goog.dom.tags","^2D","^2E","~$goog.html.SafeStyleSheet","^2@","^22","^2?","^23","^24","~$goog.labs.userAgent.browser","^1[","^25","^26","^20"]]],["^1;","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^1["]]],["^1;","rewrite_clj/node/stringz.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^T","^1U","~$cljs.tools.reader","^1V"]]],["^1;","rewrite_clj/node/comment.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^T","^1U"]]],["^1;","rewrite_clj/node/keyword.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^T","^1U"]]],["^1;","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1;","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^1X","^1Y","^1W","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1;","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W"]]],["^1;","rewrite_clj/node/protocols.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^T","^1V"]]],["^1;","rewrite_clj/node/seq.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^T","^1U"]]],["^1;","rewrite_clj/node/uneval.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^T","^1U"]]],["^1;","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W"]]],["^1;","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",[]]],["^1;","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^1X","^1["]]],["^1;","cljs/tools/reader/impl/errors.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^T","^27","^1V","~$cljs.tools.reader.impl.inspect"]]],["^1;","rewrite_clj/node/whitespace.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^T","^1U"]]],["^1;","rewrite_clj/node/coercer.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^T","~$rewrite-clj.node.comment","~$rewrite-clj.node.forms","~$rewrite-clj.node.keyword","~$rewrite-clj.node.quote","~$rewrite-clj.node.stringz","~$rewrite-clj.node.uneval","~$rewrite-clj.node.meta","~$rewrite-clj.node.fn","^1U","~$rewrite-clj.node.reader-macro","~$rewrite-clj.node.seq","~$rewrite-clj.node.token","^2>"]]],["^1;","clojure/string.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^T","^1W","^2;"]]],["^1;","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","~$goog.dom.safe","^2F","^25","^20"]]],["^1;","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W"]]],["^1;","rewrite_clj/node/fn.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^T","^1U","~$clojure.walk"]]],["^1;","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^20"]]],["^1;","rewrite_clj/node.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^T","~$rewrite-clj.node.coercer","^1U","^2X","^33","^2>","^34","^2V","^2W","^30","^2Z","^32","^2Y","^2[","^31"]]],["^1;","rewrite_clj/zip/removez.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^T","^X","^S","^V","^R"]]],["^1;","clojure/zip.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^T"]]],["^1;","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W"]]],["^1;","cljs/tools/reader/reader_types.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^T","^28","^1W","^2;"]]],["^1;","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^1X","^1Y","^2B","~$goog.math"]]],["^1;","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^1Y","^2C","^2D","^2E","^2K","^2@","^22","^25","^20"]]],["^1;","rewrite_clj/node/quote.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^T","^1U"]]],["^1;","cljs/tools/reader/impl/commons.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^T","^2:","^27","^28"]]],["^1;","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W"]]],["^1;","cljs/core.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","~$goog.math.Long","~$goog.math.Integer","^1W","^1[","^1X","~$goog.Uri","^2;"]]],["^1;","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^1Y","^2?","^25","^26"]]],["^1;","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^1X","^1Y","^2E","^1[","^25","^26","^20"]]],["^1;","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^2="]]],["^1;","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^1X","^1Y","^1W"]]],["^1;","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^1Y","^26"]]],["^1;","rewrite_clj/zip/whitespace.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^1P",["^ ","^1Q",null,"^1R",["^J",[]],"^1S",["^W","^T","~$rewrite-clj.node","^R"]]]]],"~:clj-info",["^ ","jar:file:/home/riz/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/tagged_literals.cljc",1668745156000,"jar:file:/home/riz/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/source_map/base64.clj",1668745156000,"jar:file:/home/riz/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1652431301000,"jar:file:/home/riz/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/cljs/tools/reader/reader_types.clj",1659945934000,"jar:file:/home/riz/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1659945934000,"jar:file:/home/riz/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1652431301000,"jar:file:/home/riz/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1652431301000,"jar:file:/home/riz/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/compiler.cljc",1668745156000,"jar:file:/home/riz/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/util.cljc",1668745156000,"jar:file:/home/riz/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1652431301000,"jar:file:/home/riz/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1652431301000,"jar:file:/home/riz/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1659945934000,"jar:file:/home/riz/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1659945934000,"jar:file:/home/riz/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/env.cljc",1668745156000,"jar:file:/home/riz/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1659945905000,"jar:file:/home/riz/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/externs.clj",1668745156000,"jar:file:/home/riz/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/source_map/base64_vlq.clj",1668745156000,"jar:file:/home/riz/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/js_deps.cljc",1668745156000,"jar:file:/home/riz/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/analyzer.cljc",1668745156000,"jar:file:/home/riz/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1652431301000,"jar:file:/home/riz/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1659945934000,"jar:file:/home/riz/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1652431301000,"jar:file:/home/riz/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/source_map.clj",1668745156000,"jar:file:/home/riz/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1659945934000,"jar:file:/home/riz/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/core.cljc",1668745156000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","rewrite_clj/zip/removez.cljs","^7",1,"^8",5,"^9",1,"^:",28],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G"],"^H",null,"^I",["^J",["^K"]],"^L","^M","^P",null,"^Q",["^ ","^R","^R","~$u","^S","^T","^T","^U","^V","^W","^W","~$m","^X","^V","^V","^X","^X","~$z","^R","^S","^S"],"^Y",["^J",["^Z"]],"~:shadow/js-access-global",["^J",["Error"]],"^[",null,"~:defs",["^ ","~$remove-trailing-space",["^ ","~:protocol-inline",null,"^5",["^ ","^6","rewrite_clj/zip/removez.cljs","^7",9,"^8",8,"^9",9,"^:",29,"~:private",true,"~:arglists",["^12",["~$quote",["^12",[["~$zloc","~$p?"]]]]],"~:doc","Remove all whitespace following a given node."],"^40",true,"^L","^1G","^6","rewrite_clj/zip/removez.cljs","^:",29,"~:method-params",["^12",[["^43","^44"]]],"~:protocol-impl",null,"~:arglists-meta",["^12",[null,null]],"^8",1,"~:variadic?",false,"^7",9,"~:ret-tag","~$any","^9",9,"~:max-fixed-arity",2,"~:fn-var",true,"^41",["^12",["^42",["^12",[["^43","^44"]]]]],"^45","Remove all whitespace following a given node."],"~$remove-preceding-space",["^ ","^3[",null,"^5",["^ ","^6","rewrite_clj/zip/removez.cljs","^7",14,"^8",8,"^9",14,"^:",30,"^40",true,"^41",["^12",["^42",["^12",[["^43","^44"]]]]],"^45","Remove all whitespace preceding a given node."],"^40",true,"^L","^1I","^6","rewrite_clj/zip/removez.cljs","^:",30,"^46",["^12",[["^43","^44"]]],"^47",null,"^48",["^12",[null,null]],"^8",1,"^49",false,"^7",14,"^4:","^4;","^9",14,"^4<",2,"^4=",true,"^41",["^12",["^42",["^12",[["^43","^44"]]]]],"^45","Remove all whitespace preceding a given node."],"^K",["^ ","^3[",null,"^5",["^ ","^6","rewrite_clj/zip/removez.cljs","^7",19,"^8",7,"^9",19,"^:",13,"^41",["^12",["^42",["^12",[["^43"]]]]],"^45","Remove value at the given zipper location. Returns the first non-whitespace\n   node that would have preceded it in a depth-first walk. Will remove whitespace\n   appropriately.\n\n  - `[1  2  3]   => [1  3]`\n  - `[1 2]       => [1]`\n  - `[1 2]       => [2]`\n  - `[1]         => []`\n  - `[  1  ]     => []`\n  - `[1 [2 3] 4] => [1 [2 3]]`\n  - `[1 [2 3] 4] => [[2 3] 4]`\n\n   If a node is located rightmost, both preceding and trailing spaces are removed,\n   otherwise only trailing spaces are touched. This means that a following element\n   (no matter whether on the same line or not) will end up in the same position\n   (line/column) as the removed one, _unless_ a comment lies between the original\n   node and the neighbour."],"^L","^1J","^6","rewrite_clj/zip/removez.cljs","^:",13,"^46",["^12",[["^43"]]],"^47",null,"^48",["^12",[null,null]],"^8",1,"^49",false,"^7",19,"^4:",["^J",["^4;","~$clj-nil"]],"^9",19,"^4<",1,"^4=",true,"^41",["^12",["^42",["^12",[["^43"]]]]],"^45","Remove value at the given zipper location. Returns the first non-whitespace\n   node that would have preceded it in a depth-first walk. Will remove whitespace\n   appropriately.\n\n  - `[1  2  3]   => [1  3]`\n  - `[1 2]       => [1]`\n  - `[1 2]       => [2]`\n  - `[1]         => []`\n  - `[  1  ]     => []`\n  - `[1 [2 3] 4] => [1 [2 3]]`\n  - `[1 [2 3] 4] => [[2 3] 4]`\n\n   If a node is located rightmost, both preceding and trailing spaces are removed,\n   otherwise only trailing spaces are touched. This means that a following element\n   (no matter whether on the same line or not) will end up in the same position\n   (line/column) as the removed one, _unless_ a comment lies between the original\n   node and the neighbour."],"~$remove-preserve-newline",["^ ","^3[",null,"^5",["^ ","^6","rewrite_clj/zip/removez.cljs","^7",48,"^8",7,"^9",48,"^:",30,"^41",["^12",["^42",["^12",[["^43"]]]]],"^45","Same as remove but preserves newlines"],"^L","^1M","^6","rewrite_clj/zip/removez.cljs","^:",30,"^46",["^12",[["^43"]]],"^47",null,"^48",["^12",[null,null]],"^8",1,"^49",false,"^7",48,"^4:",["^J",["^4;","^4?"]],"^9",48,"^4<",1,"^4=",true,"^41",["^12",["^42",["^12",[["^43"]]]]],"^45","Same as remove but preserves newlines"]],"^10",["^ ","^T","^T"],"^17",["^ ","^Z",["^J",[]]],"^18",["^ "],"^19",["^W","^T","^X","^S","^V","^R"]],"^O","^M","~:ns-specs",["^ "],"~:ns-spec-vars",["^J",[]],"~:compiler-options",["^1O",[["^4C","~:static-fns"],true,["^4C","~:shadow-tweaks"],null,["^4C","~:source-map-inline"],null,["^4C","~:elide-asserts"],false,["^4C","~:optimize-constants"],null,["^4C","^1>"],null,["^4C","~:external-config"],null,["^4C","~:tooling-config"],null,["^4C","~:emit-constants"],null,["^4C","~:load-tests"],null,["^4C","~:form-size-threshold"],null,["^4C","~:data-readers"],null,["^4C","~:infer-externs"],"~:auto",["^4C","^1@"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^4C","~:fn-invoke-direct"],null,["^4C","~:source-map"],"/dev/null"]]]