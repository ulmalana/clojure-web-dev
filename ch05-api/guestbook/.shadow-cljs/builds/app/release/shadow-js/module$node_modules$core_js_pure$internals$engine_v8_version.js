["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/core-js-pure/internals/engine-v8-version.js"],"~:js","shadow$provide[36]=function(f,d,h,l){f=d(14);d=d(35);l=f.process;f=f.Deno;f=(f=l&&l.versions||f&&f.version)&&f.v8;if(f){f=f.split(\".\");var k=0<f[0]&&4>f[0]?1:+(f[0]+f[1])}!k&&d&&(f=d.match(/Edge\\/(\\d+)/),(!f||74<=f[1])&&(f=d.match(/Chrome\\/(\\d+)/))&&(k=+f[1]));h.exports=k}","~:source","shadow$provide[36] = function(global,require,module,exports) {\nvar global = require('../internals/global');\nvar userAgent = require('../internals/engine-user-agent');\n\nvar process = global.process;\nvar Deno = global.Deno;\nvar versions = process && process.versions || Deno && Deno.version;\nvar v8 = versions && versions.v8;\nvar match, version;\n\nif (v8) {\n  match = v8.split('.');\n  // in old Chrome, versions of V8 isn't V8 = Chrome / 10\n  // but their correct versions are not interesting for us\n  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);\n}\n\n// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`\n// so check `userAgent` even if `.v8` exists, but 0\nif (!version && userAgent) {\n  match = userAgent.match(/Edge\\/(\\d+)/);\n  if (!match || match[1] >= 74) {\n    match = userAgent.match(/Chrome\\/(\\d+)/);\n    if (match) version = +match[1];\n  }\n}\n\nmodule.exports = version;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$core_js_pure$internals$engine_user_agent","~$shadow.js","~$module$node_modules$core_js_pure$internals$global"]],"~:properties",["^5",[]],"~:compiled-at",1668766213313,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$core_js_pure$internals$engine_v8_version.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAe,EAAf,CAAA,CAAqB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CACzDH,CAAJ,CAAaC,CAAA,CAAQ,EAAR,CACTG,EAAAA,CAAYH,CAAA,CAAQ,EAAR,CAEZI,EAAAA,CAAUL,CAAVK,CAAiBA,OACjBC,EAAAA,CAAON,CAAPM,CAAcA,IAEdC,EAAAA,EADAC,CACAD,CADWF,CACXE,EADsBF,CACtBE,CAD8BC,QAC9BD,EAD0CD,CAC1CC,EADkDD,CAClDC,CADuDE,OACvDF,GAAiBC,CAAjBD,CAA0BA,EAG9B,IAAIA,CAAJ,CAAQ,CACNG,CAAA,CAAQH,CAAA,CAAGI,KAAH,CAAS,GAAT,CAGR,KAAAF,EAAqB,CAAX,CAAAC,CAAA,CAAM,CAAN,CAAA,EAA2B,CAA3B,CAAgBA,CAAA,CAAM,CAAN,CAAhB,CAA+B,CAA/B,CAAmC,EAAEA,CAAA,CAAM,CAAN,CAAF,CAAaA,CAAA,CAAM,CAAN,CAAb,CAJvC,CASJ,CAACD,CAAL,EAAgBL,CAAhB,GACEM,CACA,CADQN,CAAA,CAAUM,KAAV,CAAgB,aAAhB,CACR,EAAI,CAACA,CAAL,EAA0B,EAA1B,EAAcA,CAAA,CAAM,CAAN,CAAd,IACEA,CADF,CACUN,CAAA,CAAUM,KAAV,CAAgB,eAAhB,CADV,IAEaD,CAFb,CAEuB,CAACC,CAAA,CAAM,CAAN,CAFxB,CAFF,CAQAR,EAAA,CAAOC,OAAP,CAAiBM,CA3B4C;\",\n\"sources\":[\"node_modules/core-js-pure/internals/engine-v8-version.js\"],\n\"sourcesContent\":[\"shadow$provide[36] = function(global,require,module,exports) {\\nvar global = require('../internals/global');\\nvar userAgent = require('../internals/engine-user-agent');\\n\\nvar process = global.process;\\nvar Deno = global.Deno;\\nvar versions = process && process.versions || Deno && Deno.version;\\nvar v8 = versions && versions.v8;\\nvar match, version;\\n\\nif (v8) {\\n  match = v8.split('.');\\n  // in old Chrome, versions of V8 isn't V8 = Chrome / 10\\n  // but their correct versions are not interesting for us\\n  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);\\n}\\n\\n// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`\\n// so check `userAgent` even if `.v8` exists, but 0\\nif (!version && userAgent) {\\n  match = userAgent.match(/Edge\\\\/(\\\\d+)/);\\n  if (!match || match[1] >= 74) {\\n    match = userAgent.match(/Chrome\\\\/(\\\\d+)/);\\n    if (match) version = +match[1];\\n  }\\n}\\n\\nmodule.exports = version;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"userAgent\",\"process\",\"Deno\",\"v8\",\"versions\",\"version\",\"match\",\"split\"]\n}\n"]