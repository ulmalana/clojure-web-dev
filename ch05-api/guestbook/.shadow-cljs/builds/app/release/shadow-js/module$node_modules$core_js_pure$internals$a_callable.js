["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/core-js-pure/internals/a-callable.js"],"~:js","shadow$provide[41]=function(f,d,h,l){var k=d(22),n=d(40),q=TypeError;h.exports=function(r){if(k(r))return r;throw q(n(r)+\" is not a function\");}}","~:source","shadow$provide[41] = function(global,require,module,exports) {\nvar isCallable = require('../internals/is-callable');\nvar tryToString = require('../internals/try-to-string');\n\nvar $TypeError = TypeError;\n\n// `Assert: IsCallable(argument) is true`\nmodule.exports = function (argument) {\n  if (isCallable(argument)) return argument;\n  throw $TypeError(tryToString(argument) + ' is not a function');\n};\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$core_js_pure$internals$is_callable","~$shadow.js","~$module$node_modules$core_js_pure$internals$try_to_string"]],"~:properties",["^5",[]],"~:compiled-at",1668766213317,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$core_js_pure$internals$a_callable.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAe,EAAf,CAAA,CAAqB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAC7D,IAAIC,EAAaH,CAAA,CAAQ,EAAR,CAAjB,CACII,EAAcJ,CAAA,CAAQ,EAAR,CADlB,CAGIK,EAAaC,SAGjBL,EAAA,CAAOC,OAAP,CAAiBK,QAAS,CAACC,CAAD,CAAW,CACnC,GAAIL,CAAA,CAAWK,CAAX,CAAJ,CAA0B,MAAOA,EACjC,MAAMH,EAAA,CAAWD,CAAA,CAAYI,CAAZ,CAAX,CAAmC,oBAAnC,CAAN,CAFmC,CAPwB;\",\n\"sources\":[\"node_modules/core-js-pure/internals/a-callable.js\"],\n\"sourcesContent\":[\"shadow$provide[41] = function(global,require,module,exports) {\\nvar isCallable = require('../internals/is-callable');\\nvar tryToString = require('../internals/try-to-string');\\n\\nvar $TypeError = TypeError;\\n\\n// `Assert: IsCallable(argument) is true`\\nmodule.exports = function (argument) {\\n  if (isCallable(argument)) return argument;\\n  throw $TypeError(tryToString(argument) + ' is not a function');\\n};\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"isCallable\",\"tryToString\",\"$TypeError\",\"TypeError\",\"module.exports\",\"argument\"]\n}\n"]