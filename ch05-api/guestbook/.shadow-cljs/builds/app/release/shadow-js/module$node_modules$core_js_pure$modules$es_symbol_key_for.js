["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/core-js-pure/modules/es.symbol.key-for.js"],"~:js","shadow$provide[145]=function(f,d,h,l){f=d(63);var k=d(49),n=d(39),q=d(40);h=d(47);d=d(143);var r=h(\"symbol-to-string-registry\");f({target:\"Symbol\",stat:!0,forced:!d},{keyFor:function(v){if(!n(v))throw TypeError(q(v)+\" is not a symbol\");if(k(r,v))return r[v]}})}","~:source","shadow$provide[145] = function(global,require,module,exports) {\nvar $ = require('../internals/export');\nvar hasOwn = require('../internals/has-own-property');\nvar isSymbol = require('../internals/is-symbol');\nvar tryToString = require('../internals/try-to-string');\nvar shared = require('../internals/shared');\nvar NATIVE_SYMBOL_REGISTRY = require('../internals/symbol-registry-detection');\n\nvar SymbolToStringRegistry = shared('symbol-to-string-registry');\n\n// `Symbol.keyFor` method\n// https://tc39.es/ecma262/#sec-symbol.keyfor\n$({ target: 'Symbol', stat: true, forced: !NATIVE_SYMBOL_REGISTRY }, {\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(tryToString(sym) + ' is not a symbol');\n    if (hasOwn(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];\n  }\n});\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$core_js_pure$internals$export","~$module$node_modules$core_js_pure$internals$is_symbol","~$module$node_modules$core_js_pure$internals$has_own_property","~$module$node_modules$core_js_pure$internals$symbol_registry_detection","~$module$node_modules$core_js_pure$internals$try_to_string","~$module$node_modules$core_js_pure$internals$shared"]],"~:properties",["^5",["forced","stat","keyFor","target"]],"~:compiled-at",1668766213405,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$core_js_pure$modules$es_symbol_key_for.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAe,GAAf,CAAA,CAAsB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAC1DC,CAAAA,CAAIH,CAAA,CAAQ,EAAR,CACR,KAAII,EAASJ,CAAA,CAAQ,EAAR,CAAb,CACIK,EAAWL,CAAA,CAAQ,EAAR,CADf,CAEIM,EAAcN,CAAA,CAAQ,EAAR,CACdO,EAAAA,CAASP,CAAA,CAAQ,EAAR,CACTQ,EAAAA,CAAyBR,CAAA,CAAQ,GAAR,CAE7B,KAAIS,EAAyBF,CAAA,CAAO,2BAAP,CAI7BJ,EAAA,CAAE,CAAEO,OAAQ,QAAV,CAAoBC,KAAM,CAAA,CAA1B,CAAgCC,OAAQ,CAACJ,CAAzC,CAAF,CAAqE,CACnEK,OAAQA,QAAe,CAACC,CAAD,CAAM,CAC3B,GAAI,CAACT,CAAA,CAASS,CAAT,CAAL,CAAoB,KAAMC,UAAA,CAAUT,CAAA,CAAYQ,CAAZ,CAAV,CAA6B,kBAA7B,CAAN,CACpB,GAAIV,CAAA,CAAOK,CAAP,CAA+BK,CAA/B,CAAJ,CAAyC,MAAOL,EAAA,CAAuBK,CAAvB,CAFrB,CADsC,CAArE,CAZ8D;\",\n\"sources\":[\"node_modules/core-js-pure/modules/es.symbol.key-for.js\"],\n\"sourcesContent\":[\"shadow$provide[145] = function(global,require,module,exports) {\\nvar $ = require('../internals/export');\\nvar hasOwn = require('../internals/has-own-property');\\nvar isSymbol = require('../internals/is-symbol');\\nvar tryToString = require('../internals/try-to-string');\\nvar shared = require('../internals/shared');\\nvar NATIVE_SYMBOL_REGISTRY = require('../internals/symbol-registry-detection');\\n\\nvar SymbolToStringRegistry = shared('symbol-to-string-registry');\\n\\n// `Symbol.keyFor` method\\n// https://tc39.es/ecma262/#sec-symbol.keyfor\\n$({ target: 'Symbol', stat: true, forced: !NATIVE_SYMBOL_REGISTRY }, {\\n  keyFor: function keyFor(sym) {\\n    if (!isSymbol(sym)) throw TypeError(tryToString(sym) + ' is not a symbol');\\n    if (hasOwn(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];\\n  }\\n});\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"$\",\"hasOwn\",\"isSymbol\",\"tryToString\",\"shared\",\"NATIVE_SYMBOL_REGISTRY\",\"SymbolToStringRegistry\",\"target\",\"stat\",\"forced\",\"keyFor\",\"sym\",\"TypeError\"]\n}\n"]