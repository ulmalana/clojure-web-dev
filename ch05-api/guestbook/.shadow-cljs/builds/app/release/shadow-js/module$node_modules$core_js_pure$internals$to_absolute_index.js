["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/core-js-pure/internals/to-absolute-index.js"],"~:js","shadow$provide[77]=function(f,d,h,l){var k=d(76),n=Math.max,q=Math.min;h.exports=function(r,v){r=k(r);return 0>r?n(r+v,0):q(r,v)}}","~:source","shadow$provide[77] = function(global,require,module,exports) {\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nmodule.exports = function (index, length) {\n  var integer = toIntegerOrInfinity(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$core_js_pure$internals$to_integer_or_infinity"]],"~:properties",["^5",[]],"~:compiled-at",1668766213348,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$core_js_pure$internals$to_absolute_index.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAe,EAAf,CAAA,CAAqB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAC7D,IAAIC,EAAsBH,CAAA,CAAQ,EAAR,CAA1B,CAEII,EAAMC,IAAND,CAAWA,GAFf,CAGIE,EAAMD,IAANC,CAAWA,GAKfL,EAAA,CAAOC,OAAP,CAAiBK,QAAS,CAACC,CAAD,CAAQC,CAAR,CAAgB,CACpCC,CAAAA,CAAUP,CAAA,CAAoBK,CAApB,CACd,OAAiB,EAAV,CAAAE,CAAA,CAAcN,CAAA,CAAIM,CAAJ,CAAcD,CAAd,CAAsB,CAAtB,CAAd,CAAyCH,CAAA,CAAII,CAAJ,CAAaD,CAAb,CAFR,CATmB;\",\n\"sources\":[\"node_modules/core-js-pure/internals/to-absolute-index.js\"],\n\"sourcesContent\":[\"shadow$provide[77] = function(global,require,module,exports) {\\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\\n\\nvar max = Math.max;\\nvar min = Math.min;\\n\\n// Helper for a popular repeating case of the spec:\\n// Let integer be ? ToInteger(index).\\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\\nmodule.exports = function (index, length) {\\n  var integer = toIntegerOrInfinity(index);\\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\\n};\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"toIntegerOrInfinity\",\"max\",\"Math\",\"min\",\"module.exports\",\"index\",\"length\",\"integer\"]\n}\n"]