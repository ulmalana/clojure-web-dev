["^ ","~:output",["^ ","~:js","goog.provide('re_frame.fx');\nre_frame.fx.kind = new cljs.core.Keyword(null,\"fx\",\"fx\",-1237829572);\nre_frame.fx.reg_fx = (function re_frame$fx$reg_fx(id,handler){\nreturn re_frame.registrar.register_handler(re_frame.fx.kind,id,handler);\n});\n/**\n * An interceptor whose `:after` actions the contents of `:effects`. As a result,\n *   this interceptor is Domino 3.\n * \n *   This interceptor is silently added (by reg-event-db etc) to the front of\n *   interceptor chains for all events.\n * \n *   For each key in `:effects` (a map), it calls the registered `effects handler`\n *   (see `reg-fx` for registration of effect handlers).\n * \n *   So, if `:effects` was:\n *    {:dispatch  [:hello 42]\n *     :db        {...}\n *     :undo      \"set flag\"}\n * \n *   it will call the registered effect handlers for each of the map's keys:\n *   `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n *   value for that key - so in the example above the effect handler for :dispatch\n *   will be given one arg `[:hello 42]`.\n * \n *   You cannot rely on the ordering in which effects are executed, other than that\n *   `:db` is guaranteed to be executed first.\n */\nre_frame.fx.do_fx = re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),new cljs.core.Keyword(null,\"do-fx\",\"do-fx\",1194163050),new cljs.core.Keyword(null,\"after\",\"after\",594996914),(function re_frame$fx$do_fx_after(context){\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar _STAR_current_trace_STAR__orig_val__23068 = re_frame.trace._STAR_current_trace_STAR_;\nvar _STAR_current_trace_STAR__temp_val__23069 = re_frame.trace.start_trace(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668),new cljs.core.Keyword(\"event\",\"do-fx\",\"event/do-fx\",1357330452)], null));\n(re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__temp_val__23069);\n\ntry{try{var effects = new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292).cljs$core$IFn$_invoke$arity$1(context);\nvar effects_without_db = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(effects,new cljs.core.Keyword(null,\"db\",\"db\",993250759));\nvar temp__5735__auto___23179 = new cljs.core.Keyword(null,\"db\",\"db\",993250759).cljs$core$IFn$_invoke$arity$1(effects);\nif(cljs.core.truth_(temp__5735__auto___23179)){\nvar new_db_23180 = temp__5735__auto___23179;\nvar fexpr__23070_23181 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,new cljs.core.Keyword(null,\"db\",\"db\",993250759),false);\n(fexpr__23070_23181.cljs$core$IFn$_invoke$arity$1 ? fexpr__23070_23181.cljs$core$IFn$_invoke$arity$1(new_db_23180) : fexpr__23070_23181.call(null,new_db_23180));\n} else {\n}\n\nvar seq__23071 = cljs.core.seq(effects_without_db);\nvar chunk__23072 = null;\nvar count__23073 = (0);\nvar i__23074 = (0);\nwhile(true){\nif((i__23074 < count__23073)){\nvar vec__23088 = chunk__23072.cljs$core$IIndexed$_nth$arity$2(null,i__23074);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23088,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23088,(1),null);\nvar temp__5733__auto___23182 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___23182)){\nvar effect_fn_23183 = temp__5733__auto___23182;\n(effect_fn_23183.cljs$core$IFn$_invoke$arity$1 ? effect_fn_23183.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_23183.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__23184 = seq__23071;\nvar G__23185 = chunk__23072;\nvar G__23186 = count__23073;\nvar G__23187 = (i__23074 + (1));\nseq__23071 = G__23184;\nchunk__23072 = G__23185;\ncount__23073 = G__23186;\ni__23074 = G__23187;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__23071);\nif(temp__5735__auto__){\nvar seq__23071__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__23071__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__23071__$1);\nvar G__23188 = cljs.core.chunk_rest(seq__23071__$1);\nvar G__23189 = c__4556__auto__;\nvar G__23190 = cljs.core.count(c__4556__auto__);\nvar G__23191 = (0);\nseq__23071 = G__23188;\nchunk__23072 = G__23189;\ncount__23073 = G__23190;\ni__23074 = G__23191;\ncontinue;\n} else {\nvar vec__23091 = cljs.core.first(seq__23071__$1);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23091,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23091,(1),null);\nvar temp__5733__auto___23192 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___23192)){\nvar effect_fn_23193 = temp__5733__auto___23192;\n(effect_fn_23193.cljs$core$IFn$_invoke$arity$1 ? effect_fn_23193.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_23193.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__23194 = cljs.core.next(seq__23071__$1);\nvar G__23195 = null;\nvar G__23196 = (0);\nvar G__23197 = (0);\nseq__23071 = G__23194;\nchunk__23072 = G__23195;\ncount__23073 = G__23196;\ni__23074 = G__23197;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}finally {if(re_frame.trace.is_trace_enabled_QMARK_()){\nvar end__22806__auto___23198 = re_frame.interop.now();\nvar duration__22807__auto___23199 = (end__22806__auto___23198 - new cljs.core.Keyword(null,\"start\",\"start\",-355208981).cljs$core$IFn$_invoke$arity$1(re_frame.trace._STAR_current_trace_STAR_));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(re_frame.trace.traces,cljs.core.conj,cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"duration\",\"duration\",1444101068),duration__22807__auto___23199,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"end\",\"end\",-268185958),re_frame.interop.now()], 0)));\n\nre_frame.trace.run_tracing_callbacks_BANG_(end__22806__auto___23198);\n} else {\n}\n}}finally {(re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__orig_val__23068);\n}} else {\nvar effects = new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292).cljs$core$IFn$_invoke$arity$1(context);\nvar effects_without_db = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(effects,new cljs.core.Keyword(null,\"db\",\"db\",993250759));\nvar temp__5735__auto___23201 = new cljs.core.Keyword(null,\"db\",\"db\",993250759).cljs$core$IFn$_invoke$arity$1(effects);\nif(cljs.core.truth_(temp__5735__auto___23201)){\nvar new_db_23202 = temp__5735__auto___23201;\nvar fexpr__23102_23203 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,new cljs.core.Keyword(null,\"db\",\"db\",993250759),false);\n(fexpr__23102_23203.cljs$core$IFn$_invoke$arity$1 ? fexpr__23102_23203.cljs$core$IFn$_invoke$arity$1(new_db_23202) : fexpr__23102_23203.call(null,new_db_23202));\n} else {\n}\n\nvar seq__23103 = cljs.core.seq(effects_without_db);\nvar chunk__23104 = null;\nvar count__23105 = (0);\nvar i__23106 = (0);\nwhile(true){\nif((i__23106 < count__23105)){\nvar vec__23113 = chunk__23104.cljs$core$IIndexed$_nth$arity$2(null,i__23106);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23113,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23113,(1),null);\nvar temp__5733__auto___23205 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___23205)){\nvar effect_fn_23207 = temp__5733__auto___23205;\n(effect_fn_23207.cljs$core$IFn$_invoke$arity$1 ? effect_fn_23207.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_23207.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__23208 = seq__23103;\nvar G__23209 = chunk__23104;\nvar G__23210 = count__23105;\nvar G__23211 = (i__23106 + (1));\nseq__23103 = G__23208;\nchunk__23104 = G__23209;\ncount__23105 = G__23210;\ni__23106 = G__23211;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__23103);\nif(temp__5735__auto__){\nvar seq__23103__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__23103__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__23103__$1);\nvar G__23212 = cljs.core.chunk_rest(seq__23103__$1);\nvar G__23213 = c__4556__auto__;\nvar G__23214 = cljs.core.count(c__4556__auto__);\nvar G__23215 = (0);\nseq__23103 = G__23212;\nchunk__23104 = G__23213;\ncount__23105 = G__23214;\ni__23106 = G__23215;\ncontinue;\n} else {\nvar vec__23116 = cljs.core.first(seq__23103__$1);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23116,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23116,(1),null);\nvar temp__5733__auto___23220 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___23220)){\nvar effect_fn_23222 = temp__5733__auto___23220;\n(effect_fn_23222.cljs$core$IFn$_invoke$arity$1 ? effect_fn_23222.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_23222.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__23223 = cljs.core.next(seq__23103__$1);\nvar G__23224 = null;\nvar G__23225 = (0);\nvar G__23226 = (0);\nseq__23103 = G__23223;\nchunk__23104 = G__23224;\ncount__23105 = G__23225;\ni__23106 = G__23226;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n})], 0));\nre_frame.fx.dispatch_later = (function re_frame$fx$dispatch_later(p__23120){\nvar map__23121 = p__23120;\nvar map__23121__$1 = (((((!((map__23121 == null))))?(((((map__23121.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__23121.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__23121):map__23121);\nvar effect = map__23121__$1;\nvar ms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23121__$1,new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\nvar dispatch = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23121__$1,new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009));\nif(((cljs.core.empty_QMARK_(dispatch)) || ((!(typeof ms === 'number'))))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-later value:\",effect], 0));\n} else {\nreturn re_frame.interop.set_timeout_BANG_((function (){\nreturn re_frame.router.dispatch(dispatch);\n}),ms);\n}\n});\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch-later\",\"dispatch-later\",291951390),(function (value){\nif(cljs.core.map_QMARK_(value)){\nreturn re_frame.fx.dispatch_later(value);\n} else {\nvar seq__23123 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,value));\nvar chunk__23124 = null;\nvar count__23125 = (0);\nvar i__23126 = (0);\nwhile(true){\nif((i__23126 < count__23125)){\nvar effect = chunk__23124.cljs$core$IIndexed$_nth$arity$2(null,i__23126);\nre_frame.fx.dispatch_later(effect);\n\n\nvar G__23228 = seq__23123;\nvar G__23229 = chunk__23124;\nvar G__23230 = count__23125;\nvar G__23231 = (i__23126 + (1));\nseq__23123 = G__23228;\nchunk__23124 = G__23229;\ncount__23125 = G__23230;\ni__23126 = G__23231;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__23123);\nif(temp__5735__auto__){\nvar seq__23123__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__23123__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__23123__$1);\nvar G__23232 = cljs.core.chunk_rest(seq__23123__$1);\nvar G__23233 = c__4556__auto__;\nvar G__23234 = cljs.core.count(c__4556__auto__);\nvar G__23235 = (0);\nseq__23123 = G__23232;\nchunk__23124 = G__23233;\ncount__23125 = G__23234;\ni__23126 = G__23235;\ncontinue;\n} else {\nvar effect = cljs.core.first(seq__23123__$1);\nre_frame.fx.dispatch_later(effect);\n\n\nvar G__23236 = cljs.core.next(seq__23123__$1);\nvar G__23237 = null;\nvar G__23238 = (0);\nvar G__23239 = (0);\nseq__23123 = G__23236;\nchunk__23124 = G__23237;\ncount__23125 = G__23238;\ni__23126 = G__23239;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"fx\",\"fx\",-1237829572),(function (seq_of_effects){\nif((!(cljs.core.sequential_QMARK_(seq_of_effects)))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: \\\":fx\\\" effect expects a seq, but was given \",cljs.core.type(seq_of_effects)], 0));\n} else {\nvar seq__23134 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,seq_of_effects));\nvar chunk__23135 = null;\nvar count__23136 = (0);\nvar i__23137 = (0);\nwhile(true){\nif((i__23137 < count__23136)){\nvar vec__23144 = chunk__23135.cljs$core$IIndexed$_nth$arity$2(null,i__23137);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23144,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23144,(1),null);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"db\",\"db\",993250759),effect_key)){\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: \\\":fx\\\" effect should not contain a :db effect\"], 0));\n} else {\n}\n\nvar temp__5733__auto___23240 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___23240)){\nvar effect_fn_23241 = temp__5733__auto___23240;\n(effect_fn_23241.cljs$core$IFn$_invoke$arity$1 ? effect_fn_23241.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_23241.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: in \\\":fx\\\" effect found \",effect_key,\" which has no associated handler. Ignoring.\"], 0));\n}\n\n\nvar G__23242 = seq__23134;\nvar G__23243 = chunk__23135;\nvar G__23244 = count__23136;\nvar G__23245 = (i__23137 + (1));\nseq__23134 = G__23242;\nchunk__23135 = G__23243;\ncount__23136 = G__23244;\ni__23137 = G__23245;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__23134);\nif(temp__5735__auto__){\nvar seq__23134__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__23134__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__23134__$1);\nvar G__23246 = cljs.core.chunk_rest(seq__23134__$1);\nvar G__23247 = c__4556__auto__;\nvar G__23248 = cljs.core.count(c__4556__auto__);\nvar G__23249 = (0);\nseq__23134 = G__23246;\nchunk__23135 = G__23247;\ncount__23136 = G__23248;\ni__23137 = G__23249;\ncontinue;\n} else {\nvar vec__23147 = cljs.core.first(seq__23134__$1);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23147,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23147,(1),null);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"db\",\"db\",993250759),effect_key)){\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: \\\":fx\\\" effect should not contain a :db effect\"], 0));\n} else {\n}\n\nvar temp__5733__auto___23250 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___23250)){\nvar effect_fn_23251 = temp__5733__auto___23250;\n(effect_fn_23251.cljs$core$IFn$_invoke$arity$1 ? effect_fn_23251.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_23251.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: in \\\":fx\\\" effect found \",effect_key,\" which has no associated handler. Ignoring.\"], 0));\n}\n\n\nvar G__23252 = cljs.core.next(seq__23134__$1);\nvar G__23253 = null;\nvar G__23254 = (0);\nvar G__23255 = (0);\nseq__23134 = G__23252;\nchunk__23135 = G__23253;\ncount__23136 = G__23254;\ni__23137 = G__23255;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009),(function (value){\nif((!(cljs.core.vector_QMARK_(value)))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch value. Expected a vector, but got:\",value], 0));\n} else {\nreturn re_frame.router.dispatch(value);\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch-n\",\"dispatch-n\",-504469236),(function (value){\nif((!(cljs.core.sequential_QMARK_(value)))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-n value. Expected a collection, but got:\",value], 0));\n} else {\nvar seq__23162 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,value));\nvar chunk__23163 = null;\nvar count__23164 = (0);\nvar i__23165 = (0);\nwhile(true){\nif((i__23165 < count__23164)){\nvar event = chunk__23163.cljs$core$IIndexed$_nth$arity$2(null,i__23165);\nre_frame.router.dispatch(event);\n\n\nvar G__23263 = seq__23162;\nvar G__23264 = chunk__23163;\nvar G__23265 = count__23164;\nvar G__23266 = (i__23165 + (1));\nseq__23162 = G__23263;\nchunk__23163 = G__23264;\ncount__23164 = G__23265;\ni__23165 = G__23266;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__23162);\nif(temp__5735__auto__){\nvar seq__23162__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__23162__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__23162__$1);\nvar G__23267 = cljs.core.chunk_rest(seq__23162__$1);\nvar G__23268 = c__4556__auto__;\nvar G__23269 = cljs.core.count(c__4556__auto__);\nvar G__23270 = (0);\nseq__23162 = G__23267;\nchunk__23163 = G__23268;\ncount__23164 = G__23269;\ni__23165 = G__23270;\ncontinue;\n} else {\nvar event = cljs.core.first(seq__23162__$1);\nre_frame.router.dispatch(event);\n\n\nvar G__23271 = cljs.core.next(seq__23162__$1);\nvar G__23272 = null;\nvar G__23273 = (0);\nvar G__23274 = (0);\nseq__23162 = G__23271;\nchunk__23163 = G__23272;\ncount__23164 = G__23273;\ni__23165 = G__23274;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"deregister-event-handler\",\"deregister-event-handler\",-1096518994),(function (value){\nvar clear_event = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(re_frame.registrar.clear_handlers,re_frame.events.kind);\nif(cljs.core.sequential_QMARK_(value)){\nvar seq__23173 = cljs.core.seq(value);\nvar chunk__23174 = null;\nvar count__23175 = (0);\nvar i__23176 = (0);\nwhile(true){\nif((i__23176 < count__23175)){\nvar event = chunk__23174.cljs$core$IIndexed$_nth$arity$2(null,i__23176);\nclear_event(event);\n\n\nvar G__23275 = seq__23173;\nvar G__23276 = chunk__23174;\nvar G__23277 = count__23175;\nvar G__23278 = (i__23176 + (1));\nseq__23173 = G__23275;\nchunk__23174 = G__23276;\ncount__23175 = G__23277;\ni__23176 = G__23278;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__23173);\nif(temp__5735__auto__){\nvar seq__23173__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__23173__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__23173__$1);\nvar G__23279 = cljs.core.chunk_rest(seq__23173__$1);\nvar G__23280 = c__4556__auto__;\nvar G__23281 = cljs.core.count(c__4556__auto__);\nvar G__23282 = (0);\nseq__23173 = G__23279;\nchunk__23174 = G__23280;\ncount__23175 = G__23281;\ni__23176 = G__23282;\ncontinue;\n} else {\nvar event = cljs.core.first(seq__23173__$1);\nclear_event(event);\n\n\nvar G__23283 = cljs.core.next(seq__23173__$1);\nvar G__23284 = null;\nvar G__23285 = (0);\nvar G__23286 = (0);\nseq__23173 = G__23283;\nchunk__23174 = G__23284;\ncount__23175 = G__23285;\ni__23176 = G__23286;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n} else {\nreturn clear_event(value);\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"db\",\"db\",993250759),(function (value){\nif((!((cljs.core.deref(re_frame.db.app_db) === value)))){\nreturn cljs.core.reset_BANG_(re_frame.db.app_db,value);\n} else {\nreturn null;\n}\n}));\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","re_frame/fx.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",16],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$re-frame.fx","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$re-frame.interop","^K","~$re-frame.interceptor","^L","~$re-frame.events","^M","~$re-frame.trace","^N","~$re-frame.registrar","^O","~$cljs.core","^P","~$goog","^Q","~$router","~$re-frame.router","^S","^S","~$trace","^N","~$events","^M","~$re-frame.loggers","^V","~$re-frame.db","^W"],"~:seen",["^D",["~:require"]],"~:uses",["^ ","~$app-db","^W","~$->interceptor","^L","~$set-timeout!","^K","~$get-handler","^O","~$clear-handlers","^O","~$register-handler","^O","~$console","^V"],"~:require-macros",["^ ","^N","^N","^T","^N","^P","^P"],"~:form",["~#list",["~$ns","^F",["^18",["^Y",["^S","~:as","^R"],["^W","~:refer",["^["]],["^L","^1;",["^10"]],["^K","^1;",["^11"]],["^M","^1:","^U"],["^O","^1;",["^12","^13","^14"]],["^V","^1;",["^15"]],["^N","^1:","^T","~:include-macros",true]]]]],"~:flags",["^ ","^Y",["^D",[]]],"~:js-deps",["^ "],"~:deps",["^Q","^P","^S","^W","^L","^K","^M","^O","^V","^N"]],"^H","^F","~:resource-id",["~:shadow.build.classpath/resource","re_frame/fx.cljc"],"~:compiled-at",1668766225271,"~:resource-name","re_frame/fx.cljc","~:warnings",[],"~:source","(ns re-frame.fx\n  (:require\n    [re-frame.router      :as router]\n    [re-frame.db          :refer [app-db]]\n    [re-frame.interceptor :refer [->interceptor]]\n    [re-frame.interop     :refer [set-timeout!]]\n    [re-frame.events      :as events]\n    [re-frame.registrar   :refer [get-handler clear-handlers register-handler]]\n    [re-frame.loggers     :refer [console]]\n    [re-frame.trace :as trace :include-macros true]))\n\n\n;; -- Registration ------------------------------------------------------------\n\n(def kind :fx)\n(assert (re-frame.registrar/kinds kind))\n\n(defn reg-fx\n  [id handler]\n  (register-handler kind id handler))\n\n;; -- Interceptor -------------------------------------------------------------\n\n(def do-fx\n  \"An interceptor whose `:after` actions the contents of `:effects`. As a result,\n  this interceptor is Domino 3.\n\n  This interceptor is silently added (by reg-event-db etc) to the front of\n  interceptor chains for all events.\n\n  For each key in `:effects` (a map), it calls the registered `effects handler`\n  (see `reg-fx` for registration of effect handlers).\n\n  So, if `:effects` was:\n      {:dispatch  [:hello 42]\n       :db        {...}\n       :undo      \\\"set flag\\\"}\n\n  it will call the registered effect handlers for each of the map's keys:\n  `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n  value for that key - so in the example above the effect handler for :dispatch\n  will be given one arg `[:hello 42]`.\n\n  You cannot rely on the ordering in which effects are executed, other than that\n  `:db` is guaranteed to be executed first.\"\n  (->interceptor\n    :id :do-fx\n    :after (fn do-fx-after\n             [context]\n             (trace/with-trace\n               {:op-type :event/do-fx}\n               (let [effects            (:effects context)\n                     effects-without-db (dissoc effects :db)]\n                 ;; :db effect is guaranteed to be handled before all other effects.\n                 (when-let [new-db (:db effects)]\n                   ((get-handler kind :db false) new-db))\n                 (doseq [[effect-key effect-value] effects-without-db]\n                   (if-let [effect-fn (get-handler kind effect-key false)]\n                     (effect-fn effect-value)\n                     (console :warn \"re-frame: no handler registered for effect:\" effect-key \". Ignoring.\"))))))))\n\n;; -- Builtin Effect Handlers  ------------------------------------------------\n\n;; :dispatch-later\n;;\n;; `dispatch` one or more events after given delays. Expects a collection\n;; of maps with two keys:  :`ms` and `:dispatch`\n;;\n;; usage:\n;;\n;;    {:dispatch-later [{:ms 200 :dispatch [:event-id \"param\"]}    ;;  in 200ms do this: (dispatch [:event-id \"param\"])\n;;                      {:ms 100 :dispatch [:also :this :in :100ms]}]}\n;;\n;; Note: nil entries in the collection are ignored which means events can be added\n;; conditionally:\n;;    {:dispatch-later [ (when (> 3 5) {:ms 200 :dispatch [:conditioned-out]})\n;;                       {:ms 100 :dispatch [:another-one]}]}\n;;\n(defn dispatch-later\n  [{:keys [ms dispatch] :as effect}]\n  (if (or (empty? dispatch) (not (number? ms)))\n    (console :error \"re-frame: ignoring bad :dispatch-later value:\" effect)\n    (set-timeout! #(router/dispatch dispatch) ms)))\n\n(reg-fx\n  :dispatch-later\n  (fn [value]\n    (if (map? value)\n      (dispatch-later value)\n      (doseq [effect (remove nil? value)]\n        (dispatch-later effect)))))\n\n;; :fx\n;;\n;; Handle one or more effects. Expects a collection of vectors (tuples) of the\n;; form [effect-key effect-value]. `nil` entries in the collection are ignored\n;; so effects can be added conditionally.\n;;\n;; usage:\n;;\n;; {:fx [[:dispatch [:event-id \"param\"]]\n;;       nil\n;;       [:http-xhrio {:method :post\n;;                     ...}]]}\n;;\n\n(reg-fx\n  :fx\n  (fn [seq-of-effects]\n    (if-not (sequential? seq-of-effects)\n      (console :error \"re-frame: \\\":fx\\\" effect expects a seq, but was given \" (type seq-of-effects))\n      (doseq [[effect-key effect-value] (remove nil? seq-of-effects)]\n        (when (= :db effect-key)\n          (console :warn \"re-frame: \\\":fx\\\" effect should not contain a :db effect\"))\n        (if-let [effect-fn (get-handler kind effect-key false)]\n          (effect-fn effect-value)\n          (console :warn \"re-frame: in \\\":fx\\\" effect found \" effect-key \" which has no associated handler. Ignoring.\"))))))\n\n;; :dispatch\n;;\n;; `dispatch` one event. Expects a single vector.\n;;\n;; usage:\n;;   {:dispatch [:event-id \"param\"] }\n\n(reg-fx\n  :dispatch\n  (fn [value]\n    (if-not (vector? value)\n      (console :error \"re-frame: ignoring bad :dispatch value. Expected a vector, but got:\" value)\n      (router/dispatch value))))\n\n\n;; :dispatch-n\n;;\n;; `dispatch` more than one event. Expects a list or vector of events. Something for which\n;; sequential? returns true.\n;;\n;; usage:\n;;   {:dispatch-n (list [:do :all] [:three :of] [:these])}\n;;\n;; Note: nil events are ignored which means events can be added\n;; conditionally:\n;;    {:dispatch-n (list (when (> 3 5) [:conditioned-out])\n;;                       [:another-one])}\n;;\n(reg-fx\n  :dispatch-n\n  (fn [value]\n    (if-not (sequential? value)\n      (console :error \"re-frame: ignoring bad :dispatch-n value. Expected a collection, but got:\" value)\n      (doseq [event (remove nil? value)] (router/dispatch event)))))\n\n\n;; :deregister-event-handler\n;;\n;; removes a previously registered event handler. Expects either a single id (\n;; typically a namespaced keyword), or a seq of ids.\n;;\n;; usage:\n;;   {:deregister-event-handler :my-id)}\n;; or:\n;;   {:deregister-event-handler [:one-id :another-id]}\n;;\n(reg-fx\n  :deregister-event-handler\n  (fn [value]\n    (let [clear-event (partial clear-handlers events/kind)]\n      (if (sequential? value)\n        (doseq [event value] (clear-event event))\n        (clear-event value)))))\n\n\n;; :db\n;;\n;; reset! app-db with a new value. `value` is expected to be a map.\n;;\n;; usage:\n;;   {:db  {:key1 value1 key2 value2}}\n;;\n(reg-fx\n  :db\n  (fn [value]\n    (if-not (identical? @app-db value)\n      (reset! app-db value))))\n\n","~:reader-features",["^D",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["re-frame.fx/kind","re-frame.fx/reg-fx","id","handler","re-frame.registrar/register-handler","re-frame.fx/do-fx","re_frame.interceptor.__GT_interceptor","context","re-frame.trace/is-trace-enabled?","*current-trace*-orig-val__23068","re-frame.trace/*current-trace*","*current-trace*-temp-val__23069","re-frame.trace/start-trace","end__22806__auto__","re-frame.interop/now","duration__22807__auto__","cljs.core.swap_BANG_","re-frame.trace/traces","cljs.core/conj","cljs.core.assoc","re-frame.trace/run-tracing-callbacks!","effects","effects-without-db","cljs.core.dissoc","temp__5735__auto__","new-db","fexpr__23070","fexpr__23102","re_frame.registrar.get_handler","seq__23071","cljs.core/seq","chunk__23072","count__23073","i__23074","vec__23088","cljs.core.nth","cljs.core/chunked-seq?","c__4556__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","vec__23091","cljs.core/first","cljs.core/next","seq__23103","chunk__23104","count__23105","i__23106","vec__23113","vec__23116","effect-key","effect-value","temp__5733__auto__","effect-fn","re_frame.loggers.console","p__23120","map__23121","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","re-frame.fx/dispatch-later","ms","dispatch","effect","cljs.core/empty?","re-frame.interop/set-timeout!","re-frame.router/dispatch","value","cljs.core/map?","seq__23123","chunk__23124","count__23125","i__23126","cljs.core.remove","cljs.core/nil?","seq-of-effects","cljs.core/sequential?","cljs.core/type","seq__23134","chunk__23135","count__23136","i__23137","vec__23144","vec__23147","cljs.core._EQ_","cljs.core/vector?","seq__23162","chunk__23163","count__23164","i__23165","event","clear-event","cljs.core.partial","re-frame.registrar/clear-handlers","re-frame.events/kind","seq__23173","chunk__23174","count__23175","i__23176","cljs.core/deref","re-frame.db/app-db","cljs.core/reset!"]],"~:used-vars",["^D",["~$re-frame.fx/kind","~$cljs.core/sequential?","~$re-frame.fx/reg-fx","~$re-frame.db/app-db","~$re-frame.fx/do-fx","~$cljs.core/vector?","~$cljs.core/=","~$re-frame.trace/traces","~$re-frame.interceptor/->interceptor","~$cljs.core/count","~$cljs.core/deref","~$re-frame.fx/dispatch-later","~$re-frame.loggers/console","~$cljs.core/chunk-rest","~$re-frame.interop/now","~$cljs.core/empty?","~$cljs.core/map?","~$cljs.core/reset!","~$re-frame.registrar/register-handler","~$cljs.core/conj","~$cljs.core/swap!","~$re-frame.trace/is-trace-enabled?","~$re-frame.trace/*current-trace*","~$cljs.core/next","~$cljs.core/not","~$cljs.core/assoc","~$re-frame.router/dispatch","~$re-frame.trace/run-tracing-callbacks!","~$re-frame.interop/set-timeout!","~$cljs.core/type","~$cljs.core/chunked-seq?"]]],"~:cache-keys",["~#cmap",[["^1A","reagent/impl/batching.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^D",[]],"~:deps-syms",["^Q","^P","~$reagent.debug","~$reagent.impl.util"]]],["^1A","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","~$goog.dom.HtmlElement"]]],["^1A","goog/labs/useragent/platform.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","~$goog.labs.userAgent.util","~$goog.string"]]],["^1A","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","~$goog.array","~$goog.asserts"]]],["^1A","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q"]]],["^1A","goog/events/eventtype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","~$goog.events.BrowserFeature","~$goog.userAgent"]]],["^1A","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^2K","^2I","~$goog.object","~$goog.string.internal"]]],["^1A","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^2L","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^2P"]]],["^1A","re_frame/loggers.cljc"],["6bdd905f56b7d7836ae9d5b772dc693f33550f10","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^P","~$clojure.set"]]],["^1A","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^2L"]]],["^1A","reagent/impl/util.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^P","~$clojure.string","~$clojure.walk","^2O","^2F"]]],["^1A","goog/useragent/useragent.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^2I","~$goog.reflect","^2J"]]],["^1A","re_frame/router.cljc"],["6bdd905f56b7d7836ae9d5b772dc693f33550f10","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^P","^M","^K","^V","^N"]]],["^1A","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q"]]],["^1A","goog/events/events.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^2L","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","^2M","~$goog.events.Listenable","~$goog.events.ListenerMap"]]],["^1A","re_frame/registrar.cljc"],["6bdd905f56b7d7836ae9d5b772dc693f33550f10","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^P","^K","^V","~$re-frame.settings"]]],["^1A","goog/events/browserfeature.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^2N"]]],["^1A","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q"]]],["^1A","reagent/ratom.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^P","^2G","^2F","~$reagent.impl.batching","^2W","^2O"]]],["^1A","re_frame/interop.cljs"],["6bdd905f56b7d7836ae9d5b772dc693f33550f10","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^P","~$goog.async.nextTick","~$goog.events","~$reagent.core","~$reagent.ratom"]]],["^1A","goog/disposable/disposable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","~$goog.disposable.IDisposable"]]],["^1A","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q"]]],["~:shadow.build.npm/resource","node_modules/react/index.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","ec51811aee0e84dcb5ca27e77681d692f87bd8e2","a69a7f3d4a4636bf9035bc53c05b2d99a7b8af7f","^2B",["^ ","^2C",3,"^2D",["^D",[1,2]],"^2E",["~$shadow.js","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1A","shadow/js.js"],["fa1e82c50ca54c81300cceeb10716bdd3f414429","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q"]]],["^1A","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q"]]],["^1A","reagent/impl/template.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^2B",["^ ","^2C",null,"^2D",["^D",[3]],"^2E",["^Q","^P","^?","^2X","^2G","~$reagent.impl.component","^37","~$reagent.impl.input","~$reagent.impl.protocols","^3;","^2F","^2O"]]],["^1A","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^2L"]]],"~:SHADOW-TIMESTAMP",[1668744077000,1668744077000,1668745156000],["^3=","node_modules/react/cjs/react.development.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","ec51811aee0e84dcb5ca27e77681d692f87bd8e2","2d5bc5b3fb2e19279e31e634b0695b1fd96a54f3","^2B",["^ ","^2C",2,"^2D",["^D",[0]],"^2E",["^3>","~$module$node_modules$object_assign$index"]]],["^1A","re_frame/events.cljc"],["6bdd905f56b7d7836ae9d5b772dc693f33550f10","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^P","^W","~$re-frame.utils","^K","^O","^V","^L","^N"]]],["^1A","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^2L","^31"]]],["^1A","goog/events/listener.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","~$goog.events.ListenableKey"]]],["^1A","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^2L","~$goog.html.trustedtypes","^2S","^2T","^2U","^2V"]]],["^1A","goog/events/listenermap.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^2K","~$goog.events.Listener","^2O"]]],["^1A","goog/events/eventid.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q"]]],["^1A","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q"]]],["^1A","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q"]]],["^1A","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^2K","^2L","~$goog.html.SafeUrl","^2U","^2V","^2P"]]],["^1A","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^2L","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^3J","^2R","~$goog.html.uncheckedconversions","^2U","^2P"]]],["^1A","reagent/impl/component.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^2B",["^ ","^2C",null,"^2D",["^D",[3]],"^2E",["^Q","^P","^2O","^?","^2G","^37","^3C","^3;","^2F"]]],["^1A","clojure/walk.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^P"]]],["^1A","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1A","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^2K","^2L","~$goog.dom.TagName","~$goog.dom.tags","^3N","^3O","~$goog.html.SafeStyleSheet","^3J","^2R","^3H","^2S","^2T","^2Z","^2O","^2U","^2V","^2P"]]],["^1A","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^2O"]]],["^1A","goog/math/size.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q"]]],["^1A","goog/labs/useragent/engine.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^2K","^2I","^2J"]]],["^1A","re_frame/settings.cljc"],["6bdd905f56b7d7836ae9d5b772dc693f33550f10","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^P","^K","^V"]]],["^1A","goog/dom/dom.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^2K","^2L","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^3S","~$goog.dom.safe","^3M","^3P","~$goog.math.Coordinate","~$goog.math.Size","^2O","^2J","~$goog.string.Unicode","^2N"]]],["^1A","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","~$goog.debug.Error","^3W"]]],["^1A","reagent/impl/protocols.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^P"]]],["^1A","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^2K","^2L","^2J","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1A","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q"]]],["^3=","node_modules/object-assign/index.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","ec51811aee0e84dcb5ca27e77681d692f87bd8e2","519ffd5a4c91b67302cc9947b794966d629860cd","^2B",["^ ","^2C",0,"^2D",["^D",[]],"^2E",["^3>"]]],["^1A","re_frame/db.cljc"],["6bdd905f56b7d7836ae9d5b772dc693f33550f10","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^P","^K"]]],["^1A","goog/disposable/idisposable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q"]]],["^1A","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q"]]],["^1A","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",[]]],["^1A","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^2K","^2O"]]],["^1A","clojure/string.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^P","^2J","~$goog.string.StringBuffer"]]],["^3=","node_modules/react/cjs/react.production.min.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","ec51811aee0e84dcb5ca27e77681d692f87bd8e2","6093d43b27c84de58b9ce55e3a930469339c9e54","^2B",["^ ","^2C",1,"^2D",["^D",[0]],"^2E",["^3>","^3E"]]],["^1A","goog/debug/entrypointregistry.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^2L"]]],["^1A","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^3X","^3P","^2U","^2P"]]],["^1A","re_frame/interceptor.cljc"],["6bdd905f56b7d7836ae9d5b772dc693f33550f10","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^P","^V","^K","^N","^2W"]]],["^1A","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q"]]],["^1A","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^2P"]]],["^1A","reagent/core.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^2B",["^ ","^2C",null,"^2D",["^D",[3]],"^2E",["^Q","^P","^?","~$reagent.impl.template","^3A","^2G","^37","^3C","^3;","^2F"]]],["^1A","goog/debug/debug.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^2K","~$goog.debug.errorcontext","^2N"]]],["^1A","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q"]]],["^1A","goog/math/coordinate.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","~$goog.math"]]],["^1A","goog/debug/errorcontext.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q"]]],["^1A","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^2K","^2L","^3L","^49"]]],["^1A","goog/async/nexttick.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^32","~$goog.dom","^3S","^3X","^3L","^3M","^2R","^2Z","^2[","^2U"]]],["^1A","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^2L","^3M","^3N","^3O","^3U","^3J","^2R","^2U","^2P"]]],["^1A","re_frame/utils.cljc"],["6bdd905f56b7d7836ae9d5b772dc693f33550f10","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^P","^V"]]],["^1A","re_frame/fx.cljc"],["6bdd905f56b7d7836ae9d5b772dc693f33550f10","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^P","^S","^W","^L","^K","^M","^O","^V","^N"]]],["^1A","reagent/impl/input.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^P","^3A","^37","^3C"]]],["^1A","goog/events/event.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","~$goog.Disposable","~$goog.events.EventId"]]],["^1A","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q"]]],["^1A","cljs/core.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","~$goog.math.Long","~$goog.math.Integer","^2J","^2O","^2K","~$goog.Uri","^46"]]],["^1A","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^2L","^3H","^2U","^2V"]]],["^1A","reagent/debug.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^P"]]],["^1A","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^2K","^2L","^3O","^2O","^2U","^2V","^2P"]]],["^1A","goog/events/browserevent.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","~$goog.debug","^2M","~$goog.events.Event","~$goog.events.EventType","^31","^2N"]]],["^1A","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^31"]]],["^1A","goog/dom/browserfeature.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^2N"]]],["^1A","clojure/set.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^P"]]],["^1A","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^2K","^2L","^2J"]]],["^1A","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^2L","^2V"]]],["^1A","goog/events/listenable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^4<"]]],["^1A","re_frame/trace.cljc"],["6bdd905f56b7d7836ae9d5b772dc693f33550f10","^2B",["^ ","^2C",null,"^2D",["^D",[]],"^2E",["^Q","^P","^K","^V","^3L"]]]]],"~:clj-info",["^ ","jar:file:/home/riz/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/tagged_literals.cljc",1668745156000,"jar:file:/home/riz/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/source_map/base64.clj",1668745156000,"jar:file:/home/riz/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1652431301000,"jar:file:/home/riz/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1659945934000,"jar:file:/home/riz/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1652431301000,"jar:file:/home/riz/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1652431301000,"jar:file:/home/riz/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/compiler.cljc",1668745156000,"jar:file:/home/riz/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/util.cljc",1668745156000,"jar:file:/home/riz/.m2/repository/reagent/reagent/1.0.0/reagent-1.0.0.jar!/reagent/core.clj",1665291569000,"jar:file:/home/riz/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1652431301000,"jar:file:/home/riz/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1652431301000,"jar:file:/home/riz/.m2/repository/reagent/reagent/1.0.0/reagent-1.0.0.jar!/reagent/ratom.clj",1665291569000,"jar:file:/home/riz/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1659945934000,"jar:file:/home/riz/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1659945934000,"jar:file:/home/riz/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/env.cljc",1668745156000,"jar:file:/home/riz/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1659945905000,"jar:file:/home/riz/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/externs.clj",1668745156000,"jar:file:/home/riz/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/source_map/base64_vlq.clj",1668745156000,"jar:file:/home/riz/.m2/repository/reagent/reagent/1.0.0/reagent-1.0.0.jar!/reagent/debug.clj",1665291569000,"jar:file:/home/riz/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/js_deps.cljc",1668745156000,"jar:file:/home/riz/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/analyzer.cljc",1668745156000,"jar:file:/home/riz/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1652431301000,"jar:file:/home/riz/.m2/repository/re-frame/re-frame/1.1.2/re-frame-1.1.2.jar!/re_frame/trace.cljc",1668515819000,"jar:file:/home/riz/.m2/repository/reagent/reagent/1.0.0/reagent-1.0.0.jar!/reagent/interop.clj",1665291569000,"jar:file:/home/riz/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1659945934000,"jar:file:/home/riz/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1652431301000,"jar:file:/home/riz/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/source_map.clj",1668745156000,"jar:file:/home/riz/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1659945934000,"jar:file:/home/riz/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/core.cljc",1668745156000,"jar:file:/home/riz/.m2/repository/net/cgrand/macrovich/0.2.1/macrovich-0.2.1.jar!/net/cgrand/macrovich.cljc",1668515819000,"jar:file:/home/riz/.m2/repository/re-frame/re-frame/1.1.2/re-frame-1.1.2.jar!/re_frame/interop.clj",1668515819000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","re_frame/fx.cljc","^7",1,"^8",5,"^9",1,"^:",16],"^;",["^ ","^<","^=","^>","^?","^@","^A"],"^B",null,"^C",["^D",[]],"^E","^F","^I",null,"^J",["^ ","^K","^K","^L","^L","^M","^M","^N","^N","^O","^O","^P","^P","^Q","^Q","^R","^S","^S","^S","^T","^N","^U","^M","^V","^V","^W","^W"],"^X",["^D",["^Y"]],"^Z",["^ ","^[","^W","^10","^L","^11","^K","^12","^O","^13","^O","^14","^O","^15","^V"],"~:defs",["^ ","~$kind",["^ ","^E","^1M","^6","re_frame/fx.cljc","^7",15,"^8",1,"^9",15,"^:",10,"^5",["^ ","^6","re_frame/fx.cljc","^7",15,"^8",6,"^9",15,"^:",10],"~:tag","~$cljs.core/Keyword"],"~$reg-fx",["^ ","~:protocol-inline",null,"^5",["^ ","^6","re_frame/fx.cljc","^7",18,"^8",7,"^9",18,"^:",13,"~:arglists",["^18",["~$quote",["^18",[["~$id","~$handler"]]]]]],"^E","^1O","^6","re_frame/fx.cljc","^:",13,"~:method-params",["^18",[["^5@","^5A"]]],"~:protocol-impl",null,"~:arglists-meta",["^18",[null,null]],"^8",1,"~:variadic?",false,"^7",18,"~:ret-tag","~$any","^9",18,"~:max-fixed-arity",2,"~:fn-var",true,"^5>",["^18",["^5?",["^18",[["^5@","^5A"]]]]]],"~$do-fx",["^ ","^5",["^ ","^6","re_frame/fx.cljc","^7",24,"^8",6,"^9",24,"^:",11],"^E","^1Q","^6","re_frame/fx.cljc","^:",11,"^8",1,"^7",24,"^9",24,"^5:","~$cljs.core/IMap","~:doc","An interceptor whose `:after` actions the contents of `:effects`. As a result,\n  this interceptor is Domino 3.\n\n  This interceptor is silently added (by reg-event-db etc) to the front of\n  interceptor chains for all events.\n\n  For each key in `:effects` (a map), it calls the registered `effects handler`\n  (see `reg-fx` for registration of effect handlers).\n\n  So, if `:effects` was:\n      {:dispatch  [:hello 42]\n       :db        {...}\n       :undo      \"set flag\"}\n\n  it will call the registered effect handlers for each of the map's keys:\n  `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n  value for that key - so in the example above the effect handler for :dispatch\n  will be given one arg `[:hello 42]`.\n\n  You cannot rely on the ordering in which effects are executed, other than that\n  `:db` is guaranteed to be executed first."],"~$dispatch-later",["^ ","^5=",null,"^5",["^ ","^6","re_frame/fx.cljc","^7",79,"^8",7,"^9",79,"^:",21,"^5>",["^18",["^5?",["^18",[[["^ ","~:keys",["~$ms","~$dispatch"],"^1:","~$effect"]]]]]]],"^E","^1X","^6","re_frame/fx.cljc","^:",21,"^5B",["^18",[["~$p__23120"]]],"^5C",null,"^5D",["^18",[null,null]],"^8",1,"^5E",false,"^7",79,"^5F",["^D",["^5G","~$js"]],"^9",79,"^5H",1,"^5I",true,"^5>",["^18",["^5?",["^18",[[["^ ","^5N",["^5O","^5P"],"^1:","^5Q"]]]]]]]],"^16",["^ ","^N","^N","^T","^N","^P","^P"],"~:cljs.analyzer/constants",["^ ","^X",["^D",["~:db","~:warn","~:do-fx","~:start","~:dispatch-n","~:duration","~:deregister-event-handler","~:dispatch","~:after","~:event/do-fx","~:id","~:effects","~:error","~:end","~:ms","~:fx","~:op-type","~:dispatch-later"]],"~:order",["^68","^63","^5W","^61","^69","^62","^5X","^5Z","^66","^64","^5U","^5V","^67","^60","^65","^6:","^5Y","^5["]],"^1=",["^ ","^Y",["^D",[]]],"^1>",["^ "],"^1?",["^Q","^P","^S","^W","^L","^K","^M","^O","^V","^N"]],"^H","^F","~:ns-specs",["^ "],"~:ns-spec-vars",["^D",[]],"~:compiler-options",["^2A",[["^6>","~:static-fns"],true,["^6>","~:shadow-tweaks"],null,["^6>","~:source-map-inline"],null,["^6>","~:elide-asserts"],true,["^6>","~:optimize-constants"],null,["^6>","^1D"],null,["^6>","~:external-config"],null,["^6>","~:tooling-config"],null,["^6>","~:emit-constants"],null,["^6>","~:load-tests"],false,["^6>","~:form-size-threshold"],null,["^6>","~:data-readers"],null,["^6>","~:infer-externs"],"~:auto",["^6>","^1F"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:release",["^6>","~:fn-invoke-direct"],null,["^6>","~:source-map"],null]]]